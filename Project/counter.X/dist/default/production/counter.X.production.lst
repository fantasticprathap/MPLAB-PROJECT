

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Tue Apr 04 10:59:43 2023

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    10                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	text5,local,class=CODE,merge=1,delta=2
    13                           	dabs	1,0x7E,2
    14  0000                     
    15                           ; Version 2.20
    16                           ; Generated 12/02/2020 GMT
    17                           ; 
    18                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC16F887 Definitions
    47                           ; 
    48                           ; SFR Addresses
    49  0000                     	;# 
    50  0001                     	;# 
    51  0002                     	;# 
    52  0003                     	;# 
    53  0004                     	;# 
    54  0005                     	;# 
    55  0006                     	;# 
    56  0007                     	;# 
    57  0008                     	;# 
    58  0009                     	;# 
    59  000A                     	;# 
    60  000B                     	;# 
    61  000C                     	;# 
    62  000D                     	;# 
    63  000E                     	;# 
    64  000E                     	;# 
    65  000F                     	;# 
    66  0010                     	;# 
    67  0011                     	;# 
    68  0012                     	;# 
    69  0013                     	;# 
    70  0014                     	;# 
    71  0015                     	;# 
    72  0015                     	;# 
    73  0016                     	;# 
    74  0017                     	;# 
    75  0018                     	;# 
    76  0019                     	;# 
    77  001A                     	;# 
    78  001B                     	;# 
    79  001B                     	;# 
    80  001C                     	;# 
    81  001D                     	;# 
    82  001E                     	;# 
    83  001F                     	;# 
    84  0081                     	;# 
    85  0085                     	;# 
    86  0086                     	;# 
    87  0087                     	;# 
    88  0088                     	;# 
    89  0089                     	;# 
    90  008C                     	;# 
    91  008D                     	;# 
    92  008E                     	;# 
    93  008F                     	;# 
    94  0090                     	;# 
    95  0091                     	;# 
    96  0092                     	;# 
    97  0093                     	;# 
    98  0093                     	;# 
    99  0093                     	;# 
   100  0094                     	;# 
   101  0095                     	;# 
   102  0096                     	;# 
   103  0097                     	;# 
   104  0098                     	;# 
   105  0099                     	;# 
   106  009A                     	;# 
   107  009B                     	;# 
   108  009C                     	;# 
   109  009D                     	;# 
   110  009E                     	;# 
   111  009F                     	;# 
   112  0105                     	;# 
   113  0107                     	;# 
   114  0108                     	;# 
   115  0109                     	;# 
   116  010C                     	;# 
   117  010C                     	;# 
   118  010D                     	;# 
   119  010E                     	;# 
   120  010F                     	;# 
   121  0185                     	;# 
   122  0187                     	;# 
   123  0188                     	;# 
   124  0189                     	;# 
   125  018C                     	;# 
   126  018D                     	;# 
   127  0000                     	;# 
   128  0001                     	;# 
   129  0002                     	;# 
   130  0003                     	;# 
   131  0004                     	;# 
   132  0005                     	;# 
   133  0006                     	;# 
   134  0007                     	;# 
   135  0008                     	;# 
   136  0009                     	;# 
   137  000A                     	;# 
   138  000B                     	;# 
   139  000C                     	;# 
   140  000D                     	;# 
   141  000E                     	;# 
   142  000E                     	;# 
   143  000F                     	;# 
   144  0010                     	;# 
   145  0011                     	;# 
   146  0012                     	;# 
   147  0013                     	;# 
   148  0014                     	;# 
   149  0015                     	;# 
   150  0015                     	;# 
   151  0016                     	;# 
   152  0017                     	;# 
   153  0018                     	;# 
   154  0019                     	;# 
   155  001A                     	;# 
   156  001B                     	;# 
   157  001B                     	;# 
   158  001C                     	;# 
   159  001D                     	;# 
   160  001E                     	;# 
   161  001F                     	;# 
   162  0081                     	;# 
   163  0085                     	;# 
   164  0086                     	;# 
   165  0087                     	;# 
   166  0088                     	;# 
   167  0089                     	;# 
   168  008C                     	;# 
   169  008D                     	;# 
   170  008E                     	;# 
   171  008F                     	;# 
   172  0090                     	;# 
   173  0091                     	;# 
   174  0092                     	;# 
   175  0093                     	;# 
   176  0093                     	;# 
   177  0093                     	;# 
   178  0094                     	;# 
   179  0095                     	;# 
   180  0096                     	;# 
   181  0097                     	;# 
   182  0098                     	;# 
   183  0099                     	;# 
   184  009A                     	;# 
   185  009B                     	;# 
   186  009C                     	;# 
   187  009D                     	;# 
   188  009E                     	;# 
   189  009F                     	;# 
   190  0105                     	;# 
   191  0107                     	;# 
   192  0108                     	;# 
   193  0109                     	;# 
   194  010C                     	;# 
   195  010C                     	;# 
   196  010D                     	;# 
   197  010E                     	;# 
   198  010F                     	;# 
   199  0185                     	;# 
   200  0187                     	;# 
   201  0188                     	;# 
   202  0189                     	;# 
   203  018C                     	;# 
   204  018D                     	;# 
   205  0001                     _TMR0	set	1
   206  0009                     _PORTE	set	9
   207  0008                     _PORTD	set	8
   208  0005                     _PORTA	set	5
   209  0048                     _RE0	set	72
   210  0049                     _RE1	set	73
   211  0081                     _OPTION_REG	set	129
   212  0089                     _TRISE	set	137
   213  0088                     _TRISD	set	136
   214  0085                     _TRISA	set	133
   215  0189                     _ANSELH	set	393
   216  0188                     _ANSEL	set	392
   217                           
   218                           	psect	cinit
   219  07FC                     start_initialization:	
   220                           ; #config settings
   221                           
   222  07FC                     __initialization:
   223  07FC                     end_of_initialization:	
   224                           ;End of C runtime variable initialization code
   225                           
   226  07FC                     __end_of__initialization:
   227  07FC  0183               	clrf	3
   228  07FD  120A  118A  2E5A   	ljmp	_main	;jump to C main() function
   229                           
   230                           	psect	cstackCOMMON
   231  0070                     __pcstackCOMMON:
   232  0070                     ?_main:
   233  0070                     ?_pulse:	
   234                           ; 1 bytes @ 0x0
   235                           
   236  0070                     ??_pulse:	
   237                           ; 1 bytes @ 0x0
   238                           
   239  0070                     ?___awmod:	
   240                           ; 1 bytes @ 0x0
   241                           
   242  0070                     ___awmod@divisor:	
   243                           ; 2 bytes @ 0x0
   244                           
   245                           
   246                           ; 2 bytes @ 0x0
   247  0070                     	ds	2
   248  0072                     ?_LCD:
   249  0072                     LCD@g:	
   250                           ; 1 bytes @ 0x2
   251                           
   252  0072                     ___awmod@dividend:	
   253                           ; 2 bytes @ 0x2
   254                           
   255                           
   256                           ; 2 bytes @ 0x2
   257  0072                     	ds	2
   258  0074                     ??___awmod:
   259  0074                     LCD@h:	
   260                           ; 1 bytes @ 0x4
   261                           
   262                           
   263                           ; 2 bytes @ 0x4
   264  0074                     	ds	1
   265  0075                     ___awmod@counter:
   266                           
   267                           ; 1 bytes @ 0x5
   268  0075                     	ds	1
   269  0076                     ??_LCD:
   270  0076                     ___awmod@sign:	
   271                           ; 1 bytes @ 0x6
   272                           
   273                           
   274                           ; 1 bytes @ 0x6
   275  0076                     	ds	1
   276  0077                     ?___awdiv:
   277  0077                     ___awdiv@divisor:	
   278                           ; 2 bytes @ 0x7
   279                           
   280                           
   281                           ; 2 bytes @ 0x7
   282  0077                     	ds	2
   283  0079                     ___awdiv@dividend:
   284                           
   285                           ; 2 bytes @ 0x9
   286  0079                     	ds	2
   287  007B                     ??___awdiv:
   288                           
   289                           ; 1 bytes @ 0xB
   290  007B                     	ds	1
   291  007C                     ??_display:
   292  007C                     ??_main:	
   293                           ; 1 bytes @ 0xC
   294                           
   295                           
   296                           ; 1 bytes @ 0xC
   297  007C                     	ds	2
   298                           
   299                           	psect	cstackBANK0
   300  0020                     __pcstackBANK0:
   301  0020                     ___awdiv@counter:
   302                           
   303                           ; 1 bytes @ 0x0
   304  0020                     	ds	1
   305  0021                     ___awdiv@sign:
   306                           
   307                           ; 1 bytes @ 0x1
   308  0021                     	ds	1
   309  0022                     ___awdiv@quotient:
   310                           
   311                           ; 2 bytes @ 0x2
   312  0022                     	ds	2
   313  0024                     ?_display:
   314  0024                     display@k:	
   315                           ; 1 bytes @ 0x4
   316                           
   317                           
   318                           ; 2 bytes @ 0x4
   319  0024                     	ds	2
   320  0026                     display@a:
   321                           
   322                           ; 2 bytes @ 0x6
   323  0026                     	ds	2
   324  0028                     display@b:
   325                           
   326                           ; 2 bytes @ 0x8
   327  0028                     	ds	2
   328  002A                     display@c:
   329                           
   330                           ; 2 bytes @ 0xA
   331  002A                     	ds	2
   332                           
   333                           	psect	maintext
   334  065A                     __pmaintext:	
   335 ;;
   336 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   337 ;;
   338 ;; *************** function _main *****************
   339 ;; Defined at:
   340 ;;		line 15 in file "counter.c"
   341 ;; Parameters:    Size  Location     Type
   342 ;;		None
   343 ;; Auto vars:     Size  Location     Type
   344 ;;		None
   345 ;; Return value:  Size  Location     Type
   346 ;;                  1    wreg      void 
   347 ;; Registers used:
   348 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   349 ;; Tracked objects:
   350 ;;		On entry : B00/0
   351 ;;		On exit  : 0/0
   352 ;;		Unchanged: 0/0
   353 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   354 ;;      Params:         0       0       0       0       0
   355 ;;      Locals:         0       0       0       0       0
   356 ;;      Temps:          2       0       0       0       0
   357 ;;      Totals:         2       0       0       0       0
   358 ;;Total ram usage:        2 bytes
   359 ;; Hardware stack levels required when called: 3
   360 ;; This function calls:
   361 ;;		_LCD
   362 ;;		_display
   363 ;; This function is called by:
   364 ;;		Startup code after reset
   365 ;; This function uses a non-reentrant model
   366 ;;
   367                           
   368                           
   369                           ;psect for function _main
   370  065A                     _main:
   371  065A                     l889:	
   372                           ;incstack = 0
   373                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   374                           
   375                           
   376                           ;counter.c: 17:     TRISA=0X10;
   377  065A  3010               	movlw	16
   378  065B  1683               	bsf	3,5	;RP0=1, select bank1
   379  065C  1303               	bcf	3,6	;RP1=0, select bank1
   380  065D  0085               	movwf	5	;volatile
   381  065E                     l891:
   382                           
   383                           ;counter.c: 18:     PORTA=0X00;
   384  065E  1283               	bcf	3,5	;RP0=0, select bank0
   385  065F  1303               	bcf	3,6	;RP1=0, select bank0
   386  0660  0185               	clrf	5	;volatile
   387  0661                     l893:
   388                           
   389                           ;counter.c: 19:     TRISD=0X00;
   390  0661  1683               	bsf	3,5	;RP0=1, select bank1
   391  0662  1303               	bcf	3,6	;RP1=0, select bank1
   392  0663  0188               	clrf	8	;volatile
   393  0664                     l895:
   394                           
   395                           ;counter.c: 20:     PORTD=0X00;
   396  0664  1283               	bcf	3,5	;RP0=0, select bank0
   397  0665  1303               	bcf	3,6	;RP1=0, select bank0
   398  0666  0188               	clrf	8	;volatile
   399  0667                     l897:
   400                           
   401                           ;counter.c: 21:     TRISE=0X00;
   402  0667  1683               	bsf	3,5	;RP0=1, select bank1
   403  0668  1303               	bcf	3,6	;RP1=0, select bank1
   404  0669  0189               	clrf	9	;volatile
   405  066A                     l899:
   406                           
   407                           ;counter.c: 22:     PORTE=0X00;
   408  066A  1283               	bcf	3,5	;RP0=0, select bank0
   409  066B  1303               	bcf	3,6	;RP1=0, select bank0
   410  066C  0189               	clrf	9	;volatile
   411  066D                     l901:
   412                           
   413                           ;counter.c: 23:     ANSEL=0X00;
   414  066D  1683               	bsf	3,5	;RP0=1, select bank3
   415  066E  1703               	bsf	3,6	;RP1=1, select bank3
   416  066F  0188               	clrf	8	;volatile
   417  0670                     l903:
   418                           
   419                           ;counter.c: 24:     ANSELH=0X00;
   420  0670  0189               	clrf	9	;volatile
   421  0671                     l905:
   422                           
   423                           ;counter.c: 25:     OPTION_REG=0X21;
   424  0671  3021               	movlw	33
   425  0672  1683               	bsf	3,5	;RP0=1, select bank1
   426  0673  1303               	bcf	3,6	;RP1=0, select bank1
   427  0674  0081               	movwf	1	;volatile
   428                           
   429                           ;counter.c: 26:     TMR0=0;
   430  0675  1283               	bcf	3,5	;RP0=0, select bank0
   431  0676  1303               	bcf	3,6	;RP1=0, select bank0
   432  0677  0181               	clrf	1	;volatile
   433  0678                     l907:
   434                           
   435                           ;counter.c: 27:     LCD(0X02,0);
   436  0678  3002               	movlw	2
   437  0679  00F2               	movwf	LCD@g
   438  067A  3000               	movlw	0
   439  067B  00F3               	movwf	LCD@g+1
   440  067C  3000               	movlw	0
   441  067D  00F4               	movwf	LCD@h
   442  067E  00F5               	movwf	LCD@h+1
   443  067F  120A  118A  2632  120A  118A  	fcall	_LCD
   444  0684                     l909:
   445                           
   446                           ;counter.c: 28:     LCD(0X28,0);
   447  0684  3028               	movlw	40
   448  0685  00F2               	movwf	LCD@g
   449  0686  3000               	movlw	0
   450  0687  00F3               	movwf	LCD@g+1
   451  0688  3000               	movlw	0
   452  0689  00F4               	movwf	LCD@h
   453  068A  00F5               	movwf	LCD@h+1
   454  068B  120A  118A  2632  120A  118A  	fcall	_LCD
   455  0690                     l911:
   456                           
   457                           ;counter.c: 29:     LCD(0X0E,0);
   458  0690  300E               	movlw	14
   459  0691  00F2               	movwf	LCD@g
   460  0692  3000               	movlw	0
   461  0693  00F3               	movwf	LCD@g+1
   462  0694  3000               	movlw	0
   463  0695  00F4               	movwf	LCD@h
   464  0696  00F5               	movwf	LCD@h+1
   465  0697  120A  118A  2632  120A  118A  	fcall	_LCD
   466  069C                     l913:
   467                           
   468                           ;counter.c: 31:     {;counter.c: 32:         display(TMR0);
   469  069C  1283               	bcf	3,5	;RP0=0, select bank0
   470  069D  1303               	bcf	3,6	;RP1=0, select bank0
   471  069E  0801               	movf	1,w	;volatile
   472  069F  00FC               	movwf	??_main
   473  06A0  01FD               	clrf	??_main+1
   474  06A1  087C               	movf	??_main,w
   475  06A2  00A4               	movwf	display@k
   476  06A3  087D               	movf	??_main+1,w
   477  06A4  00A5               	movwf	display@k+1
   478  06A5  120A  118A  2770  120A  118A  	fcall	_display
   479  06AA  2E9C               	goto	l913
   480  06AB  120A  118A  2800   	ljmp	start
   481  06AE                     __end_of_main:
   482                           
   483                           	psect	text1
   484  0770                     __ptext1:	
   485 ;; *************** function _display *****************
   486 ;; Defined at:
   487 ;;		line 50 in file "counter.c"
   488 ;; Parameters:    Size  Location     Type
   489 ;;  k               2    4[BANK0 ] int 
   490 ;; Auto vars:     Size  Location     Type
   491 ;;  c               2   10[BANK0 ] int 
   492 ;;  b               2    8[BANK0 ] int 
   493 ;;  a               2    6[BANK0 ] int 
   494 ;; Return value:  Size  Location     Type
   495 ;;                  1    wreg      void 
   496 ;; Registers used:
   497 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   498 ;; Tracked objects:
   499 ;;		On entry : 0/0
   500 ;;		On exit  : 0/0
   501 ;;		Unchanged: 0/0
   502 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   503 ;;      Params:         0       2       0       0       0
   504 ;;      Locals:         0       6       0       0       0
   505 ;;      Temps:          0       0       0       0       0
   506 ;;      Totals:         0       8       0       0       0
   507 ;;Total ram usage:        8 bytes
   508 ;; Hardware stack levels used: 1
   509 ;; Hardware stack levels required when called: 2
   510 ;; This function calls:
   511 ;;		_LCD
   512 ;;		___awdiv
   513 ;;		___awmod
   514 ;; This function is called by:
   515 ;;		_main
   516 ;; This function uses a non-reentrant model
   517 ;;
   518                           
   519                           
   520                           ;psect for function _display
   521  0770                     _display:
   522  0770                     l875:	
   523                           ;incstack = 0
   524                           ; Regs used in _display: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   525                           
   526                           
   527                           ;counter.c: 50: void display(int k);counter.c: 51: {;counter.c: 52:     LCD(0X80,0);
   528  0770  3080               	movlw	128
   529  0771  00F2               	movwf	LCD@g
   530  0772  3000               	movlw	0
   531  0773  00F3               	movwf	LCD@g+1
   532  0774  3000               	movlw	0
   533  0775  00F4               	movwf	LCD@h
   534  0776  00F5               	movwf	LCD@h+1
   535  0777  120A  118A  2632  120A  118A  	fcall	_LCD
   536  077C                     l877:
   537                           
   538                           ;counter.c: 53:     int a,b,c;;counter.c: 54:     a=k/100;
   539  077C  3064               	movlw	100
   540  077D  00F7               	movwf	___awdiv@divisor
   541  077E  3000               	movlw	0
   542  077F  00F8               	movwf	___awdiv@divisor+1
   543  0780  1283               	bcf	3,5	;RP0=0, select bank0
   544  0781  1303               	bcf	3,6	;RP1=0, select bank0
   545  0782  0825               	movf	display@k+1,w
   546  0783  00FA               	movwf	___awdiv@dividend+1
   547  0784  0824               	movf	display@k,w
   548  0785  00F9               	movwf	___awdiv@dividend
   549  0786  120A  118A  2707  120A  118A  	fcall	___awdiv
   550  078B  0878               	movf	?___awdiv+1,w
   551  078C  1283               	bcf	3,5	;RP0=0, select bank0
   552  078D  1303               	bcf	3,6	;RP1=0, select bank0
   553  078E  00A7               	movwf	display@a+1
   554  078F  0877               	movf	?___awdiv,w
   555  0790  00A6               	movwf	display@a
   556  0791                     l879:
   557                           
   558                           ;counter.c: 55:     b=(k%100)/10;
   559  0791  300A               	movlw	10
   560  0792  00F7               	movwf	___awdiv@divisor
   561  0793  3000               	movlw	0
   562  0794  00F8               	movwf	___awdiv@divisor+1
   563  0795  0825               	movf	display@k+1,w
   564  0796  00F3               	movwf	___awmod@dividend+1
   565  0797  0824               	movf	display@k,w
   566  0798  00F2               	movwf	___awmod@dividend
   567  0799  3064               	movlw	100
   568  079A  00F0               	movwf	___awmod@divisor
   569  079B  3000               	movlw	0
   570  079C  00F1               	movwf	___awmod@divisor+1
   571  079D  120A  118A  26AE  120A  118A  	fcall	___awmod
   572  07A2  0871               	movf	?___awmod+1,w
   573  07A3  00FA               	movwf	___awdiv@dividend+1
   574  07A4  0870               	movf	?___awmod,w
   575  07A5  00F9               	movwf	___awdiv@dividend
   576  07A6  120A  118A  2707  120A  118A  	fcall	___awdiv
   577  07AB  0878               	movf	?___awdiv+1,w
   578  07AC  1283               	bcf	3,5	;RP0=0, select bank0
   579  07AD  1303               	bcf	3,6	;RP1=0, select bank0
   580  07AE  00A9               	movwf	display@b+1
   581  07AF  0877               	movf	?___awdiv,w
   582  07B0  00A8               	movwf	display@b
   583  07B1                     l881:
   584                           
   585                           ;counter.c: 56:     c=k%10;
   586  07B1  300A               	movlw	10
   587  07B2  00F0               	movwf	___awmod@divisor
   588  07B3  3000               	movlw	0
   589  07B4  00F1               	movwf	___awmod@divisor+1
   590  07B5  0825               	movf	display@k+1,w
   591  07B6  00F3               	movwf	___awmod@dividend+1
   592  07B7  0824               	movf	display@k,w
   593  07B8  00F2               	movwf	___awmod@dividend
   594  07B9  120A  118A  26AE  120A  118A  	fcall	___awmod
   595  07BE  0871               	movf	?___awmod+1,w
   596  07BF  1283               	bcf	3,5	;RP0=0, select bank0
   597  07C0  1303               	bcf	3,6	;RP1=0, select bank0
   598  07C1  00AB               	movwf	display@c+1
   599  07C2  0870               	movf	?___awmod,w
   600  07C3  00AA               	movwf	display@c
   601  07C4                     l883:
   602                           
   603                           ;counter.c: 57:     LCD(0x30+a,1);
   604  07C4  0826               	movf	display@a,w
   605  07C5  3E30               	addlw	48
   606  07C6  00F2               	movwf	LCD@g
   607  07C7  0827               	movf	display@a+1,w
   608  07C8  1803               	skipnc
   609  07C9  3E01               	addlw	1
   610  07CA  3E00               	addlw	0
   611  07CB  00F3               	movwf	LCD@g+1
   612  07CC  3001               	movlw	1
   613  07CD  00F4               	movwf	LCD@h
   614  07CE  3000               	movlw	0
   615  07CF  00F5               	movwf	LCD@h+1
   616  07D0  120A  118A  2632  120A  118A  	fcall	_LCD
   617  07D5                     l885:
   618                           
   619                           ;counter.c: 58:     LCD(0x30+b,1);
   620  07D5  1283               	bcf	3,5	;RP0=0, select bank0
   621  07D6  1303               	bcf	3,6	;RP1=0, select bank0
   622  07D7  0828               	movf	display@b,w
   623  07D8  3E30               	addlw	48
   624  07D9  00F2               	movwf	LCD@g
   625  07DA  0829               	movf	display@b+1,w
   626  07DB  1803               	skipnc
   627  07DC  3E01               	addlw	1
   628  07DD  3E00               	addlw	0
   629  07DE  00F3               	movwf	LCD@g+1
   630  07DF  3001               	movlw	1
   631  07E0  00F4               	movwf	LCD@h
   632  07E1  3000               	movlw	0
   633  07E2  00F5               	movwf	LCD@h+1
   634  07E3  120A  118A  2632  120A  118A  	fcall	_LCD
   635  07E8                     l887:
   636                           
   637                           ;counter.c: 59:     LCD(0x30+c,1);
   638  07E8  1283               	bcf	3,5	;RP0=0, select bank0
   639  07E9  1303               	bcf	3,6	;RP1=0, select bank0
   640  07EA  082A               	movf	display@c,w
   641  07EB  3E30               	addlw	48
   642  07EC  00F2               	movwf	LCD@g
   643  07ED  082B               	movf	display@c+1,w
   644  07EE  1803               	skipnc
   645  07EF  3E01               	addlw	1
   646  07F0  3E00               	addlw	0
   647  07F1  00F3               	movwf	LCD@g+1
   648  07F2  3001               	movlw	1
   649  07F3  00F4               	movwf	LCD@h
   650  07F4  3000               	movlw	0
   651  07F5  00F5               	movwf	LCD@h+1
   652  07F6  120A  118A  2632  120A  118A  	fcall	_LCD
   653  07FB                     l47:
   654  07FB  0008               	return
   655  07FC                     __end_of_display:
   656                           
   657                           	psect	text2
   658  06AE                     __ptext2:	
   659 ;; *************** function ___awmod *****************
   660 ;; Defined at:
   661 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awmod.c"
   662 ;; Parameters:    Size  Location     Type
   663 ;;  divisor         2    0[COMMON] int 
   664 ;;  dividend        2    2[COMMON] int 
   665 ;; Auto vars:     Size  Location     Type
   666 ;;  sign            1    6[COMMON] unsigned char 
   667 ;;  counter         1    5[COMMON] unsigned char 
   668 ;; Return value:  Size  Location     Type
   669 ;;                  2    0[COMMON] int 
   670 ;; Registers used:
   671 ;;		wreg, status,2, status,0
   672 ;; Tracked objects:
   673 ;;		On entry : 0/0
   674 ;;		On exit  : 0/0
   675 ;;		Unchanged: 0/0
   676 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   677 ;;      Params:         4       0       0       0       0
   678 ;;      Locals:         2       0       0       0       0
   679 ;;      Temps:          1       0       0       0       0
   680 ;;      Totals:         7       0       0       0       0
   681 ;;Total ram usage:        7 bytes
   682 ;; Hardware stack levels used: 1
   683 ;; This function calls:
   684 ;;		Nothing
   685 ;; This function is called by:
   686 ;;		_display
   687 ;; This function uses a non-reentrant model
   688 ;;
   689                           
   690                           
   691                           ;psect for function ___awmod
   692  06AE                     ___awmod:
   693  06AE                     l837:	
   694                           ;incstack = 0
   695                           ; Regs used in ___awmod: [wreg+status,2+status,0]
   696                           
   697  06AE  01F6               	clrf	___awmod@sign
   698  06AF                     l839:
   699  06AF  1FF3               	btfss	___awmod@dividend+1,7
   700  06B0  2EB2               	goto	u361
   701  06B1  2EB3               	goto	u360
   702  06B2                     u361:
   703  06B2  2EBA               	goto	l845
   704  06B3                     u360:
   705  06B3                     l841:
   706  06B3  09F2               	comf	___awmod@dividend,f
   707  06B4  09F3               	comf	___awmod@dividend+1,f
   708  06B5  0AF2               	incf	___awmod@dividend,f
   709  06B6  1903               	skipnz
   710  06B7  0AF3               	incf	___awmod@dividend+1,f
   711  06B8                     l843:
   712  06B8  01F6               	clrf	___awmod@sign
   713  06B9  0AF6               	incf	___awmod@sign,f
   714  06BA                     l845:
   715  06BA  1FF1               	btfss	___awmod@divisor+1,7
   716  06BB  2EBD               	goto	u371
   717  06BC  2EBE               	goto	u370
   718  06BD                     u371:
   719  06BD  2EC3               	goto	l849
   720  06BE                     u370:
   721  06BE                     l847:
   722  06BE  09F0               	comf	___awmod@divisor,f
   723  06BF  09F1               	comf	___awmod@divisor+1,f
   724  06C0  0AF0               	incf	___awmod@divisor,f
   725  06C1  1903               	skipnz
   726  06C2  0AF1               	incf	___awmod@divisor+1,f
   727  06C3                     l849:
   728  06C3  0870               	movf	___awmod@divisor,w
   729  06C4  0471               	iorwf	___awmod@divisor+1,w
   730  06C5  1903               	btfsc	3,2
   731  06C6  2EC8               	goto	u381
   732  06C7  2EC9               	goto	u380
   733  06C8                     u381:
   734  06C8  2EF8               	goto	l867
   735  06C9                     u380:
   736  06C9                     l851:
   737  06C9  01F5               	clrf	___awmod@counter
   738  06CA  0AF5               	incf	___awmod@counter,f
   739  06CB  2ED7               	goto	l857
   740  06CC                     l853:
   741  06CC  3001               	movlw	1
   742  06CD                     u395:
   743  06CD  1003               	clrc
   744  06CE  0DF0               	rlf	___awmod@divisor,f
   745  06CF  0DF1               	rlf	___awmod@divisor+1,f
   746  06D0  3EFF               	addlw	-1
   747  06D1  1D03               	skipz
   748  06D2  2ECD               	goto	u395
   749  06D3                     l855:
   750  06D3  3001               	movlw	1
   751  06D4  00F4               	movwf	??___awmod
   752  06D5  0874               	movf	??___awmod,w
   753  06D6  07F5               	addwf	___awmod@counter,f
   754  06D7                     l857:
   755  06D7  1FF1               	btfss	___awmod@divisor+1,7
   756  06D8  2EDA               	goto	u401
   757  06D9  2EDB               	goto	u400
   758  06DA                     u401:
   759  06DA  2ECC               	goto	l853
   760  06DB                     u400:
   761  06DB                     l859:
   762  06DB  0871               	movf	___awmod@divisor+1,w
   763  06DC  0273               	subwf	___awmod@dividend+1,w
   764  06DD  1D03               	skipz
   765  06DE  2EE1               	goto	u415
   766  06DF  0870               	movf	___awmod@divisor,w
   767  06E0  0272               	subwf	___awmod@dividend,w
   768  06E1                     u415:
   769  06E1  1C03               	skipc
   770  06E2  2EE4               	goto	u411
   771  06E3  2EE5               	goto	u410
   772  06E4                     u411:
   773  06E4  2EEB               	goto	l863
   774  06E5                     u410:
   775  06E5                     l861:
   776  06E5  0870               	movf	___awmod@divisor,w
   777  06E6  02F2               	subwf	___awmod@dividend,f
   778  06E7  0871               	movf	___awmod@divisor+1,w
   779  06E8  1C03               	skipc
   780  06E9  03F3               	decf	___awmod@dividend+1,f
   781  06EA  02F3               	subwf	___awmod@dividend+1,f
   782  06EB                     l863:
   783  06EB  3001               	movlw	1
   784  06EC                     u425:
   785  06EC  1003               	clrc
   786  06ED  0CF1               	rrf	___awmod@divisor+1,f
   787  06EE  0CF0               	rrf	___awmod@divisor,f
   788  06EF  3EFF               	addlw	-1
   789  06F0  1D03               	skipz
   790  06F1  2EEC               	goto	u425
   791  06F2                     l865:
   792  06F2  3001               	movlw	1
   793  06F3  02F5               	subwf	___awmod@counter,f
   794  06F4  1D03               	btfss	3,2
   795  06F5  2EF7               	goto	u431
   796  06F6  2EF8               	goto	u430
   797  06F7                     u431:
   798  06F7  2EDB               	goto	l859
   799  06F8                     u430:
   800  06F8                     l867:
   801  06F8  0876               	movf	___awmod@sign,w
   802  06F9  1903               	btfsc	3,2
   803  06FA  2EFC               	goto	u441
   804  06FB  2EFD               	goto	u440
   805  06FC                     u441:
   806  06FC  2F02               	goto	l871
   807  06FD                     u440:
   808  06FD                     l869:
   809  06FD  09F2               	comf	___awmod@dividend,f
   810  06FE  09F3               	comf	___awmod@dividend+1,f
   811  06FF  0AF2               	incf	___awmod@dividend,f
   812  0700  1903               	skipnz
   813  0701  0AF3               	incf	___awmod@dividend+1,f
   814  0702                     l871:
   815  0702  0873               	movf	___awmod@dividend+1,w
   816  0703  00F1               	movwf	?___awmod+1
   817  0704  0872               	movf	___awmod@dividend,w
   818  0705  00F0               	movwf	?___awmod
   819  0706                     l299:
   820  0706  0008               	return
   821  0707                     __end_of___awmod:
   822                           
   823                           	psect	text3
   824  0707                     __ptext3:	
   825 ;; *************** function ___awdiv *****************
   826 ;; Defined at:
   827 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awdiv.c"
   828 ;; Parameters:    Size  Location     Type
   829 ;;  divisor         2    7[COMMON] int 
   830 ;;  dividend        2    9[COMMON] int 
   831 ;; Auto vars:     Size  Location     Type
   832 ;;  quotient        2    2[BANK0 ] int 
   833 ;;  sign            1    1[BANK0 ] unsigned char 
   834 ;;  counter         1    0[BANK0 ] unsigned char 
   835 ;; Return value:  Size  Location     Type
   836 ;;                  2    7[COMMON] int 
   837 ;; Registers used:
   838 ;;		wreg, status,2, status,0
   839 ;; Tracked objects:
   840 ;;		On entry : 0/0
   841 ;;		On exit  : 0/0
   842 ;;		Unchanged: 0/0
   843 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   844 ;;      Params:         4       0       0       0       0
   845 ;;      Locals:         0       4       0       0       0
   846 ;;      Temps:          1       0       0       0       0
   847 ;;      Totals:         5       4       0       0       0
   848 ;;Total ram usage:        9 bytes
   849 ;; Hardware stack levels used: 1
   850 ;; This function calls:
   851 ;;		Nothing
   852 ;; This function is called by:
   853 ;;		_display
   854 ;; This function uses a non-reentrant model
   855 ;;
   856                           
   857                           
   858                           ;psect for function ___awdiv
   859  0707                     ___awdiv:
   860  0707                     l793:	
   861                           ;incstack = 0
   862                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
   863                           
   864  0707  1283               	bcf	3,5	;RP0=0, select bank0
   865  0708  1303               	bcf	3,6	;RP1=0, select bank0
   866  0709  01A1               	clrf	___awdiv@sign
   867  070A                     l795:
   868  070A  1FF8               	btfss	___awdiv@divisor+1,7
   869  070B  2F0D               	goto	u261
   870  070C  2F0E               	goto	u260
   871  070D                     u261:
   872  070D  2F15               	goto	l801
   873  070E                     u260:
   874  070E                     l797:
   875  070E  09F7               	comf	___awdiv@divisor,f
   876  070F  09F8               	comf	___awdiv@divisor+1,f
   877  0710  0AF7               	incf	___awdiv@divisor,f
   878  0711  1903               	skipnz
   879  0712  0AF8               	incf	___awdiv@divisor+1,f
   880  0713                     l799:
   881  0713  01A1               	clrf	___awdiv@sign
   882  0714  0AA1               	incf	___awdiv@sign,f
   883  0715                     l801:
   884  0715  1FFA               	btfss	___awdiv@dividend+1,7
   885  0716  2F18               	goto	u271
   886  0717  2F19               	goto	u270
   887  0718                     u271:
   888  0718  2F22               	goto	l807
   889  0719                     u270:
   890  0719                     l803:
   891  0719  09F9               	comf	___awdiv@dividend,f
   892  071A  09FA               	comf	___awdiv@dividend+1,f
   893  071B  0AF9               	incf	___awdiv@dividend,f
   894  071C  1903               	skipnz
   895  071D  0AFA               	incf	___awdiv@dividend+1,f
   896  071E                     l805:
   897  071E  3001               	movlw	1
   898  071F  00FB               	movwf	??___awdiv
   899  0720  087B               	movf	??___awdiv,w
   900  0721  06A1               	xorwf	___awdiv@sign,f
   901  0722                     l807:
   902  0722  01A2               	clrf	___awdiv@quotient
   903  0723  01A3               	clrf	___awdiv@quotient+1
   904  0724                     l809:
   905  0724  0877               	movf	___awdiv@divisor,w
   906  0725  0478               	iorwf	___awdiv@divisor+1,w
   907  0726  1903               	btfsc	3,2
   908  0727  2F29               	goto	u281
   909  0728  2F2A               	goto	u280
   910  0729                     u281:
   911  0729  2F61               	goto	l829
   912  072A                     u280:
   913  072A                     l811:
   914  072A  01A0               	clrf	___awdiv@counter
   915  072B  0AA0               	incf	___awdiv@counter,f
   916  072C  2F38               	goto	l817
   917  072D                     l813:
   918  072D  3001               	movlw	1
   919  072E                     u295:
   920  072E  1003               	clrc
   921  072F  0DF7               	rlf	___awdiv@divisor,f
   922  0730  0DF8               	rlf	___awdiv@divisor+1,f
   923  0731  3EFF               	addlw	-1
   924  0732  1D03               	skipz
   925  0733  2F2E               	goto	u295
   926  0734                     l815:
   927  0734  3001               	movlw	1
   928  0735  00FB               	movwf	??___awdiv
   929  0736  087B               	movf	??___awdiv,w
   930  0737  07A0               	addwf	___awdiv@counter,f
   931  0738                     l817:
   932  0738  1FF8               	btfss	___awdiv@divisor+1,7
   933  0739  2F3B               	goto	u301
   934  073A  2F3C               	goto	u300
   935  073B                     u301:
   936  073B  2F2D               	goto	l813
   937  073C                     u300:
   938  073C                     l819:
   939  073C  3001               	movlw	1
   940  073D                     u315:
   941  073D  1003               	clrc
   942  073E  0DA2               	rlf	___awdiv@quotient,f
   943  073F  0DA3               	rlf	___awdiv@quotient+1,f
   944  0740  3EFF               	addlw	-1
   945  0741  1D03               	skipz
   946  0742  2F3D               	goto	u315
   947  0743  0878               	movf	___awdiv@divisor+1,w
   948  0744  027A               	subwf	___awdiv@dividend+1,w
   949  0745  1D03               	skipz
   950  0746  2F49               	goto	u325
   951  0747  0877               	movf	___awdiv@divisor,w
   952  0748  0279               	subwf	___awdiv@dividend,w
   953  0749                     u325:
   954  0749  1C03               	skipc
   955  074A  2F4C               	goto	u321
   956  074B  2F4D               	goto	u320
   957  074C                     u321:
   958  074C  2F54               	goto	l825
   959  074D                     u320:
   960  074D                     l821:
   961  074D  0877               	movf	___awdiv@divisor,w
   962  074E  02F9               	subwf	___awdiv@dividend,f
   963  074F  0878               	movf	___awdiv@divisor+1,w
   964  0750  1C03               	skipc
   965  0751  03FA               	decf	___awdiv@dividend+1,f
   966  0752  02FA               	subwf	___awdiv@dividend+1,f
   967  0753                     l823:
   968  0753  1422               	bsf	___awdiv@quotient,0
   969  0754                     l825:
   970  0754  3001               	movlw	1
   971  0755                     u335:
   972  0755  1003               	clrc
   973  0756  0CF8               	rrf	___awdiv@divisor+1,f
   974  0757  0CF7               	rrf	___awdiv@divisor,f
   975  0758  3EFF               	addlw	-1
   976  0759  1D03               	skipz
   977  075A  2F55               	goto	u335
   978  075B                     l827:
   979  075B  3001               	movlw	1
   980  075C  02A0               	subwf	___awdiv@counter,f
   981  075D  1D03               	btfss	3,2
   982  075E  2F60               	goto	u341
   983  075F  2F61               	goto	u340
   984  0760                     u341:
   985  0760  2F3C               	goto	l819
   986  0761                     u340:
   987  0761                     l829:
   988  0761  0821               	movf	___awdiv@sign,w
   989  0762  1903               	btfsc	3,2
   990  0763  2F65               	goto	u351
   991  0764  2F66               	goto	u350
   992  0765                     u351:
   993  0765  2F6B               	goto	l833
   994  0766                     u350:
   995  0766                     l831:
   996  0766  09A2               	comf	___awdiv@quotient,f
   997  0767  09A3               	comf	___awdiv@quotient+1,f
   998  0768  0AA2               	incf	___awdiv@quotient,f
   999  0769  1903               	skipnz
  1000  076A  0AA3               	incf	___awdiv@quotient+1,f
  1001  076B                     l833:
  1002  076B  0823               	movf	___awdiv@quotient+1,w
  1003  076C  00F8               	movwf	?___awdiv+1
  1004  076D  0822               	movf	___awdiv@quotient,w
  1005  076E  00F7               	movwf	?___awdiv
  1006  076F                     l286:
  1007  076F  0008               	return
  1008  0770                     __end_of___awdiv:
  1009                           
  1010                           	psect	text4
  1011  0632                     __ptext4:	
  1012 ;; *************** function _LCD *****************
  1013 ;; Defined at:
  1014 ;;		line 42 in file "counter.c"
  1015 ;; Parameters:    Size  Location     Type
  1016 ;;  g               2    2[COMMON] int 
  1017 ;;  h               2    4[COMMON] int 
  1018 ;; Auto vars:     Size  Location     Type
  1019 ;;		None
  1020 ;; Return value:  Size  Location     Type
  1021 ;;                  1    wreg      void 
  1022 ;; Registers used:
  1023 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1024 ;; Tracked objects:
  1025 ;;		On entry : 0/0
  1026 ;;		On exit  : 0/0
  1027 ;;		Unchanged: 0/0
  1028 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1029 ;;      Params:         4       0       0       0       0
  1030 ;;      Locals:         0       0       0       0       0
  1031 ;;      Temps:          2       0       0       0       0
  1032 ;;      Totals:         6       0       0       0       0
  1033 ;;Total ram usage:        6 bytes
  1034 ;; Hardware stack levels used: 1
  1035 ;; Hardware stack levels required when called: 1
  1036 ;; This function calls:
  1037 ;;		_pulse
  1038 ;; This function is called by:
  1039 ;;		_main
  1040 ;;		_display
  1041 ;; This function uses a non-reentrant model
  1042 ;;
  1043                           
  1044                           
  1045                           ;psect for function _LCD
  1046  0632                     _LCD:
  1047  0632                     l783:	
  1048                           ;incstack = 0
  1049                           ; Regs used in _LCD: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1050                           
  1051                           
  1052                           ;counter.c: 42: void LCD(int g,int h);counter.c: 43: {;counter.c: 44:     RE0=h;
  1053  0632  1874               	btfsc	LCD@h,0
  1054  0633  2E35               	goto	u231
  1055  0634  2E39               	goto	u230
  1056  0635                     u231:
  1057  0635  1283               	bcf	3,5	;RP0=0, select bank0
  1058  0636  1303               	bcf	3,6	;RP1=0, select bank0
  1059  0637  1409               	bsf	9,0	;volatile
  1060  0638  2E3C               	goto	u244
  1061  0639                     u230:
  1062  0639  1283               	bcf	3,5	;RP0=0, select bank0
  1063  063A  1303               	bcf	3,6	;RP1=0, select bank0
  1064  063B  1009               	bcf	9,0	;volatile
  1065  063C                     u244:
  1066  063C                     l785:
  1067                           
  1068                           ;counter.c: 45:     PORTD=(g&0xf0)>>4;
  1069  063C  0873               	movf	LCD@g+1,w
  1070  063D  00F7               	movwf	??_LCD+1
  1071  063E  0872               	movf	LCD@g,w
  1072  063F  00F6               	movwf	??_LCD
  1073  0640  3004               	movlw	4
  1074  0641  00FF               	movwf	btemp+1
  1075  0642                     u255:
  1076  0642  0D77               	rlf	??_LCD+1,w
  1077  0643  0CF7               	rrf	??_LCD+1,f
  1078  0644  0CF6               	rrf	??_LCD,f
  1079  0645  0BFF               	decfsz	btemp+1,f
  1080  0646  2E42               	goto	u255
  1081  0647  0876               	movf	??_LCD,w
  1082  0648  390F               	andlw	15
  1083  0649  0088               	movwf	8	;volatile
  1084  064A                     l787:
  1085                           
  1086                           ;counter.c: 46:     pulse();
  1087  064A  120A  118A  2619  120A  118A  	fcall	_pulse
  1088  064F                     l789:
  1089                           
  1090                           ;counter.c: 47:     PORTD=(g&0x0f);
  1091  064F  0872               	movf	LCD@g,w
  1092  0650  390F               	andlw	15
  1093  0651  1283               	bcf	3,5	;RP0=0, select bank0
  1094  0652  1303               	bcf	3,6	;RP1=0, select bank0
  1095  0653  0088               	movwf	8	;volatile
  1096  0654                     l791:
  1097                           
  1098                           ;counter.c: 48:     pulse();
  1099  0654  120A  118A  2619  120A  118A  	fcall	_pulse
  1100  0659                     l44:
  1101  0659  0008               	return
  1102  065A                     __end_of_LCD:
  1103                           
  1104                           	psect	text5
  1105  0619                     __ptext5:	
  1106 ;; *************** function _pulse *****************
  1107 ;; Defined at:
  1108 ;;		line 35 in file "counter.c"
  1109 ;; Parameters:    Size  Location     Type
  1110 ;;		None
  1111 ;; Auto vars:     Size  Location     Type
  1112 ;;		None
  1113 ;; Return value:  Size  Location     Type
  1114 ;;                  1    wreg      void 
  1115 ;; Registers used:
  1116 ;;		wreg
  1117 ;; Tracked objects:
  1118 ;;		On entry : 0/0
  1119 ;;		On exit  : 0/0
  1120 ;;		Unchanged: 0/0
  1121 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1122 ;;      Params:         0       0       0       0       0
  1123 ;;      Locals:         0       0       0       0       0
  1124 ;;      Temps:          2       0       0       0       0
  1125 ;;      Totals:         2       0       0       0       0
  1126 ;;Total ram usage:        2 bytes
  1127 ;; Hardware stack levels used: 1
  1128 ;; This function calls:
  1129 ;;		Nothing
  1130 ;; This function is called by:
  1131 ;;		_LCD
  1132 ;; This function uses a non-reentrant model
  1133 ;;
  1134                           
  1135                           
  1136                           ;psect for function _pulse
  1137  0619                     _pulse:
  1138  0619                     l777:	
  1139                           ;incstack = 0
  1140                           ; Regs used in _pulse: [wreg]
  1141                           
  1142                           
  1143                           ;counter.c: 37:     RE1=1;
  1144  0619  1283               	bcf	3,5	;RP0=0, select bank0
  1145  061A  1303               	bcf	3,6	;RP1=0, select bank0
  1146  061B  1489               	bsf	9,1	;volatile
  1147  061C                     l779:
  1148                           
  1149                           ;counter.c: 38:     _delay((unsigned long)((50)*(4000000/4000.0)));
  1150  061C  3041               	movlw	65
  1151  061D  00F1               	movwf	??_pulse+1
  1152  061E  30EE               	movlw	238
  1153  061F  00F0               	movwf	??_pulse
  1154  0620                     u457:
  1155  0620  0BF0               	decfsz	??_pulse,f
  1156  0621  2E20               	goto	u457
  1157  0622  0BF1               	decfsz	??_pulse+1,f
  1158  0623  2E20               	goto	u457
  1159  0624  0000               	nop
  1160  0625                     l781:
  1161                           
  1162                           ;counter.c: 39:     RE1=0;
  1163  0625  1283               	bcf	3,5	;RP0=0, select bank0
  1164  0626  1303               	bcf	3,6	;RP1=0, select bank0
  1165  0627  1089               	bcf	9,1	;volatile
  1166                           
  1167                           ;counter.c: 40:     _delay((unsigned long)((50)*(4000000/4000.0)));
  1168  0628  3041               	movlw	65
  1169  0629  00F1               	movwf	??_pulse+1
  1170  062A  30EE               	movlw	238
  1171  062B  00F0               	movwf	??_pulse
  1172  062C                     u467:
  1173  062C  0BF0               	decfsz	??_pulse,f
  1174  062D  2E2C               	goto	u467
  1175  062E  0BF1               	decfsz	??_pulse+1,f
  1176  062F  2E2C               	goto	u467
  1177  0630  0000               	nop
  1178  0631                     l41:
  1179  0631  0008               	return
  1180  0632                     __end_of_pulse:
  1181  007E                     btemp	set	126	;btemp
  1182  007E                     wtemp0	set	126

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     12      12
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _display->___awdiv
    ___awdiv->___awmod
    _LCD->_pulse

Critical Paths under _main in BANK0

    _main->_display
    _display->___awdiv

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    3675
                                             12 COMMON     2     2      0
                                _LCD
                            _display
 ---------------------------------------------------------------------------------
 (1) _display                                              8     6      2    2545
                                              4 BANK0      8     6      2
                                _LCD
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     600
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     604
                                              7 COMMON     5     1      4
                                              0 BANK0      4     4      0
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _LCD                                                  6     2      4    1130
                                              2 COMMON     6     2      4
                              _pulse
 ---------------------------------------------------------------------------------
 (3) _pulse                                                2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD
     _pulse
   _display
     _LCD
     ___awdiv
       ___awmod (ARG)
     ___awmod

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      C       C       5       15.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Tue Apr 04 10:59:43 2023

                     l41 0631                       l44 0659                       l47 07FB  
           ___awdiv@sign 0021                      l286 076F                      l801 0715  
                    l811 072A                      l803 0719                      l299 0706  
                    l821 074D                      l813 072D                      l805 071E  
                    l901 066D                      l831 0766                      l823 0753  
                    l815 0734                      l807 0722                      l911 0690  
                    l903 0670                      l833 076B                      l825 0754  
                    l817 0738                      l809 0724                      l841 06B3  
                    l913 069C                      l905 0671                      l827 075B  
                    l819 073C                      l851 06C9                      l843 06B8  
                    l907 0678                      l781 0625                      l829 0761  
                    l861 06E5                      l853 06CC                      l845 06BA  
                    l837 06AE                      l909 0684                      l791 0654  
                    l783 0632                      l871 0702                      l863 06EB  
                    l855 06D3                      l847 06BE                      l839 06AF  
                    l777 0619                      l785 063C                      l793 0707  
                    l865 06F2                      l857 06D7                      l849 06C3  
                    l881 07B1                      l779 061C                      l787 064A  
                    l795 070A                      l859 06DB                      l867 06F8  
                    l883 07C4                      l875 0770                      l891 065E  
                    l789 064F                      l797 070E                      l869 06FD  
                    l885 07D5                      l877 077C                      l893 0661  
                    l799 0713                      l887 07E8                      l879 0791  
                    l895 0664                      l897 0667                      l889 065A  
                    l899 066A                      _LCD 0632                      _RE0 0048  
                    _RE1 0049                      u300 073C                      u301 073B  
                    u230 0639                      u231 0635                      u320 074D  
                    u400 06DB                      u321 074C                      u401 06DA  
                    u410 06E5                      u315 073D                      u411 06E4  
                    u244 063C                      u340 0761                      u260 070E  
                    u341 0760                      u325 0749                      u261 070D  
                    u350 0766                      u270 0719                      u430 06F8  
                    u255 0642                      u351 0765                      u335 0755  
                    u271 0718                      u431 06F7                      u415 06E1  
                    u280 072A                      u440 06FD                      u360 06B3  
                    u281 0729                      u441 06FC                      u425 06EC  
                    u361 06B2                      u370 06BE                      u371 06BD  
                    u380 06C9                      u381 06C8                      u295 072E  
                    u457 0620                      u467 062C                      u395 06CD  
           ___awmod@sign 0076                     LCD@g 0072                     LCD@h 0074  
                   ?_LCD 0072                     _TMR0 0001                     _main 065A  
                   btemp 007E                     start 0000                    ??_LCD 0076  
                  ?_main 0070          __end_of___awdiv 0770          __end_of___awmod 0707  
                  _ANSEL 0188          ___awdiv@divisor 0077          ___awdiv@counter 0020  
                  _PORTA 0005                    _PORTD 0008                    _PORTE 0009  
                  _TRISA 0085                    _TRISD 0088                    _TRISE 0089  
        __end_of_display 07FC                    _pulse 0619                    status 0003  
                  wtemp0 007E          __initialization 07FC             __end_of_main 06AE  
                 ??_main 007C         ___awdiv@dividend 0079                   ?_pulse 0070  
                 _ANSELH 0189                ??___awdiv 007B                ??___awmod 0074  
       ___awdiv@quotient 0022          ___awmod@divisor 0070          ___awmod@counter 0075  
              ??_display 007C  __end_of__initialization 07FC           __pcstackCOMMON 0070  
          __end_of_pulse 0632                  ??_pulse 0070               __pmaintext 065A  
                ___awdiv 0707                  ___awmod 06AE                  __ptext1 0770  
                __ptext2 06AE                  __ptext3 0707                  __ptext4 0632  
                __ptext5 0619                  _display 0770             __size_of_LCD 0028  
       ___awmod@dividend 0072     end_of_initialization 07FC      start_initialization 07FC  
            __end_of_LCD 065A                ___latbits 0002            __pcstackBANK0 0020  
               ?___awdiv 0077                 ?___awmod 0070                 ?_display 0024  
         __size_of_pulse 0019         __size_of___awdiv 0069         __size_of___awmod 0059  
       __size_of_display 008C            __size_of_main 0054                 display@a 0026  
               display@b 0028                 display@c 002A                 display@k 0024  
             _OPTION_REG 0081  
