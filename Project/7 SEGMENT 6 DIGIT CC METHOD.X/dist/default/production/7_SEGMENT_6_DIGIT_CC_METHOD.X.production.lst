

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Wed Mar 29 21:38:17 2023

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	inittext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    16                           	dabs	1,0x7E,2
    17  0000                     
    18                           ; Version 2.20
    19                           ; Generated 12/02/2020 GMT
    20                           ; 
    21                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    22                           ; All rights reserved.
    23                           ; 
    24                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    25                           ; 
    26                           ; Redistribution and use in source and binary forms, with or without modification, are
    27                           ; permitted provided that the following conditions are met:
    28                           ; 
    29                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    30                           ;        conditions and the following disclaimer.
    31                           ; 
    32                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    33                           ;        of conditions and the following disclaimer in the documentation and/or other
    34                           ;        materials provided with the distribution.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC16F887 Definitions
    50                           ; 
    51                           ; SFR Addresses
    52  0000                     	;# 
    53  0001                     	;# 
    54  0002                     	;# 
    55  0003                     	;# 
    56  0004                     	;# 
    57  0005                     	;# 
    58  0006                     	;# 
    59  0007                     	;# 
    60  0008                     	;# 
    61  0009                     	;# 
    62  000A                     	;# 
    63  000B                     	;# 
    64  000C                     	;# 
    65  000D                     	;# 
    66  000E                     	;# 
    67  000E                     	;# 
    68  000F                     	;# 
    69  0010                     	;# 
    70  0011                     	;# 
    71  0012                     	;# 
    72  0013                     	;# 
    73  0014                     	;# 
    74  0015                     	;# 
    75  0015                     	;# 
    76  0016                     	;# 
    77  0017                     	;# 
    78  0018                     	;# 
    79  0019                     	;# 
    80  001A                     	;# 
    81  001B                     	;# 
    82  001B                     	;# 
    83  001C                     	;# 
    84  001D                     	;# 
    85  001E                     	;# 
    86  001F                     	;# 
    87  0081                     	;# 
    88  0085                     	;# 
    89  0086                     	;# 
    90  0087                     	;# 
    91  0088                     	;# 
    92  0089                     	;# 
    93  008C                     	;# 
    94  008D                     	;# 
    95  008E                     	;# 
    96  008F                     	;# 
    97  0090                     	;# 
    98  0091                     	;# 
    99  0092                     	;# 
   100  0093                     	;# 
   101  0093                     	;# 
   102  0093                     	;# 
   103  0094                     	;# 
   104  0095                     	;# 
   105  0096                     	;# 
   106  0097                     	;# 
   107  0098                     	;# 
   108  0099                     	;# 
   109  009A                     	;# 
   110  009B                     	;# 
   111  009C                     	;# 
   112  009D                     	;# 
   113  009E                     	;# 
   114  009F                     	;# 
   115  0105                     	;# 
   116  0107                     	;# 
   117  0108                     	;# 
   118  0109                     	;# 
   119  010C                     	;# 
   120  010C                     	;# 
   121  010D                     	;# 
   122  010E                     	;# 
   123  010F                     	;# 
   124  0185                     	;# 
   125  0187                     	;# 
   126  0188                     	;# 
   127  0189                     	;# 
   128  018C                     	;# 
   129  018D                     	;# 
   130  0000                     	;# 
   131  0001                     	;# 
   132  0002                     	;# 
   133  0003                     	;# 
   134  0004                     	;# 
   135  0005                     	;# 
   136  0006                     	;# 
   137  0007                     	;# 
   138  0008                     	;# 
   139  0009                     	;# 
   140  000A                     	;# 
   141  000B                     	;# 
   142  000C                     	;# 
   143  000D                     	;# 
   144  000E                     	;# 
   145  000E                     	;# 
   146  000F                     	;# 
   147  0010                     	;# 
   148  0011                     	;# 
   149  0012                     	;# 
   150  0013                     	;# 
   151  0014                     	;# 
   152  0015                     	;# 
   153  0015                     	;# 
   154  0016                     	;# 
   155  0017                     	;# 
   156  0018                     	;# 
   157  0019                     	;# 
   158  001A                     	;# 
   159  001B                     	;# 
   160  001B                     	;# 
   161  001C                     	;# 
   162  001D                     	;# 
   163  001E                     	;# 
   164  001F                     	;# 
   165  0081                     	;# 
   166  0085                     	;# 
   167  0086                     	;# 
   168  0087                     	;# 
   169  0088                     	;# 
   170  0089                     	;# 
   171  008C                     	;# 
   172  008D                     	;# 
   173  008E                     	;# 
   174  008F                     	;# 
   175  0090                     	;# 
   176  0091                     	;# 
   177  0092                     	;# 
   178  0093                     	;# 
   179  0093                     	;# 
   180  0093                     	;# 
   181  0094                     	;# 
   182  0095                     	;# 
   183  0096                     	;# 
   184  0097                     	;# 
   185  0098                     	;# 
   186  0099                     	;# 
   187  009A                     	;# 
   188  009B                     	;# 
   189  009C                     	;# 
   190  009D                     	;# 
   191  009E                     	;# 
   192  009F                     	;# 
   193  0105                     	;# 
   194  0107                     	;# 
   195  0108                     	;# 
   196  0109                     	;# 
   197  010C                     	;# 
   198  010C                     	;# 
   199  010D                     	;# 
   200  010E                     	;# 
   201  010F                     	;# 
   202  0185                     	;# 
   203  0187                     	;# 
   204  0188                     	;# 
   205  0189                     	;# 
   206  018C                     	;# 
   207  018D                     	;# 
   208                           
   209                           	psect	idataBANK0
   210  05A1                     __pidataBANK0:
   211                           
   212                           ;initializer for _cc
   213  05A1  343F               	retlw	63
   214  05A2  3400               	retlw	0
   215  05A3  3406               	retlw	6
   216  05A4  3400               	retlw	0
   217  05A5  345B               	retlw	91
   218  05A6  3400               	retlw	0
   219  05A7  344F               	retlw	79
   220  05A8  3400               	retlw	0
   221  05A9  3466               	retlw	102
   222  05AA  3400               	retlw	0
   223  05AB  346D               	retlw	109
   224  05AC  3400               	retlw	0
   225  05AD  347D               	retlw	125
   226  05AE  3400               	retlw	0
   227  05AF  3407               	retlw	7
   228  05B0  3400               	retlw	0
   229  05B1  347F               	retlw	127
   230  05B2  3400               	retlw	0
   231  05B3  3467               	retlw	103
   232  05B4  3400               	retlw	0
   233  0012                     _T2CON	set	18
   234  0011                     _TMR2	set	17
   235  0008                     _PORTD	set	8
   236  0005                     _PORTA	set	5
   237  0007                     _PORTC	set	7
   238  0028                     _RA0	set	40
   239  0029                     _RA1	set	41
   240  0061                     _TMR2IF	set	97
   241  0042                     _RD2	set	66
   242  0047                     _RD7	set	71
   243  0046                     _RD6	set	70
   244  0045                     _RD5	set	69
   245  0044                     _RD4	set	68
   246  0043                     _RD3	set	67
   247  0088                     _TRISD	set	136
   248  0087                     _TRISC	set	135
   249  0085                     _TRISA	set	133
   250  0188                     _ANSEL	set	392
   251                           
   252                           	psect	cinit
   253  07EA                     start_initialization:	
   254                           ; #config settings
   255                           
   256  07EA                     __initialization:
   257                           
   258                           ; Initialize objects allocated to BANK0
   259  07EA  1383               	bcf	3,7	;select IRP bank0
   260  07EB  304A               	movlw	low (__pdataBANK0+20)
   261  07EC  00FD               	movwf	btemp+-1
   262  07ED  3005               	movlw	high __pidataBANK0
   263  07EE  00FE               	movwf	btemp
   264  07EF  30A1               	movlw	low __pidataBANK0
   265  07F0  00FF               	movwf	btemp+1
   266  07F1  3036               	movlw	low __pdataBANK0
   267  07F2  0084               	movwf	4
   268  07F3  120A  118A  2592  120A  118A  	fcall	init_ram0
   269                           
   270                           ; Clear objects allocated to BANK0
   271  07F8  01CA               	clrf	__pbssBANK0& (0+127)
   272  07F9  01CB               	clrf	(__pbssBANK0+1)& (0+127)
   273  07FA  01CC               	clrf	(__pbssBANK0+2)& (0+127)
   274  07FB  01CD               	clrf	(__pbssBANK0+3)& (0+127)
   275  07FC                     end_of_initialization:	
   276                           ;End of C runtime variable initialization code
   277                           
   278  07FC                     __end_of__initialization:
   279  07FC  0183               	clrf	3
   280  07FD  120A  118A  2DB5   	ljmp	_main	;jump to C main() function
   281                           
   282                           	psect	bssBANK0
   283  004A                     __pbssBANK0:
   284  004A                     _count2:
   285  004A                     	ds	2
   286  004C                     _count:
   287  004C                     	ds	2
   288                           
   289                           	psect	dataBANK0
   290  0036                     __pdataBANK0:
   291  0036                     _cc:
   292  0036                     	ds	20
   293                           
   294                           	psect	inittext
   295  058E                     init_fetch0:	
   296                           ;	Called with low address in FSR and high address in W
   297                           
   298  058E  087E               	movf	btemp,w
   299  058F  008A               	movwf	10
   300  0590  087F               	movf	btemp+1,w
   301  0591  0082               	movwf	2
   302  0592                     init_ram0:	
   303                           ;Called with:
   304                           ;	high address of idata address in btemp 
   305                           ;	low address of idata address in btemp+1 
   306                           ;	low address of data in FSR
   307                           ;	high address + 1 of data in btemp-1
   308                           
   309  0592  120A  118A  258E  120A  118A  	fcall	init_fetch0
   310  0597  0080               	movwf	0
   311  0598  0A84               	incf	4,f
   312  0599  0804               	movf	4,w
   313  059A  067D               	xorwf	btemp+-1,w
   314  059B  1903               	btfsc	3,2
   315  059C  3400               	retlw	0
   316  059D  0AFF               	incf	btemp+1,f
   317  059E  1903               	btfsc	3,2
   318  059F  0AFE               	incf	btemp,f
   319  05A0  2D92               	goto	init_ram0
   320                           
   321                           	psect	cstackCOMMON
   322  0070                     __pcstackCOMMON:
   323  0070                     ?_timer:
   324  0070                     ?_main:	
   325                           ; 1 bytes @ 0x0
   326                           
   327  0070                     ?___awmod:	
   328                           ; 1 bytes @ 0x0
   329                           
   330  0070                     ___awmod@divisor:	
   331                           ; 2 bytes @ 0x0
   332                           
   333                           
   334                           ; 2 bytes @ 0x0
   335  0070                     	ds	2
   336  0072                     ___awmod@dividend:
   337                           
   338                           ; 2 bytes @ 0x2
   339  0072                     	ds	2
   340  0074                     ??___awmod:
   341                           
   342                           ; 1 bytes @ 0x4
   343  0074                     	ds	1
   344  0075                     ___awmod@counter:
   345                           
   346                           ; 1 bytes @ 0x5
   347  0075                     	ds	1
   348  0076                     ___awmod@sign:
   349                           
   350                           ; 1 bytes @ 0x6
   351  0076                     	ds	1
   352  0077                     ?___awdiv:
   353  0077                     ___awdiv@divisor:	
   354                           ; 2 bytes @ 0x7
   355                           
   356                           
   357                           ; 2 bytes @ 0x7
   358  0077                     	ds	2
   359  0079                     ___awdiv@dividend:
   360                           
   361                           ; 2 bytes @ 0x9
   362  0079                     	ds	2
   363  007B                     ??___awdiv:
   364                           
   365                           ; 1 bytes @ 0xB
   366  007B                     	ds	1
   367  007C                     ??_seg:
   368                           
   369                           ; 1 bytes @ 0xC
   370  007C                     	ds	2
   371  007E                     ??_timer:
   372  007E                     ??_main:	
   373                           ; 1 bytes @ 0xE
   374                           
   375                           
   376                           	psect	cstackBANK0
   377  0020                     __pcstackBANK0:	
   378                           ; 1 bytes @ 0xE
   379                           
   380  0020                     ___awdiv@counter:
   381                           
   382                           ; 1 bytes @ 0x0
   383  0020                     	ds	1
   384  0021                     ___awdiv@sign:
   385                           
   386                           ; 1 bytes @ 0x1
   387  0021                     	ds	1
   388  0022                     ___awdiv@quotient:
   389                           
   390                           ; 2 bytes @ 0x2
   391  0022                     	ds	2
   392  0024                     ?_seg:
   393  0024                     seg@c:	
   394                           ; 1 bytes @ 0x4
   395                           
   396                           
   397                           ; 2 bytes @ 0x4
   398  0024                     	ds	2
   399  0026                     seg@s:
   400                           
   401                           ; 2 bytes @ 0x6
   402  0026                     	ds	2
   403  0028                     seg@x:
   404                           
   405                           ; 2 bytes @ 0x8
   406  0028                     	ds	2
   407  002A                     seg@y:
   408                           
   409                           ; 2 bytes @ 0xA
   410  002A                     	ds	2
   411  002C                     seg@z:
   412                           
   413                           ; 2 bytes @ 0xC
   414  002C                     	ds	2
   415  002E                     seg@m:
   416                           
   417                           ; 2 bytes @ 0xE
   418  002E                     	ds	2
   419  0030                     seg@n:
   420                           
   421                           ; 2 bytes @ 0x10
   422  0030                     	ds	2
   423  0032                     seg@o:
   424                           
   425                           ; 2 bytes @ 0x12
   426  0032                     	ds	2
   427  0034                     timer@cnt1:
   428                           
   429                           ; 2 bytes @ 0x14
   430  0034                     	ds	2
   431                           
   432                           	psect	maintext
   433  05B5                     __pmaintext:	
   434 ;;
   435 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   436 ;;
   437 ;; *************** function _main *****************
   438 ;; Defined at:
   439 ;;		line 41 in file "7 SEGMENT 6 DIGIT CC METHOD.c"
   440 ;; Parameters:    Size  Location     Type
   441 ;;		None
   442 ;; Auto vars:     Size  Location     Type
   443 ;;		None
   444 ;; Return value:  Size  Location     Type
   445 ;;                  1    wreg      void 
   446 ;; Registers used:
   447 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   448 ;; Tracked objects:
   449 ;;		On entry : B00/0
   450 ;;		On exit  : 0/0
   451 ;;		Unchanged: 0/0
   452 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   453 ;;      Params:         0       0       0       0       0
   454 ;;      Locals:         0       0       0       0       0
   455 ;;      Temps:          0       0       0       0       0
   456 ;;      Totals:         0       0       0       0       0
   457 ;;Total ram usage:        0 bytes
   458 ;; Hardware stack levels required when called: 3
   459 ;; This function calls:
   460 ;;		_timer
   461 ;; This function is called by:
   462 ;;		Startup code after reset
   463 ;; This function uses a non-reentrant model
   464 ;;
   465                           
   466                           
   467                           ;psect for function _main
   468  05B5                     _main:
   469  05B5                     l1058:	
   470                           ;incstack = 0
   471                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   472                           
   473  05B5  1683               	bsf	3,5	;RP0=1, select bank1
   474  05B6  1303               	bcf	3,6	;RP1=0, select bank1
   475  05B7  0185               	clrf	5	;volatile
   476  05B8  1283               	bcf	3,5	;RP0=0, select bank0
   477  05B9  1303               	bcf	3,6	;RP1=0, select bank0
   478  05BA  0185               	clrf	5	;volatile
   479  05BB  1683               	bsf	3,5	;RP0=1, select bank1
   480  05BC  1303               	bcf	3,6	;RP1=0, select bank1
   481  05BD  0187               	clrf	7	;volatile
   482  05BE  1283               	bcf	3,5	;RP0=0, select bank0
   483  05BF  1303               	bcf	3,6	;RP1=0, select bank0
   484  05C0  0187               	clrf	7	;volatile
   485  05C1  1683               	bsf	3,5	;RP0=1, select bank1
   486  05C2  1303               	bcf	3,6	;RP1=0, select bank1
   487  05C3  0188               	clrf	8	;volatile
   488  05C4  1283               	bcf	3,5	;RP0=0, select bank0
   489  05C5  1303               	bcf	3,6	;RP1=0, select bank0
   490  05C6  0188               	clrf	8	;volatile
   491  05C7                     l1060:
   492  05C7  309C               	movlw	156
   493  05C8  0091               	movwf	17	;volatile
   494  05C9                     l1062:
   495  05C9  3027               	movlw	39
   496  05CA  0092               	movwf	18	;volatile
   497  05CB  1683               	bsf	3,5	;RP0=1, select bank3
   498  05CC  1703               	bsf	3,6	;RP1=1, select bank3
   499  05CD  0188               	clrf	8	;volatile
   500  05CE                     l1064:
   501  05CE  120A  118A  25D7  120A  118A  	fcall	_timer
   502  05D3  2DCE               	goto	l1064
   503  05D4  120A  118A  2800   	ljmp	start
   504  05D7                     __end_of_main:
   505                           
   506                           	psect	text1
   507  05D7                     __ptext1:	
   508 ;; *************** function _timer *****************
   509 ;; Defined at:
   510 ;;		line 57 in file "7 SEGMENT 6 DIGIT CC METHOD.c"
   511 ;; Parameters:    Size  Location     Type
   512 ;;		None
   513 ;; Auto vars:     Size  Location     Type
   514 ;;  cnt1            2   20[BANK0 ] int 
   515 ;; Return value:  Size  Location     Type
   516 ;;                  1    wreg      void 
   517 ;; Registers used:
   518 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   519 ;; Tracked objects:
   520 ;;		On entry : 0/0
   521 ;;		On exit  : 0/0
   522 ;;		Unchanged: 0/0
   523 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   524 ;;      Params:         0       0       0       0       0
   525 ;;      Locals:         0       2       0       0       0
   526 ;;      Temps:          0       0       0       0       0
   527 ;;      Totals:         0       2       0       0       0
   528 ;;Total ram usage:        2 bytes
   529 ;; Hardware stack levels used: 1
   530 ;; Hardware stack levels required when called: 2
   531 ;; This function calls:
   532 ;;		_seg
   533 ;; This function is called by:
   534 ;;		_main
   535 ;; This function uses a non-reentrant model
   536 ;;
   537                           
   538                           
   539                           ;psect for function _timer
   540  05D7                     _timer:
   541  05D7                     l1040:	
   542                           ;incstack = 0
   543                           ; Regs used in _timer: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   544                           
   545  05D7  1283               	bcf	3,5	;RP0=0, select bank0
   546  05D8  1303               	bcf	3,6	;RP1=0, select bank0
   547  05D9  1C8C               	btfss	12,1	;volatile
   548  05DA  2DDC               	goto	u411
   549  05DB  2DDD               	goto	u410
   550  05DC                     u411:
   551  05DC  2DE7               	goto	l1048
   552  05DD                     u410:
   553  05DD                     l1042:
   554  05DD  3001               	movlw	1
   555  05DE  07B4               	addwf	timer@cnt1,f
   556  05DF  1803               	skipnc
   557  05E0  0AB5               	incf	timer@cnt1+1,f
   558  05E1  3000               	movlw	0
   559  05E2  07B5               	addwf	timer@cnt1+1,f
   560  05E3                     l1044:
   561  05E3  108C               	bcf	12,1	;volatile
   562  05E4  309C               	movlw	156
   563  05E5  0091               	movwf	17	;volatile
   564  05E6                     l1046:
   565  05E6  1485               	bsf	5,1	;volatile
   566  05E7                     l1048:
   567  05E7  307D               	movlw	125
   568  05E8  0634               	xorwf	timer@cnt1,w
   569  05E9  0435               	iorwf	timer@cnt1+1,w
   570  05EA  1D03               	btfss	3,2
   571  05EB  2DED               	goto	u421
   572  05EC  2DEE               	goto	u420
   573  05ED                     u421:
   574  05ED  2DF7               	goto	l1056
   575  05EE                     u420:
   576  05EE                     l1050:
   577  05EE  3001               	movlw	1
   578  05EF  07CC               	addwf	_count,f
   579  05F0  1803               	skipnc
   580  05F1  0ACD               	incf	_count+1,f
   581  05F2  3000               	movlw	0
   582  05F3  07CD               	addwf	_count+1,f
   583  05F4                     l1052:
   584  05F4  01B4               	clrf	timer@cnt1
   585  05F5  01B5               	clrf	timer@cnt1+1
   586  05F6                     l1054:
   587  05F6  1405               	bsf	5,0	;volatile
   588  05F7                     l1056:
   589  05F7  0835               	movf	timer@cnt1+1,w
   590  05F8  00A5               	movwf	seg@c+1
   591  05F9  0834               	movf	timer@cnt1,w
   592  05FA  00A4               	movwf	seg@c
   593  05FB  084D               	movf	_count+1,w
   594  05FC  00A7               	movwf	seg@s+1
   595  05FD  084C               	movf	_count,w
   596  05FE  00A6               	movwf	seg@s
   597  05FF  120A  118A  26C7  120A  118A  	fcall	_seg
   598  0604                     l62:
   599  0604  0008               	return
   600  0605                     __end_of_timer:
   601                           
   602                           	psect	text2
   603  06C7                     __ptext2:	
   604 ;; *************** function _seg *****************
   605 ;; Defined at:
   606 ;;		line 13 in file "7 SEGMENT 6 DIGIT CC METHOD.c"
   607 ;; Parameters:    Size  Location     Type
   608 ;;  c               2    4[BANK0 ] int 
   609 ;;  s               2    6[BANK0 ] int 
   610 ;; Auto vars:     Size  Location     Type
   611 ;;  o               2   18[BANK0 ] int 
   612 ;;  n               2   16[BANK0 ] int 
   613 ;;  m               2   14[BANK0 ] int 
   614 ;;  z               2   12[BANK0 ] int 
   615 ;;  y               2   10[BANK0 ] int 
   616 ;;  x               2    8[BANK0 ] int 
   617 ;; Return value:  Size  Location     Type
   618 ;;                  1    wreg      void 
   619 ;; Registers used:
   620 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   621 ;; Tracked objects:
   622 ;;		On entry : 0/0
   623 ;;		On exit  : 0/0
   624 ;;		Unchanged: 0/0
   625 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   626 ;;      Params:         0       4       0       0       0
   627 ;;      Locals:         0      12       0       0       0
   628 ;;      Temps:          2       0       0       0       0
   629 ;;      Totals:         2      16       0       0       0
   630 ;;Total ram usage:       18 bytes
   631 ;; Hardware stack levels used: 1
   632 ;; Hardware stack levels required when called: 1
   633 ;; This function calls:
   634 ;;		___awdiv
   635 ;;		___awmod
   636 ;; This function is called by:
   637 ;;		_timer
   638 ;; This function uses a non-reentrant model
   639 ;;
   640                           
   641                           
   642                           ;psect for function _seg
   643  06C7                     _seg:
   644  06C7                     l942:	
   645                           ;incstack = 0
   646                           ; Regs used in _seg: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   647                           
   648  06C7  3064               	movlw	100
   649  06C8  00F7               	movwf	___awdiv@divisor
   650  06C9  3000               	movlw	0
   651  06CA  00F8               	movwf	___awdiv@divisor+1
   652  06CB  1283               	bcf	3,5	;RP0=0, select bank0
   653  06CC  1303               	bcf	3,6	;RP1=0, select bank0
   654  06CD  0825               	movf	seg@c+1,w
   655  06CE  00FA               	movwf	___awdiv@dividend+1
   656  06CF  0824               	movf	seg@c,w
   657  06D0  00F9               	movwf	___awdiv@dividend
   658  06D1  120A  118A  265E  120A  118A  	fcall	___awdiv
   659  06D6  0878               	movf	?___awdiv+1,w
   660  06D7  1283               	bcf	3,5	;RP0=0, select bank0
   661  06D8  1303               	bcf	3,6	;RP1=0, select bank0
   662  06D9  00A9               	movwf	seg@x+1
   663  06DA  0877               	movf	?___awdiv,w
   664  06DB  00A8               	movwf	seg@x
   665  06DC  300A               	movlw	10
   666  06DD  00F7               	movwf	___awdiv@divisor
   667  06DE  3000               	movlw	0
   668  06DF  00F8               	movwf	___awdiv@divisor+1
   669  06E0  0825               	movf	seg@c+1,w
   670  06E1  00F3               	movwf	___awmod@dividend+1
   671  06E2  0824               	movf	seg@c,w
   672  06E3  00F2               	movwf	___awmod@dividend
   673  06E4  3064               	movlw	100
   674  06E5  00F0               	movwf	___awmod@divisor
   675  06E6  3000               	movlw	0
   676  06E7  00F1               	movwf	___awmod@divisor+1
   677  06E8  120A  118A  2605  120A  118A  	fcall	___awmod
   678  06ED  0871               	movf	?___awmod+1,w
   679  06EE  00FA               	movwf	___awdiv@dividend+1
   680  06EF  0870               	movf	?___awmod,w
   681  06F0  00F9               	movwf	___awdiv@dividend
   682  06F1  120A  118A  265E  120A  118A  	fcall	___awdiv
   683  06F6  0878               	movf	?___awdiv+1,w
   684  06F7  1283               	bcf	3,5	;RP0=0, select bank0
   685  06F8  1303               	bcf	3,6	;RP1=0, select bank0
   686  06F9  00AB               	movwf	seg@y+1
   687  06FA  0877               	movf	?___awdiv,w
   688  06FB  00AA               	movwf	seg@y
   689  06FC  300A               	movlw	10
   690  06FD  00F0               	movwf	___awmod@divisor
   691  06FE  3000               	movlw	0
   692  06FF  00F1               	movwf	___awmod@divisor+1
   693  0700  0825               	movf	seg@c+1,w
   694  0701  00F3               	movwf	___awmod@dividend+1
   695  0702  0824               	movf	seg@c,w
   696  0703  00F2               	movwf	___awmod@dividend
   697  0704  120A  118A  2605  120A  118A  	fcall	___awmod
   698  0709  0871               	movf	?___awmod+1,w
   699  070A  1283               	bcf	3,5	;RP0=0, select bank0
   700  070B  1303               	bcf	3,6	;RP1=0, select bank0
   701  070C  00AD               	movwf	seg@z+1
   702  070D  0870               	movf	?___awmod,w
   703  070E  00AC               	movwf	seg@z
   704  070F  3064               	movlw	100
   705  0710  00F7               	movwf	___awdiv@divisor
   706  0711  3000               	movlw	0
   707  0712  00F8               	movwf	___awdiv@divisor+1
   708  0713  0827               	movf	seg@s+1,w
   709  0714  00FA               	movwf	___awdiv@dividend+1
   710  0715  0826               	movf	seg@s,w
   711  0716  00F9               	movwf	___awdiv@dividend
   712  0717  120A  118A  265E  120A  118A  	fcall	___awdiv
   713  071C  0878               	movf	?___awdiv+1,w
   714  071D  1283               	bcf	3,5	;RP0=0, select bank0
   715  071E  1303               	bcf	3,6	;RP1=0, select bank0
   716  071F  00AF               	movwf	seg@m+1
   717  0720  0877               	movf	?___awdiv,w
   718  0721  00AE               	movwf	seg@m
   719  0722  300A               	movlw	10
   720  0723  00F7               	movwf	___awdiv@divisor
   721  0724  3000               	movlw	0
   722  0725  00F8               	movwf	___awdiv@divisor+1
   723  0726  0827               	movf	seg@s+1,w
   724  0727  00F3               	movwf	___awmod@dividend+1
   725  0728  0826               	movf	seg@s,w
   726  0729  00F2               	movwf	___awmod@dividend
   727  072A  3064               	movlw	100
   728  072B  00F0               	movwf	___awmod@divisor
   729  072C  3000               	movlw	0
   730  072D  00F1               	movwf	___awmod@divisor+1
   731  072E  120A  118A  2605  120A  118A  	fcall	___awmod
   732  0733  0871               	movf	?___awmod+1,w
   733  0734  00FA               	movwf	___awdiv@dividend+1
   734  0735  0870               	movf	?___awmod,w
   735  0736  00F9               	movwf	___awdiv@dividend
   736  0737  120A  118A  265E  120A  118A  	fcall	___awdiv
   737  073C  0878               	movf	?___awdiv+1,w
   738  073D  1283               	bcf	3,5	;RP0=0, select bank0
   739  073E  1303               	bcf	3,6	;RP1=0, select bank0
   740  073F  00B1               	movwf	seg@n+1
   741  0740  0877               	movf	?___awdiv,w
   742  0741  00B0               	movwf	seg@n
   743  0742  300A               	movlw	10
   744  0743  00F0               	movwf	___awmod@divisor
   745  0744  3000               	movlw	0
   746  0745  00F1               	movwf	___awmod@divisor+1
   747  0746  0827               	movf	seg@s+1,w
   748  0747  00F3               	movwf	___awmod@dividend+1
   749  0748  0826               	movf	seg@s,w
   750  0749  00F2               	movwf	___awmod@dividend
   751  074A  120A  118A  2605  120A  118A  	fcall	___awmod
   752  074F  0871               	movf	?___awmod+1,w
   753  0750  1283               	bcf	3,5	;RP0=0, select bank0
   754  0751  1303               	bcf	3,6	;RP1=0, select bank0
   755  0752  00B3               	movwf	seg@o+1
   756  0753  0870               	movf	?___awmod,w
   757  0754  00B2               	movwf	seg@o
   758  0755                     l944:
   759  0755  1588               	bsf	8,3	;volatile
   760  0756                     l946:
   761  0756  1608               	bsf	8,4	;volatile
   762  0757                     l948:
   763  0757  1688               	bsf	8,5	;volatile
   764  0758                     l950:
   765  0758  1708               	bsf	8,6	;volatile
   766  0759                     l952:
   767  0759  1788               	bsf	8,7	;volatile
   768  075A                     l954:
   769  075A  1108               	bcf	8,2	;volatile
   770  075B                     l956:
   771  075B  082E               	movf	seg@m,w
   772  075C  00FC               	movwf	??_seg
   773  075D  077C               	addwf	??_seg,w
   774  075E  3E36               	addlw	(low (_cc| 0))& (0+255)
   775  075F  0084               	movwf	4
   776  0760  1383               	bcf	3,7	;select IRP bank0
   777  0761  0800               	movf	0,w
   778  0762  0087               	movwf	7	;volatile
   779  0763                     l958:
   780  0763  300D               	movlw	13
   781  0764  00FD               	movwf	??_seg+1
   782  0765  30FB               	movlw	251
   783  0766  00FC               	movwf	??_seg
   784  0767                     u437:
   785  0767  0BFC               	decfsz	??_seg,f
   786  0768  2F67               	goto	u437
   787  0769  0BFD               	decfsz	??_seg+1,f
   788  076A  2F67               	goto	u437
   789  076B  2F6C               	nop2
   790  076C                     l960:
   791  076C  1283               	bcf	3,5	;RP0=0, select bank0
   792  076D  1303               	bcf	3,6	;RP1=0, select bank0
   793  076E  1508               	bsf	8,2	;volatile
   794  076F                     l962:
   795  076F  1608               	bsf	8,4	;volatile
   796  0770                     l964:
   797  0770  1688               	bsf	8,5	;volatile
   798  0771                     l966:
   799  0771  1708               	bsf	8,6	;volatile
   800  0772                     l968:
   801  0772  1788               	bsf	8,7	;volatile
   802  0773                     l970:
   803  0773  1188               	bcf	8,3	;volatile
   804  0774                     l972:
   805  0774  0830               	movf	seg@n,w
   806  0775  00FC               	movwf	??_seg
   807  0776  077C               	addwf	??_seg,w
   808  0777  3E36               	addlw	(low (_cc| 0))& (0+255)
   809  0778  0084               	movwf	4
   810  0779  1383               	bcf	3,7	;select IRP bank0
   811  077A  0800               	movf	0,w
   812  077B  0087               	movwf	7	;volatile
   813  077C                     l974:
   814  077C  300D               	movlw	13
   815  077D  00FD               	movwf	??_seg+1
   816  077E  30FB               	movlw	251
   817  077F  00FC               	movwf	??_seg
   818  0780                     u447:
   819  0780  0BFC               	decfsz	??_seg,f
   820  0781  2F80               	goto	u447
   821  0782  0BFD               	decfsz	??_seg+1,f
   822  0783  2F80               	goto	u447
   823  0784  2F85               	nop2
   824  0785                     l976:
   825  0785  1283               	bcf	3,5	;RP0=0, select bank0
   826  0786  1303               	bcf	3,6	;RP1=0, select bank0
   827  0787  1588               	bsf	8,3	;volatile
   828  0788                     l978:
   829  0788  1508               	bsf	8,2	;volatile
   830  0789                     l980:
   831  0789  1688               	bsf	8,5	;volatile
   832  078A                     l982:
   833  078A  1708               	bsf	8,6	;volatile
   834  078B                     l984:
   835  078B  1788               	bsf	8,7	;volatile
   836  078C                     l986:
   837  078C  1208               	bcf	8,4	;volatile
   838  078D                     l988:
   839  078D  0832               	movf	seg@o,w
   840  078E  00FC               	movwf	??_seg
   841  078F  077C               	addwf	??_seg,w
   842  0790  3E36               	addlw	(low (_cc| 0))& (0+255)
   843  0791  0084               	movwf	4
   844  0792  1383               	bcf	3,7	;select IRP bank0
   845  0793  0800               	movf	0,w
   846  0794  0087               	movwf	7	;volatile
   847  0795                     l990:
   848  0795  300D               	movlw	13
   849  0796  00FD               	movwf	??_seg+1
   850  0797  30FB               	movlw	251
   851  0798  00FC               	movwf	??_seg
   852  0799                     u457:
   853  0799  0BFC               	decfsz	??_seg,f
   854  079A  2F99               	goto	u457
   855  079B  0BFD               	decfsz	??_seg+1,f
   856  079C  2F99               	goto	u457
   857  079D  2F9E               	nop2
   858  079E                     l992:
   859  079E  1283               	bcf	3,5	;RP0=0, select bank0
   860  079F  1303               	bcf	3,6	;RP1=0, select bank0
   861  07A0  1588               	bsf	8,3	;volatile
   862  07A1                     l994:
   863  07A1  1608               	bsf	8,4	;volatile
   864  07A2                     l996:
   865  07A2  1508               	bsf	8,2	;volatile
   866  07A3                     l998:
   867  07A3  1708               	bsf	8,6	;volatile
   868  07A4                     l1000:
   869  07A4  1788               	bsf	8,7	;volatile
   870  07A5                     l1002:
   871  07A5  1288               	bcf	8,5	;volatile
   872  07A6                     l1004:
   873  07A6  0828               	movf	seg@x,w
   874  07A7  00FC               	movwf	??_seg
   875  07A8  077C               	addwf	??_seg,w
   876  07A9  3E36               	addlw	(low (_cc| 0))& (0+255)
   877  07AA  0084               	movwf	4
   878  07AB  1383               	bcf	3,7	;select IRP bank0
   879  07AC  0800               	movf	0,w
   880  07AD  0087               	movwf	7	;volatile
   881  07AE                     l1006:
   882  07AE  300D               	movlw	13
   883  07AF  00FD               	movwf	??_seg+1
   884  07B0  30FB               	movlw	251
   885  07B1  00FC               	movwf	??_seg
   886  07B2                     u467:
   887  07B2  0BFC               	decfsz	??_seg,f
   888  07B3  2FB2               	goto	u467
   889  07B4  0BFD               	decfsz	??_seg+1,f
   890  07B5  2FB2               	goto	u467
   891  07B6  2FB7               	nop2
   892  07B7                     l1008:
   893  07B7  1283               	bcf	3,5	;RP0=0, select bank0
   894  07B8  1303               	bcf	3,6	;RP1=0, select bank0
   895  07B9  1588               	bsf	8,3	;volatile
   896  07BA                     l1010:
   897  07BA  1608               	bsf	8,4	;volatile
   898  07BB                     l1012:
   899  07BB  1688               	bsf	8,5	;volatile
   900  07BC                     l1014:
   901  07BC  1508               	bsf	8,2	;volatile
   902  07BD                     l1016:
   903  07BD  1788               	bsf	8,7	;volatile
   904  07BE                     l1018:
   905  07BE  1308               	bcf	8,6	;volatile
   906  07BF                     l1020:
   907  07BF  082A               	movf	seg@y,w
   908  07C0  00FC               	movwf	??_seg
   909  07C1  077C               	addwf	??_seg,w
   910  07C2  3E36               	addlw	(low (_cc| 0))& (0+255)
   911  07C3  0084               	movwf	4
   912  07C4  1383               	bcf	3,7	;select IRP bank0
   913  07C5  0800               	movf	0,w
   914  07C6  0087               	movwf	7	;volatile
   915  07C7                     l1022:
   916  07C7  300D               	movlw	13
   917  07C8  00FD               	movwf	??_seg+1
   918  07C9  30FB               	movlw	251
   919  07CA  00FC               	movwf	??_seg
   920  07CB                     u477:
   921  07CB  0BFC               	decfsz	??_seg,f
   922  07CC  2FCB               	goto	u477
   923  07CD  0BFD               	decfsz	??_seg+1,f
   924  07CE  2FCB               	goto	u477
   925  07CF  2FD0               	nop2
   926  07D0                     l1024:
   927  07D0  1283               	bcf	3,5	;RP0=0, select bank0
   928  07D1  1303               	bcf	3,6	;RP1=0, select bank0
   929  07D2  1588               	bsf	8,3	;volatile
   930  07D3                     l1026:
   931  07D3  1608               	bsf	8,4	;volatile
   932  07D4                     l1028:
   933  07D4  1688               	bsf	8,5	;volatile
   934  07D5                     l1030:
   935  07D5  1708               	bsf	8,6	;volatile
   936  07D6                     l1032:
   937  07D6  1508               	bsf	8,2	;volatile
   938  07D7                     l1034:
   939  07D7  1388               	bcf	8,7	;volatile
   940  07D8                     l1036:
   941  07D8  082C               	movf	seg@z,w
   942  07D9  00FC               	movwf	??_seg
   943  07DA  077C               	addwf	??_seg,w
   944  07DB  3E36               	addlw	(low (_cc| 0))& (0+255)
   945  07DC  0084               	movwf	4
   946  07DD  1383               	bcf	3,7	;select IRP bank0
   947  07DE  0800               	movf	0,w
   948  07DF  0087               	movwf	7	;volatile
   949  07E0                     l1038:
   950  07E0  300D               	movlw	13
   951  07E1  00FD               	movwf	??_seg+1
   952  07E2  30FB               	movlw	251
   953  07E3  00FC               	movwf	??_seg
   954  07E4                     u487:
   955  07E4  0BFC               	decfsz	??_seg,f
   956  07E5  2FE4               	goto	u487
   957  07E6  0BFD               	decfsz	??_seg+1,f
   958  07E7  2FE4               	goto	u487
   959  07E8  2FE9               	nop2
   960  07E9                     l49:
   961  07E9  0008               	return
   962  07EA                     __end_of_seg:
   963                           
   964                           	psect	text3
   965  0605                     __ptext3:	
   966 ;; *************** function ___awmod *****************
   967 ;; Defined at:
   968 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awmod.c"
   969 ;; Parameters:    Size  Location     Type
   970 ;;  divisor         2    0[COMMON] int 
   971 ;;  dividend        2    2[COMMON] int 
   972 ;; Auto vars:     Size  Location     Type
   973 ;;  sign            1    6[COMMON] unsigned char 
   974 ;;  counter         1    5[COMMON] unsigned char 
   975 ;; Return value:  Size  Location     Type
   976 ;;                  2    0[COMMON] int 
   977 ;; Registers used:
   978 ;;		wreg, status,2, status,0
   979 ;; Tracked objects:
   980 ;;		On entry : 0/0
   981 ;;		On exit  : 0/0
   982 ;;		Unchanged: 0/0
   983 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   984 ;;      Params:         4       0       0       0       0
   985 ;;      Locals:         2       0       0       0       0
   986 ;;      Temps:          1       0       0       0       0
   987 ;;      Totals:         7       0       0       0       0
   988 ;;Total ram usage:        7 bytes
   989 ;; Hardware stack levels used: 1
   990 ;; This function calls:
   991 ;;		Nothing
   992 ;; This function is called by:
   993 ;;		_seg
   994 ;; This function uses a non-reentrant model
   995 ;;
   996                           
   997                           
   998                           ;psect for function ___awmod
   999  0605                     ___awmod:
  1000  0605                     l904:	
  1001                           ;incstack = 0
  1002                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  1003                           
  1004  0605  01F6               	clrf	___awmod@sign
  1005  0606                     l906:
  1006  0606  1FF3               	btfss	___awmod@dividend+1,7
  1007  0607  2E09               	goto	u321
  1008  0608  2E0A               	goto	u320
  1009  0609                     u321:
  1010  0609  2E11               	goto	l912
  1011  060A                     u320:
  1012  060A                     l908:
  1013  060A  09F2               	comf	___awmod@dividend,f
  1014  060B  09F3               	comf	___awmod@dividend+1,f
  1015  060C  0AF2               	incf	___awmod@dividend,f
  1016  060D  1903               	skipnz
  1017  060E  0AF3               	incf	___awmod@dividend+1,f
  1018  060F                     l910:
  1019  060F  01F6               	clrf	___awmod@sign
  1020  0610  0AF6               	incf	___awmod@sign,f
  1021  0611                     l912:
  1022  0611  1FF1               	btfss	___awmod@divisor+1,7
  1023  0612  2E14               	goto	u331
  1024  0613  2E15               	goto	u330
  1025  0614                     u331:
  1026  0614  2E1A               	goto	l916
  1027  0615                     u330:
  1028  0615                     l914:
  1029  0615  09F0               	comf	___awmod@divisor,f
  1030  0616  09F1               	comf	___awmod@divisor+1,f
  1031  0617  0AF0               	incf	___awmod@divisor,f
  1032  0618  1903               	skipnz
  1033  0619  0AF1               	incf	___awmod@divisor+1,f
  1034  061A                     l916:
  1035  061A  0870               	movf	___awmod@divisor,w
  1036  061B  0471               	iorwf	___awmod@divisor+1,w
  1037  061C  1903               	btfsc	3,2
  1038  061D  2E1F               	goto	u341
  1039  061E  2E20               	goto	u340
  1040  061F                     u341:
  1041  061F  2E4F               	goto	l934
  1042  0620                     u340:
  1043  0620                     l918:
  1044  0620  01F5               	clrf	___awmod@counter
  1045  0621  0AF5               	incf	___awmod@counter,f
  1046  0622  2E2E               	goto	l924
  1047  0623                     l920:
  1048  0623  3001               	movlw	1
  1049  0624                     u355:
  1050  0624  1003               	clrc
  1051  0625  0DF0               	rlf	___awmod@divisor,f
  1052  0626  0DF1               	rlf	___awmod@divisor+1,f
  1053  0627  3EFF               	addlw	-1
  1054  0628  1D03               	skipz
  1055  0629  2E24               	goto	u355
  1056  062A                     l922:
  1057  062A  3001               	movlw	1
  1058  062B  00F4               	movwf	??___awmod
  1059  062C  0874               	movf	??___awmod,w
  1060  062D  07F5               	addwf	___awmod@counter,f
  1061  062E                     l924:
  1062  062E  1FF1               	btfss	___awmod@divisor+1,7
  1063  062F  2E31               	goto	u361
  1064  0630  2E32               	goto	u360
  1065  0631                     u361:
  1066  0631  2E23               	goto	l920
  1067  0632                     u360:
  1068  0632                     l926:
  1069  0632  0871               	movf	___awmod@divisor+1,w
  1070  0633  0273               	subwf	___awmod@dividend+1,w
  1071  0634  1D03               	skipz
  1072  0635  2E38               	goto	u375
  1073  0636  0870               	movf	___awmod@divisor,w
  1074  0637  0272               	subwf	___awmod@dividend,w
  1075  0638                     u375:
  1076  0638  1C03               	skipc
  1077  0639  2E3B               	goto	u371
  1078  063A  2E3C               	goto	u370
  1079  063B                     u371:
  1080  063B  2E42               	goto	l930
  1081  063C                     u370:
  1082  063C                     l928:
  1083  063C  0870               	movf	___awmod@divisor,w
  1084  063D  02F2               	subwf	___awmod@dividend,f
  1085  063E  0871               	movf	___awmod@divisor+1,w
  1086  063F  1C03               	skipc
  1087  0640  03F3               	decf	___awmod@dividend+1,f
  1088  0641  02F3               	subwf	___awmod@dividend+1,f
  1089  0642                     l930:
  1090  0642  3001               	movlw	1
  1091  0643                     u385:
  1092  0643  1003               	clrc
  1093  0644  0CF1               	rrf	___awmod@divisor+1,f
  1094  0645  0CF0               	rrf	___awmod@divisor,f
  1095  0646  3EFF               	addlw	-1
  1096  0647  1D03               	skipz
  1097  0648  2E43               	goto	u385
  1098  0649                     l932:
  1099  0649  3001               	movlw	1
  1100  064A  02F5               	subwf	___awmod@counter,f
  1101  064B  1D03               	btfss	3,2
  1102  064C  2E4E               	goto	u391
  1103  064D  2E4F               	goto	u390
  1104  064E                     u391:
  1105  064E  2E32               	goto	l926
  1106  064F                     u390:
  1107  064F                     l934:
  1108  064F  0876               	movf	___awmod@sign,w
  1109  0650  1903               	btfsc	3,2
  1110  0651  2E53               	goto	u401
  1111  0652  2E54               	goto	u400
  1112  0653                     u401:
  1113  0653  2E59               	goto	l938
  1114  0654                     u400:
  1115  0654                     l936:
  1116  0654  09F2               	comf	___awmod@dividend,f
  1117  0655  09F3               	comf	___awmod@dividend+1,f
  1118  0656  0AF2               	incf	___awmod@dividend,f
  1119  0657  1903               	skipnz
  1120  0658  0AF3               	incf	___awmod@dividend+1,f
  1121  0659                     l938:
  1122  0659  0873               	movf	___awmod@dividend+1,w
  1123  065A  00F1               	movwf	?___awmod+1
  1124  065B  0872               	movf	___awmod@dividend,w
  1125  065C  00F0               	movwf	?___awmod
  1126  065D                     l314:
  1127  065D  0008               	return
  1128  065E                     __end_of___awmod:
  1129                           
  1130                           	psect	text4
  1131  065E                     __ptext4:	
  1132 ;; *************** function ___awdiv *****************
  1133 ;; Defined at:
  1134 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awdiv.c"
  1135 ;; Parameters:    Size  Location     Type
  1136 ;;  divisor         2    7[COMMON] int 
  1137 ;;  dividend        2    9[COMMON] int 
  1138 ;; Auto vars:     Size  Location     Type
  1139 ;;  quotient        2    2[BANK0 ] int 
  1140 ;;  sign            1    1[BANK0 ] unsigned char 
  1141 ;;  counter         1    0[BANK0 ] unsigned char 
  1142 ;; Return value:  Size  Location     Type
  1143 ;;                  2    7[COMMON] int 
  1144 ;; Registers used:
  1145 ;;		wreg, status,2, status,0
  1146 ;; Tracked objects:
  1147 ;;		On entry : 0/0
  1148 ;;		On exit  : 0/0
  1149 ;;		Unchanged: 0/0
  1150 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1151 ;;      Params:         4       0       0       0       0
  1152 ;;      Locals:         0       4       0       0       0
  1153 ;;      Temps:          1       0       0       0       0
  1154 ;;      Totals:         5       4       0       0       0
  1155 ;;Total ram usage:        9 bytes
  1156 ;; Hardware stack levels used: 1
  1157 ;; This function calls:
  1158 ;;		Nothing
  1159 ;; This function is called by:
  1160 ;;		_seg
  1161 ;; This function uses a non-reentrant model
  1162 ;;
  1163                           
  1164                           
  1165                           ;psect for function ___awdiv
  1166  065E                     ___awdiv:
  1167  065E                     l860:	
  1168                           ;incstack = 0
  1169                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1170                           
  1171  065E  1283               	bcf	3,5	;RP0=0, select bank0
  1172  065F  1303               	bcf	3,6	;RP1=0, select bank0
  1173  0660  01A1               	clrf	___awdiv@sign
  1174  0661                     l862:
  1175  0661  1FF8               	btfss	___awdiv@divisor+1,7
  1176  0662  2E64               	goto	u221
  1177  0663  2E65               	goto	u220
  1178  0664                     u221:
  1179  0664  2E6C               	goto	l868
  1180  0665                     u220:
  1181  0665                     l864:
  1182  0665  09F7               	comf	___awdiv@divisor,f
  1183  0666  09F8               	comf	___awdiv@divisor+1,f
  1184  0667  0AF7               	incf	___awdiv@divisor,f
  1185  0668  1903               	skipnz
  1186  0669  0AF8               	incf	___awdiv@divisor+1,f
  1187  066A                     l866:
  1188  066A  01A1               	clrf	___awdiv@sign
  1189  066B  0AA1               	incf	___awdiv@sign,f
  1190  066C                     l868:
  1191  066C  1FFA               	btfss	___awdiv@dividend+1,7
  1192  066D  2E6F               	goto	u231
  1193  066E  2E70               	goto	u230
  1194  066F                     u231:
  1195  066F  2E79               	goto	l874
  1196  0670                     u230:
  1197  0670                     l870:
  1198  0670  09F9               	comf	___awdiv@dividend,f
  1199  0671  09FA               	comf	___awdiv@dividend+1,f
  1200  0672  0AF9               	incf	___awdiv@dividend,f
  1201  0673  1903               	skipnz
  1202  0674  0AFA               	incf	___awdiv@dividend+1,f
  1203  0675                     l872:
  1204  0675  3001               	movlw	1
  1205  0676  00FB               	movwf	??___awdiv
  1206  0677  087B               	movf	??___awdiv,w
  1207  0678  06A1               	xorwf	___awdiv@sign,f
  1208  0679                     l874:
  1209  0679  01A2               	clrf	___awdiv@quotient
  1210  067A  01A3               	clrf	___awdiv@quotient+1
  1211  067B                     l876:
  1212  067B  0877               	movf	___awdiv@divisor,w
  1213  067C  0478               	iorwf	___awdiv@divisor+1,w
  1214  067D  1903               	btfsc	3,2
  1215  067E  2E80               	goto	u241
  1216  067F  2E81               	goto	u240
  1217  0680                     u241:
  1218  0680  2EB8               	goto	l896
  1219  0681                     u240:
  1220  0681                     l878:
  1221  0681  01A0               	clrf	___awdiv@counter
  1222  0682  0AA0               	incf	___awdiv@counter,f
  1223  0683  2E8F               	goto	l884
  1224  0684                     l880:
  1225  0684  3001               	movlw	1
  1226  0685                     u255:
  1227  0685  1003               	clrc
  1228  0686  0DF7               	rlf	___awdiv@divisor,f
  1229  0687  0DF8               	rlf	___awdiv@divisor+1,f
  1230  0688  3EFF               	addlw	-1
  1231  0689  1D03               	skipz
  1232  068A  2E85               	goto	u255
  1233  068B                     l882:
  1234  068B  3001               	movlw	1
  1235  068C  00FB               	movwf	??___awdiv
  1236  068D  087B               	movf	??___awdiv,w
  1237  068E  07A0               	addwf	___awdiv@counter,f
  1238  068F                     l884:
  1239  068F  1FF8               	btfss	___awdiv@divisor+1,7
  1240  0690  2E92               	goto	u261
  1241  0691  2E93               	goto	u260
  1242  0692                     u261:
  1243  0692  2E84               	goto	l880
  1244  0693                     u260:
  1245  0693                     l886:
  1246  0693  3001               	movlw	1
  1247  0694                     u275:
  1248  0694  1003               	clrc
  1249  0695  0DA2               	rlf	___awdiv@quotient,f
  1250  0696  0DA3               	rlf	___awdiv@quotient+1,f
  1251  0697  3EFF               	addlw	-1
  1252  0698  1D03               	skipz
  1253  0699  2E94               	goto	u275
  1254  069A  0878               	movf	___awdiv@divisor+1,w
  1255  069B  027A               	subwf	___awdiv@dividend+1,w
  1256  069C  1D03               	skipz
  1257  069D  2EA0               	goto	u285
  1258  069E  0877               	movf	___awdiv@divisor,w
  1259  069F  0279               	subwf	___awdiv@dividend,w
  1260  06A0                     u285:
  1261  06A0  1C03               	skipc
  1262  06A1  2EA3               	goto	u281
  1263  06A2  2EA4               	goto	u280
  1264  06A3                     u281:
  1265  06A3  2EAB               	goto	l892
  1266  06A4                     u280:
  1267  06A4                     l888:
  1268  06A4  0877               	movf	___awdiv@divisor,w
  1269  06A5  02F9               	subwf	___awdiv@dividend,f
  1270  06A6  0878               	movf	___awdiv@divisor+1,w
  1271  06A7  1C03               	skipc
  1272  06A8  03FA               	decf	___awdiv@dividend+1,f
  1273  06A9  02FA               	subwf	___awdiv@dividend+1,f
  1274  06AA                     l890:
  1275  06AA  1422               	bsf	___awdiv@quotient,0
  1276  06AB                     l892:
  1277  06AB  3001               	movlw	1
  1278  06AC                     u295:
  1279  06AC  1003               	clrc
  1280  06AD  0CF8               	rrf	___awdiv@divisor+1,f
  1281  06AE  0CF7               	rrf	___awdiv@divisor,f
  1282  06AF  3EFF               	addlw	-1
  1283  06B0  1D03               	skipz
  1284  06B1  2EAC               	goto	u295
  1285  06B2                     l894:
  1286  06B2  3001               	movlw	1
  1287  06B3  02A0               	subwf	___awdiv@counter,f
  1288  06B4  1D03               	btfss	3,2
  1289  06B5  2EB7               	goto	u301
  1290  06B6  2EB8               	goto	u300
  1291  06B7                     u301:
  1292  06B7  2E93               	goto	l886
  1293  06B8                     u300:
  1294  06B8                     l896:
  1295  06B8  0821               	movf	___awdiv@sign,w
  1296  06B9  1903               	btfsc	3,2
  1297  06BA  2EBC               	goto	u311
  1298  06BB  2EBD               	goto	u310
  1299  06BC                     u311:
  1300  06BC  2EC2               	goto	l900
  1301  06BD                     u310:
  1302  06BD                     l898:
  1303  06BD  09A2               	comf	___awdiv@quotient,f
  1304  06BE  09A3               	comf	___awdiv@quotient+1,f
  1305  06BF  0AA2               	incf	___awdiv@quotient,f
  1306  06C0  1903               	skipnz
  1307  06C1  0AA3               	incf	___awdiv@quotient+1,f
  1308  06C2                     l900:
  1309  06C2  0823               	movf	___awdiv@quotient+1,w
  1310  06C3  00F8               	movwf	?___awdiv+1
  1311  06C4  0822               	movf	___awdiv@quotient,w
  1312  06C5  00F7               	movwf	?___awdiv
  1313  06C6                     l301:
  1314  06C6  0008               	return
  1315  06C7                     __end_of___awdiv:
  1316  007E                     btemp	set	126	;btemp
  1317  007E                     wtemp0	set	126

Data Sizes:
    Strings     0
    Constant    0
    Data        20
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     22      46
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _timer->_seg
    _seg->___awdiv
    ___awdiv->___awmod

Critical Paths under _main in BANK0

    _main->_timer
    _timer->_seg
    _seg->___awdiv

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    2280
                              _timer
 ---------------------------------------------------------------------------------
 (1) _timer                                                2     2      0    2280
                                             20 BANK0      2     2      0
                                _seg
 ---------------------------------------------------------------------------------
 (2) _seg                                                 18    14      4    2234
                                             12 COMMON     2     2      0
                                              4 BANK0     16    12      4
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4     904
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4     908
                                              7 COMMON     5     1      4
                                              0 BANK0      4     4      0
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _timer
     _seg
       ___awdiv
         ___awmod (ARG)
       ___awmod

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     16      2E       5       57.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      3C      12        0.0%
ABS                  0      0      3C       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Wed Mar 29 21:38:17 2023

                      pc 0002                       l62 0604                       l49 07E9  
           ___awdiv@sign 0021                       _cc 0036                       fsr 0004  
                    l301 06C6                      l314 065D                      l900 06C2  
                    l910 060F                      l920 0623                      l912 0611  
                    l904 0605                      l930 0642                      l922 062A  
                    l914 0615                      l906 0606                      l860 065E  
                    l932 0649                      l924 062E                      l916 061A  
                    l908 060A                      l870 0670                      l862 0661  
                    l926 0632                      l918 0620                      l934 064F  
                    l950 0758                      l942 06C7                      l880 0684  
                    l872 0675                      l864 0665                      l936 0654  
                    l928 063C                      l960 076C                      l952 0759  
                    l944 0755                      l890 06AA                      l882 068B  
                    l874 0679                      l866 066A                      l938 0659  
                    l970 0773                      l962 076F                      l954 075A  
                    l946 0756                      l892 06AB                      l884 068F  
                    l876 067B                      l868 066C                      l980 0789  
                    l972 0774                      l964 0770                      l956 075B  
                    l948 0757                      l894 06B2                      l886 0693  
                    l878 0681                      l990 0795                      l982 078A  
                    l974 077C                      l966 0771                      l958 0763  
                    l888 06A4                      l896 06B8                      l992 079E  
                    l984 078B                      l976 0785                      l968 0772  
                    l898 06BD                      l994 07A1                      l986 078C  
                    l978 0788                      l996 07A2                      l988 078D  
                    l998 07A3                      _RA0 0028                      _RA1 0029  
                    _RD2 0042                      _RD3 0043                      _RD4 0044  
                    _RD5 0045                      _RD6 0046                      _RD7 0047  
                    u300 06B8                      u220 0665                      u301 06B7  
                    u221 0664                      u310 06BD                      u230 0670  
                    u311 06BC                      u231 066F                      u240 0681  
                    u400 0654                      u320 060A                      u241 0680  
                    u401 0653                      u321 0609                      u330 0615  
                    u410 05DD                      u331 0614                      u411 05DC  
                    u260 0693                      u340 0620                      u420 05EE  
                    u261 0692                      u341 061F                      u421 05ED  
                    u255 0685                      u280 06A4                      u360 0632  
                    u281 06A3                      u361 0631                      u370 063C  
                    u275 0694                      u371 063B                      u355 0624  
                    u285 06A0                      u437 0767                      u390 064F  
                    u295 06AC                      u391 064E                      u375 0638  
                    u447 0780                      u385 0643                      u457 0799  
                    u467 07B2                      u477 07CB                      u487 07E4  
                    _seg 06C7                      fsr0 0004                      indf 0000  
           ___awmod@sign 0076                     l1000 07A4                     l1010 07BA  
                   l1002 07A5                     l1020 07BF                     l1012 07BB  
                   l1004 07A6                     l1030 07D5                     l1022 07C7  
                   l1014 07BC                     l1006 07AE                     l1032 07D6  
                   l1024 07D0                     l1016 07BD                     l1008 07B7  
                   l1040 05D7                     l1034 07D7                     l1026 07D3  
                   l1018 07BE                     l1050 05EE                     l1042 05DD  
                   l1036 07D8                     l1028 07D4                     l1052 05F4  
                   l1044 05E3                     l1060 05C7                     l1038 07E0  
                   l1054 05F6                     l1046 05E6                     l1062 05C9  
                   l1056 05F7                     l1048 05E7                     l1064 05CE  
                   l1058 05B5                     ?_seg 0024                     _TMR2 0011  
                   _main 05B5                     btemp 007E                     seg@c 0024  
                   seg@m 002E                     seg@n 0030                     seg@o 0032  
                   seg@s 0026                     seg@x 0028                     seg@y 002A  
                   seg@z 002C                     start 0000                    ??_seg 007C  
                  ?_main 0070          __end_of___awdiv 06C7          __end_of___awmod 065E  
                  _ANSEL 0188          ___awdiv@divisor 0077                    _T2CON 0012  
        ___awdiv@counter 0020                    _PORTA 0005                    _PORTC 0007  
                  _PORTD 0008                    _TRISA 0085                    _TRISC 0087  
                  _TRISD 0088                    _count 004C                    _timer 05D7  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 07EA             __end_of_main 05D7                   ??_main 007E  
       ___awdiv@dividend 0079                   ?_timer 0070                   _TMR2IF 0061  
              ??___awdiv 007B                ??___awmod 0074                   _count2 004A  
       ___awdiv@quotient 0022          ___awmod@divisor 0070          ___awmod@counter 0075  
__end_of__initialization 07FC           __pcstackCOMMON 0070             __pidataBANK0 05A1  
          __end_of_timer 0605                  ??_timer 007E               __pbssBANK0 004A  
             __pmaintext 05B5                  ___awdiv 065E                  ___awmod 0605  
                __ptext1 05D7                  __ptext2 06C7                  __ptext3 0605  
                __ptext4 065E             __size_of_seg 0123         ___awmod@dividend 0072  
   end_of_initialization 07FC      start_initialization 07EA              __end_of_seg 07EA  
             init_fetch0 058E              __pdataBANK0 0036                ___latbits 0002  
          __pcstackBANK0 0020                 ?___awdiv 0077                 ?___awmod 0070  
         __size_of_timer 002E         __size_of___awdiv 0069         __size_of___awmod 0059  
          __size_of_main 0022                timer@cnt1 0034                 init_ram0 0592  
