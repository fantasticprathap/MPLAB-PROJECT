

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Thu Mar 30 15:16:26 2023

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	inittext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    13                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	intentry,global,class=CODE,delta=2
    18                           	dabs	1,0x7E,2
    19  0000                     
    20                           ; Version 2.20
    21                           ; Generated 12/02/2020 GMT
    22                           ; 
    23                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution.
    37                           ; 
    38                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    39                           ;        software without specific prior written permission.
    40                           ; 
    41                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    42                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    43                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    44                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    45                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    46                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    47                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    48                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    49                           ; 
    50                           ; 
    51                           ; Code-generator required, PIC16F887 Definitions
    52                           ; 
    53                           ; SFR Addresses
    54  0000                     	;# 
    55  0001                     	;# 
    56  0002                     	;# 
    57  0003                     	;# 
    58  0004                     	;# 
    59  0005                     	;# 
    60  0006                     	;# 
    61  0007                     	;# 
    62  0008                     	;# 
    63  0009                     	;# 
    64  000A                     	;# 
    65  000B                     	;# 
    66  000C                     	;# 
    67  000D                     	;# 
    68  000E                     	;# 
    69  000E                     	;# 
    70  000F                     	;# 
    71  0010                     	;# 
    72  0011                     	;# 
    73  0012                     	;# 
    74  0013                     	;# 
    75  0014                     	;# 
    76  0015                     	;# 
    77  0015                     	;# 
    78  0016                     	;# 
    79  0017                     	;# 
    80  0018                     	;# 
    81  0019                     	;# 
    82  001A                     	;# 
    83  001B                     	;# 
    84  001B                     	;# 
    85  001C                     	;# 
    86  001D                     	;# 
    87  001E                     	;# 
    88  001F                     	;# 
    89  0081                     	;# 
    90  0085                     	;# 
    91  0086                     	;# 
    92  0087                     	;# 
    93  0088                     	;# 
    94  0089                     	;# 
    95  008C                     	;# 
    96  008D                     	;# 
    97  008E                     	;# 
    98  008F                     	;# 
    99  0090                     	;# 
   100  0091                     	;# 
   101  0092                     	;# 
   102  0093                     	;# 
   103  0093                     	;# 
   104  0093                     	;# 
   105  0094                     	;# 
   106  0095                     	;# 
   107  0096                     	;# 
   108  0097                     	;# 
   109  0098                     	;# 
   110  0099                     	;# 
   111  009A                     	;# 
   112  009B                     	;# 
   113  009C                     	;# 
   114  009D                     	;# 
   115  009E                     	;# 
   116  009F                     	;# 
   117  0105                     	;# 
   118  0107                     	;# 
   119  0108                     	;# 
   120  0109                     	;# 
   121  010C                     	;# 
   122  010C                     	;# 
   123  010D                     	;# 
   124  010E                     	;# 
   125  010F                     	;# 
   126  0185                     	;# 
   127  0187                     	;# 
   128  0188                     	;# 
   129  0189                     	;# 
   130  018C                     	;# 
   131  018D                     	;# 
   132  0000                     	;# 
   133  0001                     	;# 
   134  0002                     	;# 
   135  0003                     	;# 
   136  0004                     	;# 
   137  0005                     	;# 
   138  0006                     	;# 
   139  0007                     	;# 
   140  0008                     	;# 
   141  0009                     	;# 
   142  000A                     	;# 
   143  000B                     	;# 
   144  000C                     	;# 
   145  000D                     	;# 
   146  000E                     	;# 
   147  000E                     	;# 
   148  000F                     	;# 
   149  0010                     	;# 
   150  0011                     	;# 
   151  0012                     	;# 
   152  0013                     	;# 
   153  0014                     	;# 
   154  0015                     	;# 
   155  0015                     	;# 
   156  0016                     	;# 
   157  0017                     	;# 
   158  0018                     	;# 
   159  0019                     	;# 
   160  001A                     	;# 
   161  001B                     	;# 
   162  001B                     	;# 
   163  001C                     	;# 
   164  001D                     	;# 
   165  001E                     	;# 
   166  001F                     	;# 
   167  0081                     	;# 
   168  0085                     	;# 
   169  0086                     	;# 
   170  0087                     	;# 
   171  0088                     	;# 
   172  0089                     	;# 
   173  008C                     	;# 
   174  008D                     	;# 
   175  008E                     	;# 
   176  008F                     	;# 
   177  0090                     	;# 
   178  0091                     	;# 
   179  0092                     	;# 
   180  0093                     	;# 
   181  0093                     	;# 
   182  0093                     	;# 
   183  0094                     	;# 
   184  0095                     	;# 
   185  0096                     	;# 
   186  0097                     	;# 
   187  0098                     	;# 
   188  0099                     	;# 
   189  009A                     	;# 
   190  009B                     	;# 
   191  009C                     	;# 
   192  009D                     	;# 
   193  009E                     	;# 
   194  009F                     	;# 
   195  0105                     	;# 
   196  0107                     	;# 
   197  0108                     	;# 
   198  0109                     	;# 
   199  010C                     	;# 
   200  010C                     	;# 
   201  010D                     	;# 
   202  010E                     	;# 
   203  010F                     	;# 
   204  0185                     	;# 
   205  0187                     	;# 
   206  0188                     	;# 
   207  0189                     	;# 
   208  018C                     	;# 
   209  018D                     	;# 
   210                           
   211                           	psect	idataBANK0
   212  0263                     __pidataBANK0:
   213                           
   214                           ;initializer for _cc
   215  0263  343F               	retlw	63
   216  0264  3400               	retlw	0
   217  0265  3406               	retlw	6
   218  0266  3400               	retlw	0
   219  0267  345B               	retlw	91
   220  0268  3400               	retlw	0
   221  0269  344F               	retlw	79
   222  026A  3400               	retlw	0
   223  026B  3466               	retlw	102
   224  026C  3400               	retlw	0
   225  026D  346D               	retlw	109
   226  026E  3400               	retlw	0
   227  026F  347D               	retlw	125
   228  0270  3400               	retlw	0
   229  0271  3407               	retlw	7
   230  0272  3400               	retlw	0
   231  0273  347F               	retlw	127
   232  0274  3400               	retlw	0
   233  0275  3467               	retlw	103
   234  0276  3400               	retlw	0
   235  000B                     _INTCON	set	11
   236  0007                     _PORTC	set	7
   237  0006                     _PORTB	set	6
   238  0005                     _PORTA	set	5
   239  0008                     _PORTD	set	8
   240  0029                     _RA1	set	41
   241  0028                     _RA0	set	40
   242  002A                     _RA2	set	42
   243  0059                     _INTF	set	89
   244  0088                     _TRISD	set	136
   245  0087                     _TRISC	set	135
   246  0086                     _TRISB	set	134
   247  0085                     _TRISA	set	133
   248  0189                     _ANSELH	set	393
   249  0188                     _ANSEL	set	392
   250                           
   251                           	psect	cinit
   252  0015                     start_initialization:	
   253                           ; #config settings
   254                           
   255  0015                     __initialization:
   256                           
   257                           ; Initialize objects allocated to BANK0
   258  0015  1383               	bcf	3,7	;select IRP bank0
   259  0016  304E               	movlw	low (__pdataBANK0+20)
   260  0017  00FD               	movwf	btemp+-1
   261  0018  3002               	movlw	high __pidataBANK0
   262  0019  00FE               	movwf	btemp
   263  001A  3063               	movlw	low __pidataBANK0
   264  001B  00FF               	movwf	btemp+1
   265  001C  303A               	movlw	low __pdataBANK0
   266  001D  0084               	movwf	4
   267  001E  120A  118A  227B  120A  118A  	fcall	init_ram0
   268  0023                     end_of_initialization:	
   269                           ;End of C runtime variable initialization code
   270                           
   271  0023                     __end_of__initialization:
   272  0023  0183               	clrf	3
   273  0024  120A  118A  28A9   	ljmp	_main	;jump to C main() function
   274                           
   275                           	psect	dataBANK0
   276  003A                     __pdataBANK0:
   277  003A                     _cc:
   278  003A                     	ds	20
   279                           
   280                           	psect	inittext
   281  0277                     init_fetch0:	
   282                           ;	Called with low address in FSR and high address in W
   283                           
   284  0277  087E               	movf	btemp,w
   285  0278  008A               	movwf	10
   286  0279  087F               	movf	btemp+1,w
   287  027A  0082               	movwf	2
   288  027B                     init_ram0:	
   289                           ;Called with:
   290                           ;	high address of idata address in btemp 
   291                           ;	low address of idata address in btemp+1 
   292                           ;	low address of data in FSR
   293                           ;	high address + 1 of data in btemp-1
   294                           
   295  027B  120A  118A  2277  120A  118A  	fcall	init_fetch0
   296  0280  0080               	movwf	0
   297  0281  0A84               	incf	4,f
   298  0282  0804               	movf	4,w
   299  0283  067D               	xorwf	btemp+-1,w
   300  0284  1903               	btfsc	3,2
   301  0285  3400               	retlw	0
   302  0286  0AFF               	incf	btemp+1,f
   303  0287  1903               	btfsc	3,2
   304  0288  0AFE               	incf	btemp,f
   305  0289  2A7B               	goto	init_ram0
   306                           
   307                           	psect	cstackCOMMON
   308  0070                     __pcstackCOMMON:
   309  0070                     ?_itr:
   310  0070                     ??_itr:	
   311                           ; 1 bytes @ 0x0
   312                           
   313  0070                     ?_main:	
   314                           ; 1 bytes @ 0x0
   315                           
   316  0070                     ?_pulse:	
   317                           ; 1 bytes @ 0x0
   318                           
   319                           
   320                           ; 1 bytes @ 0x0
   321  0070                     	ds	7
   322  0077                     itr@i:
   323                           
   324                           ; 2 bytes @ 0x7
   325  0077                     	ds	2
   326                           
   327                           	psect	cstackBANK0
   328  0020                     __pcstackBANK0:
   329  0020                     ??_pulse:
   330  0020                     ?___awmod:	
   331                           ; 1 bytes @ 0x0
   332                           
   333  0020                     ___awmod@divisor:	
   334                           ; 2 bytes @ 0x0
   335                           
   336                           
   337                           ; 2 bytes @ 0x0
   338  0020                     	ds	2
   339  0022                     ?_LCD:
   340  0022                     LCD@g:	
   341                           ; 1 bytes @ 0x2
   342                           
   343  0022                     ___awmod@dividend:	
   344                           ; 2 bytes @ 0x2
   345                           
   346                           
   347                           ; 2 bytes @ 0x2
   348  0022                     	ds	2
   349  0024                     ??___awmod:
   350  0024                     LCD@h:	
   351                           ; 1 bytes @ 0x4
   352                           
   353                           
   354                           ; 2 bytes @ 0x4
   355  0024                     	ds	1
   356  0025                     ___awmod@counter:
   357                           
   358                           ; 1 bytes @ 0x5
   359  0025                     	ds	1
   360  0026                     ??_LCD:
   361  0026                     ___awmod@sign:	
   362                           ; 1 bytes @ 0x6
   363                           
   364                           
   365                           ; 1 bytes @ 0x6
   366  0026                     	ds	1
   367  0027                     ?___awdiv:
   368  0027                     ___awdiv@divisor:	
   369                           ; 2 bytes @ 0x7
   370                           
   371                           
   372                           ; 2 bytes @ 0x7
   373  0027                     	ds	2
   374  0029                     ___awdiv@dividend:
   375                           
   376                           ; 2 bytes @ 0x9
   377  0029                     	ds	2
   378  002B                     ??___awdiv:
   379                           
   380                           ; 1 bytes @ 0xB
   381  002B                     	ds	1
   382  002C                     ___awdiv@counter:
   383                           
   384                           ; 1 bytes @ 0xC
   385  002C                     	ds	1
   386  002D                     ___awdiv@sign:
   387                           
   388                           ; 1 bytes @ 0xD
   389  002D                     	ds	1
   390  002E                     ___awdiv@quotient:
   391                           
   392                           ; 2 bytes @ 0xE
   393  002E                     	ds	2
   394  0030                     ?_display:
   395  0030                     display@k:	
   396                           ; 1 bytes @ 0x10
   397                           
   398                           
   399                           ; 2 bytes @ 0x10
   400  0030                     	ds	2
   401  0032                     ??_display:
   402  0032                     display@a:	
   403                           ; 1 bytes @ 0x12
   404                           
   405                           
   406                           ; 2 bytes @ 0x12
   407  0032                     	ds	2
   408  0034                     display@b:
   409                           
   410                           ; 2 bytes @ 0x14
   411  0034                     	ds	2
   412  0036                     display@c:
   413                           
   414                           ; 2 bytes @ 0x16
   415  0036                     	ds	2
   416  0038                     ??_main:
   417  0038                     main@cnt:	
   418                           ; 1 bytes @ 0x18
   419                           
   420                           
   421                           ; 2 bytes @ 0x18
   422  0038                     	ds	2
   423                           
   424                           	psect	maintext
   425  00A9                     __pmaintext:	
   426 ;;
   427 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   428 ;;
   429 ;; *************** function _main *****************
   430 ;; Defined at:
   431 ;;		line 31 in file "INTERRUPT USING 2 SEGMENT.c"
   432 ;; Parameters:    Size  Location     Type
   433 ;;		None
   434 ;; Auto vars:     Size  Location     Type
   435 ;;  cnt             2   24[BANK0 ] int 
   436 ;; Return value:  Size  Location     Type
   437 ;;                  1    wreg      void 
   438 ;; Registers used:
   439 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   440 ;; Tracked objects:
   441 ;;		On entry : B00/0
   442 ;;		On exit  : 0/0
   443 ;;		Unchanged: 0/0
   444 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   445 ;;      Params:         0       0       0       0       0
   446 ;;      Locals:         0       2       0       0       0
   447 ;;      Temps:          0       0       0       0       0
   448 ;;      Totals:         0       2       0       0       0
   449 ;;Total ram usage:        2 bytes
   450 ;; Hardware stack levels required when called: 4
   451 ;; This function calls:
   452 ;;		_LCD
   453 ;;		_display
   454 ;; This function is called by:
   455 ;;		Startup code after reset
   456 ;; This function uses a non-reentrant model
   457 ;;
   458                           
   459                           
   460                           ;psect for function _main
   461  00A9                     _main:
   462  00A9                     l921:	
   463                           ;incstack = 0
   464                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   465                           
   466                           
   467                           ;INTERRUPT USING 2 SEGMENT.c: 33:     TRISA=0x00;
   468  00A9  1683               	bsf	3,5	;RP0=1, select bank1
   469  00AA  1303               	bcf	3,6	;RP1=0, select bank1
   470  00AB  0185               	clrf	5	;volatile
   471                           
   472                           ;INTERRUPT USING 2 SEGMENT.c: 34:     PORTA=0x00;
   473  00AC  1283               	bcf	3,5	;RP0=0, select bank0
   474  00AD  1303               	bcf	3,6	;RP1=0, select bank0
   475  00AE  0185               	clrf	5	;volatile
   476  00AF                     l923:
   477                           
   478                           ;INTERRUPT USING 2 SEGMENT.c: 35:     TRISB=0X01;
   479  00AF  3001               	movlw	1
   480  00B0  1683               	bsf	3,5	;RP0=1, select bank1
   481  00B1  1303               	bcf	3,6	;RP1=0, select bank1
   482  00B2  0086               	movwf	6	;volatile
   483  00B3                     l925:
   484                           
   485                           ;INTERRUPT USING 2 SEGMENT.c: 36:     PORTB=0X00;
   486  00B3  1283               	bcf	3,5	;RP0=0, select bank0
   487  00B4  1303               	bcf	3,6	;RP1=0, select bank0
   488  00B5  0186               	clrf	6	;volatile
   489  00B6                     l927:
   490                           
   491                           ;INTERRUPT USING 2 SEGMENT.c: 37:     TRISC=0X00;
   492  00B6  1683               	bsf	3,5	;RP0=1, select bank1
   493  00B7  1303               	bcf	3,6	;RP1=0, select bank1
   494  00B8  0187               	clrf	7	;volatile
   495  00B9                     l929:
   496                           
   497                           ;INTERRUPT USING 2 SEGMENT.c: 38:     PORTC=0X00;
   498  00B9  1283               	bcf	3,5	;RP0=0, select bank0
   499  00BA  1303               	bcf	3,6	;RP1=0, select bank0
   500  00BB  0187               	clrf	7	;volatile
   501  00BC                     l931:
   502                           
   503                           ;INTERRUPT USING 2 SEGMENT.c: 39:     TRISD=0X00;
   504  00BC  1683               	bsf	3,5	;RP0=1, select bank1
   505  00BD  1303               	bcf	3,6	;RP1=0, select bank1
   506  00BE  0188               	clrf	8	;volatile
   507  00BF                     l933:
   508                           
   509                           ;INTERRUPT USING 2 SEGMENT.c: 40:     PORTD=0X00;
   510  00BF  1283               	bcf	3,5	;RP0=0, select bank0
   511  00C0  1303               	bcf	3,6	;RP1=0, select bank0
   512  00C1  0188               	clrf	8	;volatile
   513  00C2                     l935:
   514                           
   515                           ;INTERRUPT USING 2 SEGMENT.c: 41:     ANSEL=0X00;
   516  00C2  1683               	bsf	3,5	;RP0=1, select bank3
   517  00C3  1703               	bsf	3,6	;RP1=1, select bank3
   518  00C4  0188               	clrf	8	;volatile
   519  00C5                     l937:
   520                           
   521                           ;INTERRUPT USING 2 SEGMENT.c: 42:     ANSELH=0X00;
   522  00C5  0189               	clrf	9	;volatile
   523  00C6                     l939:
   524                           
   525                           ;INTERRUPT USING 2 SEGMENT.c: 43:     LCD(0x02,0);
   526  00C6  3002               	movlw	2
   527  00C7  1283               	bcf	3,5	;RP0=0, select bank0
   528  00C8  1303               	bcf	3,6	;RP1=0, select bank0
   529  00C9  00A2               	movwf	LCD@g
   530  00CA  3000               	movlw	0
   531  00CB  00A3               	movwf	LCD@g+1
   532  00CC  3000               	movlw	0
   533  00CD  00A4               	movwf	LCD@h
   534  00CE  00A5               	movwf	LCD@h+1
   535  00CF  120A  118A  221D  120A  118A  	fcall	_LCD
   536  00D4                     l941:
   537                           
   538                           ;INTERRUPT USING 2 SEGMENT.c: 44:     LCD(0x28,0);
   539  00D4  3028               	movlw	40
   540  00D5  1283               	bcf	3,5	;RP0=0, select bank0
   541  00D6  1303               	bcf	3,6	;RP1=0, select bank0
   542  00D7  00A2               	movwf	LCD@g
   543  00D8  3000               	movlw	0
   544  00D9  00A3               	movwf	LCD@g+1
   545  00DA  3000               	movlw	0
   546  00DB  00A4               	movwf	LCD@h
   547  00DC  00A5               	movwf	LCD@h+1
   548  00DD  120A  118A  221D  120A  118A  	fcall	_LCD
   549  00E2                     l943:
   550                           
   551                           ;INTERRUPT USING 2 SEGMENT.c: 45:     LCD(0x0e,0);
   552  00E2  300E               	movlw	14
   553  00E3  1283               	bcf	3,5	;RP0=0, select bank0
   554  00E4  1303               	bcf	3,6	;RP1=0, select bank0
   555  00E5  00A2               	movwf	LCD@g
   556  00E6  3000               	movlw	0
   557  00E7  00A3               	movwf	LCD@g+1
   558  00E8  3000               	movlw	0
   559  00E9  00A4               	movwf	LCD@h
   560  00EA  00A5               	movwf	LCD@h+1
   561  00EB  120A  118A  221D  120A  118A  	fcall	_LCD
   562  00F0                     l945:
   563                           
   564                           ;INTERRUPT USING 2 SEGMENT.c: 46:     INTCON=0b11010000;
   565  00F0  30D0               	movlw	208
   566  00F1  008B               	movwf	11	;volatile
   567  00F2                     l947:
   568                           
   569                           ;INTERRUPT USING 2 SEGMENT.c: 47:     int cnt=0;
   570  00F2  1283               	bcf	3,5	;RP0=0, select bank0
   571  00F3  1303               	bcf	3,6	;RP1=0, select bank0
   572  00F4  01B8               	clrf	main@cnt
   573  00F5  01B9               	clrf	main@cnt+1
   574  00F6                     l949:
   575                           
   576                           ;INTERRUPT USING 2 SEGMENT.c: 49:     {;INTERRUPT USING 2 SEGMENT.c: 50:         LCD(0x8
      +                          0,0);
   577  00F6  3080               	movlw	128
   578  00F7  1283               	bcf	3,5	;RP0=0, select bank0
   579  00F8  1303               	bcf	3,6	;RP1=0, select bank0
   580  00F9  00A2               	movwf	LCD@g
   581  00FA  3000               	movlw	0
   582  00FB  00A3               	movwf	LCD@g+1
   583  00FC  3000               	movlw	0
   584  00FD  00A4               	movwf	LCD@h
   585  00FE  00A5               	movwf	LCD@h+1
   586  00FF  120A  118A  221D  120A  118A  	fcall	_LCD
   587  0104                     l951:
   588                           
   589                           ;INTERRUPT USING 2 SEGMENT.c: 51:         cnt++;
   590  0104  3001               	movlw	1
   591  0105  1283               	bcf	3,5	;RP0=0, select bank0
   592  0106  1303               	bcf	3,6	;RP1=0, select bank0
   593  0107  07B8               	addwf	main@cnt,f
   594  0108  1803               	skipnc
   595  0109  0AB9               	incf	main@cnt+1,f
   596  010A  3000               	movlw	0
   597  010B  07B9               	addwf	main@cnt+1,f
   598  010C                     l953:
   599                           
   600                           ;INTERRUPT USING 2 SEGMENT.c: 52:         display(cnt);
   601  010C  0839               	movf	main@cnt+1,w
   602  010D  00B1               	movwf	display@k+1
   603  010E  0838               	movf	main@cnt,w
   604  010F  00B0               	movwf	display@k
   605  0110  120A  118A  2027  120A  118A  	fcall	_display
   606  0115  28F6               	goto	l949
   607  0116  120A  118A  2812   	ljmp	start
   608  0119                     __end_of_main:
   609                           
   610                           	psect	text1
   611  0027                     __ptext1:	
   612 ;; *************** function _display *****************
   613 ;; Defined at:
   614 ;;		line 71 in file "INTERRUPT USING 2 SEGMENT.c"
   615 ;; Parameters:    Size  Location     Type
   616 ;;  k               2   16[BANK0 ] int 
   617 ;; Auto vars:     Size  Location     Type
   618 ;;  c               2   22[BANK0 ] int 
   619 ;;  b               2   20[BANK0 ] int 
   620 ;;  a               2   18[BANK0 ] int 
   621 ;; Return value:  Size  Location     Type
   622 ;;                  1    wreg      void 
   623 ;; Registers used:
   624 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   625 ;; Tracked objects:
   626 ;;		On entry : 0/0
   627 ;;		On exit  : 0/0
   628 ;;		Unchanged: 0/0
   629 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   630 ;;      Params:         0       2       0       0       0
   631 ;;      Locals:         0       6       0       0       0
   632 ;;      Temps:          0       0       0       0       0
   633 ;;      Totals:         0       8       0       0       0
   634 ;;Total ram usage:        8 bytes
   635 ;; Hardware stack levels used: 1
   636 ;; Hardware stack levels required when called: 3
   637 ;; This function calls:
   638 ;;		_LCD
   639 ;;		___awdiv
   640 ;;		___awmod
   641 ;; This function is called by:
   642 ;;		_main
   643 ;; This function uses a non-reentrant model
   644 ;;
   645                           
   646                           
   647                           ;psect for function _display
   648  0027                     _display:
   649  0027                     l913:	
   650                           ;incstack = 0
   651                           ; Regs used in _display: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   652                           
   653                           
   654                           ;INTERRUPT USING 2 SEGMENT.c: 71: void display(int k);INTERRUPT USING 2 SEGMENT.c: 72: {
      +                          ;INTERRUPT USING 2 SEGMENT.c: 73:     int a,b,c;;INTERRUPT USING 2 SEGMENT.c: 74:     a=
      +                          k/100;
   655  0027  3064               	movlw	100
   656  0028  1283               	bcf	3,5	;RP0=0, select bank0
   657  0029  1303               	bcf	3,6	;RP1=0, select bank0
   658  002A  00A7               	movwf	___awdiv@divisor
   659  002B  3000               	movlw	0
   660  002C  00A8               	movwf	___awdiv@divisor+1
   661  002D  0831               	movf	display@k+1,w
   662  002E  00AA               	movwf	___awdiv@dividend+1
   663  002F  0830               	movf	display@k,w
   664  0030  00A9               	movwf	___awdiv@dividend
   665  0031  120A  118A  2119  120A  118A  	fcall	___awdiv
   666  0036  1283               	bcf	3,5	;RP0=0, select bank0
   667  0037  1303               	bcf	3,6	;RP1=0, select bank0
   668  0038  0828               	movf	?___awdiv+1,w
   669  0039  00B3               	movwf	display@a+1
   670  003A  0827               	movf	?___awdiv,w
   671  003B  00B2               	movwf	display@a
   672                           
   673                           ;INTERRUPT USING 2 SEGMENT.c: 75:     b=(k%100)/10;
   674  003C  300A               	movlw	10
   675  003D  00A7               	movwf	___awdiv@divisor
   676  003E  3000               	movlw	0
   677  003F  00A8               	movwf	___awdiv@divisor+1
   678  0040  0831               	movf	display@k+1,w
   679  0041  00A3               	movwf	___awmod@dividend+1
   680  0042  0830               	movf	display@k,w
   681  0043  00A2               	movwf	___awmod@dividend
   682  0044  3064               	movlw	100
   683  0045  00A0               	movwf	___awmod@divisor
   684  0046  3000               	movlw	0
   685  0047  00A1               	movwf	___awmod@divisor+1
   686  0048  120A  118A  2182  120A  118A  	fcall	___awmod
   687  004D  1283               	bcf	3,5	;RP0=0, select bank0
   688  004E  1303               	bcf	3,6	;RP1=0, select bank0
   689  004F  0821               	movf	?___awmod+1,w
   690  0050  00AA               	movwf	___awdiv@dividend+1
   691  0051  0820               	movf	?___awmod,w
   692  0052  00A9               	movwf	___awdiv@dividend
   693  0053  120A  118A  2119  120A  118A  	fcall	___awdiv
   694  0058  1283               	bcf	3,5	;RP0=0, select bank0
   695  0059  1303               	bcf	3,6	;RP1=0, select bank0
   696  005A  0828               	movf	?___awdiv+1,w
   697  005B  00B5               	movwf	display@b+1
   698  005C  0827               	movf	?___awdiv,w
   699  005D  00B4               	movwf	display@b
   700                           
   701                           ;INTERRUPT USING 2 SEGMENT.c: 76:     c=k%10;
   702  005E  300A               	movlw	10
   703  005F  00A0               	movwf	___awmod@divisor
   704  0060  3000               	movlw	0
   705  0061  00A1               	movwf	___awmod@divisor+1
   706  0062  0831               	movf	display@k+1,w
   707  0063  00A3               	movwf	___awmod@dividend+1
   708  0064  0830               	movf	display@k,w
   709  0065  00A2               	movwf	___awmod@dividend
   710  0066  120A  118A  2182  120A  118A  	fcall	___awmod
   711  006B  1283               	bcf	3,5	;RP0=0, select bank0
   712  006C  1303               	bcf	3,6	;RP1=0, select bank0
   713  006D  0821               	movf	?___awmod+1,w
   714  006E  00B7               	movwf	display@c+1
   715  006F  0820               	movf	?___awmod,w
   716  0070  00B6               	movwf	display@c
   717  0071                     l915:
   718                           
   719                           ;INTERRUPT USING 2 SEGMENT.c: 77:     LCD(0x30+a,1);
   720  0071  0832               	movf	display@a,w
   721  0072  3E30               	addlw	48
   722  0073  00A2               	movwf	LCD@g
   723  0074  0833               	movf	display@a+1,w
   724  0075  1803               	skipnc
   725  0076  3E01               	addlw	1
   726  0077  3E00               	addlw	0
   727  0078  00A3               	movwf	LCD@g+1
   728  0079  3001               	movlw	1
   729  007A  00A4               	movwf	LCD@h
   730  007B  3000               	movlw	0
   731  007C  00A5               	movwf	LCD@h+1
   732  007D  120A  118A  221D  120A  118A  	fcall	_LCD
   733  0082                     l917:
   734                           
   735                           ;INTERRUPT USING 2 SEGMENT.c: 78:     LCD(0x30+b,1);
   736  0082  1283               	bcf	3,5	;RP0=0, select bank0
   737  0083  1303               	bcf	3,6	;RP1=0, select bank0
   738  0084  0834               	movf	display@b,w
   739  0085  3E30               	addlw	48
   740  0086  00A2               	movwf	LCD@g
   741  0087  0835               	movf	display@b+1,w
   742  0088  1803               	skipnc
   743  0089  3E01               	addlw	1
   744  008A  3E00               	addlw	0
   745  008B  00A3               	movwf	LCD@g+1
   746  008C  3001               	movlw	1
   747  008D  00A4               	movwf	LCD@h
   748  008E  3000               	movlw	0
   749  008F  00A5               	movwf	LCD@h+1
   750  0090  120A  118A  221D  120A  118A  	fcall	_LCD
   751  0095                     l919:
   752                           
   753                           ;INTERRUPT USING 2 SEGMENT.c: 79:     LCD(0x30+c,1);
   754  0095  1283               	bcf	3,5	;RP0=0, select bank0
   755  0096  1303               	bcf	3,6	;RP1=0, select bank0
   756  0097  0836               	movf	display@c,w
   757  0098  3E30               	addlw	48
   758  0099  00A2               	movwf	LCD@g
   759  009A  0837               	movf	display@c+1,w
   760  009B  1803               	skipnc
   761  009C  3E01               	addlw	1
   762  009D  3E00               	addlw	0
   763  009E  00A3               	movwf	LCD@g+1
   764  009F  3001               	movlw	1
   765  00A0  00A4               	movwf	LCD@h
   766  00A1  3000               	movlw	0
   767  00A2  00A5               	movwf	LCD@h+1
   768  00A3  120A  118A  221D  120A  118A  	fcall	_LCD
   769  00A8                     l63:
   770  00A8  0008               	return
   771  00A9                     __end_of_display:
   772                           
   773                           	psect	text2
   774  0182                     __ptext2:	
   775 ;; *************** function ___awmod *****************
   776 ;; Defined at:
   777 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awmod.c"
   778 ;; Parameters:    Size  Location     Type
   779 ;;  divisor         2    0[BANK0 ] int 
   780 ;;  dividend        2    2[BANK0 ] int 
   781 ;; Auto vars:     Size  Location     Type
   782 ;;  sign            1    6[BANK0 ] unsigned char 
   783 ;;  counter         1    5[BANK0 ] unsigned char 
   784 ;; Return value:  Size  Location     Type
   785 ;;                  2    0[BANK0 ] int 
   786 ;; Registers used:
   787 ;;		wreg, status,2, status,0
   788 ;; Tracked objects:
   789 ;;		On entry : 0/0
   790 ;;		On exit  : 0/0
   791 ;;		Unchanged: 0/0
   792 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   793 ;;      Params:         0       4       0       0       0
   794 ;;      Locals:         0       2       0       0       0
   795 ;;      Temps:          0       1       0       0       0
   796 ;;      Totals:         0       7       0       0       0
   797 ;;Total ram usage:        7 bytes
   798 ;; Hardware stack levels used: 1
   799 ;; Hardware stack levels required when called: 1
   800 ;; This function calls:
   801 ;;		Nothing
   802 ;; This function is called by:
   803 ;;		_display
   804 ;; This function uses a non-reentrant model
   805 ;;
   806                           
   807                           
   808                           ;psect for function ___awmod
   809  0182                     ___awmod:
   810  0182                     l875:	
   811                           ;incstack = 0
   812                           ; Regs used in ___awmod: [wreg+status,2+status,0]
   813                           
   814  0182  1283               	bcf	3,5	;RP0=0, select bank0
   815  0183  1303               	bcf	3,6	;RP1=0, select bank0
   816  0184  01A6               	clrf	___awmod@sign
   817  0185                     l877:
   818  0185  1FA3               	btfss	___awmod@dividend+1,7
   819  0186  2988               	goto	u381
   820  0187  2989               	goto	u380
   821  0188                     u381:
   822  0188  2990               	goto	l883
   823  0189                     u380:
   824  0189                     l879:
   825  0189  09A2               	comf	___awmod@dividend,f
   826  018A  09A3               	comf	___awmod@dividend+1,f
   827  018B  0AA2               	incf	___awmod@dividend,f
   828  018C  1903               	skipnz
   829  018D  0AA3               	incf	___awmod@dividend+1,f
   830  018E                     l881:
   831  018E  01A6               	clrf	___awmod@sign
   832  018F  0AA6               	incf	___awmod@sign,f
   833  0190                     l883:
   834  0190  1FA1               	btfss	___awmod@divisor+1,7
   835  0191  2993               	goto	u391
   836  0192  2994               	goto	u390
   837  0193                     u391:
   838  0193  2999               	goto	l887
   839  0194                     u390:
   840  0194                     l885:
   841  0194  09A0               	comf	___awmod@divisor,f
   842  0195  09A1               	comf	___awmod@divisor+1,f
   843  0196  0AA0               	incf	___awmod@divisor,f
   844  0197  1903               	skipnz
   845  0198  0AA1               	incf	___awmod@divisor+1,f
   846  0199                     l887:
   847  0199  0820               	movf	___awmod@divisor,w
   848  019A  0421               	iorwf	___awmod@divisor+1,w
   849  019B  1903               	btfsc	3,2
   850  019C  299E               	goto	u401
   851  019D  299F               	goto	u400
   852  019E                     u401:
   853  019E  29CE               	goto	l905
   854  019F                     u400:
   855  019F                     l889:
   856  019F  01A5               	clrf	___awmod@counter
   857  01A0  0AA5               	incf	___awmod@counter,f
   858  01A1  29AD               	goto	l895
   859  01A2                     l891:
   860  01A2  3001               	movlw	1
   861  01A3                     u415:
   862  01A3  1003               	clrc
   863  01A4  0DA0               	rlf	___awmod@divisor,f
   864  01A5  0DA1               	rlf	___awmod@divisor+1,f
   865  01A6  3EFF               	addlw	-1
   866  01A7  1D03               	skipz
   867  01A8  29A3               	goto	u415
   868  01A9                     l893:
   869  01A9  3001               	movlw	1
   870  01AA  00A4               	movwf	??___awmod
   871  01AB  0824               	movf	??___awmod,w
   872  01AC  07A5               	addwf	___awmod@counter,f
   873  01AD                     l895:
   874  01AD  1FA1               	btfss	___awmod@divisor+1,7
   875  01AE  29B0               	goto	u421
   876  01AF  29B1               	goto	u420
   877  01B0                     u421:
   878  01B0  29A2               	goto	l891
   879  01B1                     u420:
   880  01B1                     l897:
   881  01B1  0821               	movf	___awmod@divisor+1,w
   882  01B2  0223               	subwf	___awmod@dividend+1,w
   883  01B3  1D03               	skipz
   884  01B4  29B7               	goto	u435
   885  01B5  0820               	movf	___awmod@divisor,w
   886  01B6  0222               	subwf	___awmod@dividend,w
   887  01B7                     u435:
   888  01B7  1C03               	skipc
   889  01B8  29BA               	goto	u431
   890  01B9  29BB               	goto	u430
   891  01BA                     u431:
   892  01BA  29C1               	goto	l901
   893  01BB                     u430:
   894  01BB                     l899:
   895  01BB  0820               	movf	___awmod@divisor,w
   896  01BC  02A2               	subwf	___awmod@dividend,f
   897  01BD  0821               	movf	___awmod@divisor+1,w
   898  01BE  1C03               	skipc
   899  01BF  03A3               	decf	___awmod@dividend+1,f
   900  01C0  02A3               	subwf	___awmod@dividend+1,f
   901  01C1                     l901:
   902  01C1  3001               	movlw	1
   903  01C2                     u445:
   904  01C2  1003               	clrc
   905  01C3  0CA1               	rrf	___awmod@divisor+1,f
   906  01C4  0CA0               	rrf	___awmod@divisor,f
   907  01C5  3EFF               	addlw	-1
   908  01C6  1D03               	skipz
   909  01C7  29C2               	goto	u445
   910  01C8                     l903:
   911  01C8  3001               	movlw	1
   912  01C9  02A5               	subwf	___awmod@counter,f
   913  01CA  1D03               	btfss	3,2
   914  01CB  29CD               	goto	u451
   915  01CC  29CE               	goto	u450
   916  01CD                     u451:
   917  01CD  29B1               	goto	l897
   918  01CE                     u450:
   919  01CE                     l905:
   920  01CE  0826               	movf	___awmod@sign,w
   921  01CF  1903               	btfsc	3,2
   922  01D0  29D2               	goto	u461
   923  01D1  29D3               	goto	u460
   924  01D2                     u461:
   925  01D2  29D8               	goto	l909
   926  01D3                     u460:
   927  01D3                     l907:
   928  01D3  09A2               	comf	___awmod@dividend,f
   929  01D4  09A3               	comf	___awmod@dividend+1,f
   930  01D5  0AA2               	incf	___awmod@dividend,f
   931  01D6  1903               	skipnz
   932  01D7  0AA3               	incf	___awmod@dividend+1,f
   933  01D8                     l909:
   934  01D8  0823               	movf	___awmod@dividend+1,w
   935  01D9  00A1               	movwf	?___awmod+1
   936  01DA  0822               	movf	___awmod@dividend,w
   937  01DB  00A0               	movwf	?___awmod
   938  01DC                     l315:
   939  01DC  0008               	return
   940  01DD                     __end_of___awmod:
   941                           
   942                           	psect	text3
   943  0119                     __ptext3:	
   944 ;; *************** function ___awdiv *****************
   945 ;; Defined at:
   946 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awdiv.c"
   947 ;; Parameters:    Size  Location     Type
   948 ;;  divisor         2    7[BANK0 ] int 
   949 ;;  dividend        2    9[BANK0 ] int 
   950 ;; Auto vars:     Size  Location     Type
   951 ;;  quotient        2   14[BANK0 ] int 
   952 ;;  sign            1   13[BANK0 ] unsigned char 
   953 ;;  counter         1   12[BANK0 ] unsigned char 
   954 ;; Return value:  Size  Location     Type
   955 ;;                  2    7[BANK0 ] int 
   956 ;; Registers used:
   957 ;;		wreg, status,2, status,0
   958 ;; Tracked objects:
   959 ;;		On entry : 0/0
   960 ;;		On exit  : 0/0
   961 ;;		Unchanged: 0/0
   962 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   963 ;;      Params:         0       4       0       0       0
   964 ;;      Locals:         0       4       0       0       0
   965 ;;      Temps:          0       1       0       0       0
   966 ;;      Totals:         0       9       0       0       0
   967 ;;Total ram usage:        9 bytes
   968 ;; Hardware stack levels used: 1
   969 ;; Hardware stack levels required when called: 1
   970 ;; This function calls:
   971 ;;		Nothing
   972 ;; This function is called by:
   973 ;;		_display
   974 ;; This function uses a non-reentrant model
   975 ;;
   976                           
   977                           
   978                           ;psect for function ___awdiv
   979  0119                     ___awdiv:
   980  0119                     l831:	
   981                           ;incstack = 0
   982                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
   983                           
   984  0119  1283               	bcf	3,5	;RP0=0, select bank0
   985  011A  1303               	bcf	3,6	;RP1=0, select bank0
   986  011B  01AD               	clrf	___awdiv@sign
   987  011C                     l833:
   988  011C  1FA8               	btfss	___awdiv@divisor+1,7
   989  011D  291F               	goto	u281
   990  011E  2920               	goto	u280
   991  011F                     u281:
   992  011F  2927               	goto	l839
   993  0120                     u280:
   994  0120                     l835:
   995  0120  09A7               	comf	___awdiv@divisor,f
   996  0121  09A8               	comf	___awdiv@divisor+1,f
   997  0122  0AA7               	incf	___awdiv@divisor,f
   998  0123  1903               	skipnz
   999  0124  0AA8               	incf	___awdiv@divisor+1,f
  1000  0125                     l837:
  1001  0125  01AD               	clrf	___awdiv@sign
  1002  0126  0AAD               	incf	___awdiv@sign,f
  1003  0127                     l839:
  1004  0127  1FAA               	btfss	___awdiv@dividend+1,7
  1005  0128  292A               	goto	u291
  1006  0129  292B               	goto	u290
  1007  012A                     u291:
  1008  012A  2934               	goto	l845
  1009  012B                     u290:
  1010  012B                     l841:
  1011  012B  09A9               	comf	___awdiv@dividend,f
  1012  012C  09AA               	comf	___awdiv@dividend+1,f
  1013  012D  0AA9               	incf	___awdiv@dividend,f
  1014  012E  1903               	skipnz
  1015  012F  0AAA               	incf	___awdiv@dividend+1,f
  1016  0130                     l843:
  1017  0130  3001               	movlw	1
  1018  0131  00AB               	movwf	??___awdiv
  1019  0132  082B               	movf	??___awdiv,w
  1020  0133  06AD               	xorwf	___awdiv@sign,f
  1021  0134                     l845:
  1022  0134  01AE               	clrf	___awdiv@quotient
  1023  0135  01AF               	clrf	___awdiv@quotient+1
  1024  0136                     l847:
  1025  0136  0827               	movf	___awdiv@divisor,w
  1026  0137  0428               	iorwf	___awdiv@divisor+1,w
  1027  0138  1903               	btfsc	3,2
  1028  0139  293B               	goto	u301
  1029  013A  293C               	goto	u300
  1030  013B                     u301:
  1031  013B  2973               	goto	l867
  1032  013C                     u300:
  1033  013C                     l849:
  1034  013C  01AC               	clrf	___awdiv@counter
  1035  013D  0AAC               	incf	___awdiv@counter,f
  1036  013E  294A               	goto	l855
  1037  013F                     l851:
  1038  013F  3001               	movlw	1
  1039  0140                     u315:
  1040  0140  1003               	clrc
  1041  0141  0DA7               	rlf	___awdiv@divisor,f
  1042  0142  0DA8               	rlf	___awdiv@divisor+1,f
  1043  0143  3EFF               	addlw	-1
  1044  0144  1D03               	skipz
  1045  0145  2940               	goto	u315
  1046  0146                     l853:
  1047  0146  3001               	movlw	1
  1048  0147  00AB               	movwf	??___awdiv
  1049  0148  082B               	movf	??___awdiv,w
  1050  0149  07AC               	addwf	___awdiv@counter,f
  1051  014A                     l855:
  1052  014A  1FA8               	btfss	___awdiv@divisor+1,7
  1053  014B  294D               	goto	u321
  1054  014C  294E               	goto	u320
  1055  014D                     u321:
  1056  014D  293F               	goto	l851
  1057  014E                     u320:
  1058  014E                     l857:
  1059  014E  3001               	movlw	1
  1060  014F                     u335:
  1061  014F  1003               	clrc
  1062  0150  0DAE               	rlf	___awdiv@quotient,f
  1063  0151  0DAF               	rlf	___awdiv@quotient+1,f
  1064  0152  3EFF               	addlw	-1
  1065  0153  1D03               	skipz
  1066  0154  294F               	goto	u335
  1067  0155  0828               	movf	___awdiv@divisor+1,w
  1068  0156  022A               	subwf	___awdiv@dividend+1,w
  1069  0157  1D03               	skipz
  1070  0158  295B               	goto	u345
  1071  0159  0827               	movf	___awdiv@divisor,w
  1072  015A  0229               	subwf	___awdiv@dividend,w
  1073  015B                     u345:
  1074  015B  1C03               	skipc
  1075  015C  295E               	goto	u341
  1076  015D  295F               	goto	u340
  1077  015E                     u341:
  1078  015E  2966               	goto	l863
  1079  015F                     u340:
  1080  015F                     l859:
  1081  015F  0827               	movf	___awdiv@divisor,w
  1082  0160  02A9               	subwf	___awdiv@dividend,f
  1083  0161  0828               	movf	___awdiv@divisor+1,w
  1084  0162  1C03               	skipc
  1085  0163  03AA               	decf	___awdiv@dividend+1,f
  1086  0164  02AA               	subwf	___awdiv@dividend+1,f
  1087  0165                     l861:
  1088  0165  142E               	bsf	___awdiv@quotient,0
  1089  0166                     l863:
  1090  0166  3001               	movlw	1
  1091  0167                     u355:
  1092  0167  1003               	clrc
  1093  0168  0CA8               	rrf	___awdiv@divisor+1,f
  1094  0169  0CA7               	rrf	___awdiv@divisor,f
  1095  016A  3EFF               	addlw	-1
  1096  016B  1D03               	skipz
  1097  016C  2967               	goto	u355
  1098  016D                     l865:
  1099  016D  3001               	movlw	1
  1100  016E  02AC               	subwf	___awdiv@counter,f
  1101  016F  1D03               	btfss	3,2
  1102  0170  2972               	goto	u361
  1103  0171  2973               	goto	u360
  1104  0172                     u361:
  1105  0172  294E               	goto	l857
  1106  0173                     u360:
  1107  0173                     l867:
  1108  0173  082D               	movf	___awdiv@sign,w
  1109  0174  1903               	btfsc	3,2
  1110  0175  2977               	goto	u371
  1111  0176  2978               	goto	u370
  1112  0177                     u371:
  1113  0177  297D               	goto	l871
  1114  0178                     u370:
  1115  0178                     l869:
  1116  0178  09AE               	comf	___awdiv@quotient,f
  1117  0179  09AF               	comf	___awdiv@quotient+1,f
  1118  017A  0AAE               	incf	___awdiv@quotient,f
  1119  017B  1903               	skipnz
  1120  017C  0AAF               	incf	___awdiv@quotient+1,f
  1121  017D                     l871:
  1122  017D  082F               	movf	___awdiv@quotient+1,w
  1123  017E  00A8               	movwf	?___awdiv+1
  1124  017F  082E               	movf	___awdiv@quotient,w
  1125  0180  00A7               	movwf	?___awdiv
  1126  0181                     l302:
  1127  0181  0008               	return
  1128  0182                     __end_of___awdiv:
  1129                           
  1130                           	psect	text4
  1131  021D                     __ptext4:	
  1132 ;; *************** function _LCD *****************
  1133 ;; Defined at:
  1134 ;;		line 62 in file "INTERRUPT USING 2 SEGMENT.c"
  1135 ;; Parameters:    Size  Location     Type
  1136 ;;  g               2    2[BANK0 ] int 
  1137 ;;  h               2    4[BANK0 ] int 
  1138 ;; Auto vars:     Size  Location     Type
  1139 ;;		None
  1140 ;; Return value:  Size  Location     Type
  1141 ;;                  1    wreg      void 
  1142 ;; Registers used:
  1143 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1144 ;; Tracked objects:
  1145 ;;		On entry : 0/0
  1146 ;;		On exit  : 0/0
  1147 ;;		Unchanged: 0/0
  1148 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1149 ;;      Params:         0       4       0       0       0
  1150 ;;      Locals:         0       0       0       0       0
  1151 ;;      Temps:          0       2       0       0       0
  1152 ;;      Totals:         0       6       0       0       0
  1153 ;;Total ram usage:        6 bytes
  1154 ;; Hardware stack levels used: 1
  1155 ;; Hardware stack levels required when called: 2
  1156 ;; This function calls:
  1157 ;;		_pulse
  1158 ;; This function is called by:
  1159 ;;		_main
  1160 ;;		_display
  1161 ;; This function uses a non-reentrant model
  1162 ;;
  1163                           
  1164                           
  1165                           ;psect for function _LCD
  1166  021D                     _LCD:
  1167  021D                     l821:	
  1168                           ;incstack = 0
  1169                           ; Regs used in _LCD: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1170                           
  1171                           
  1172                           ;INTERRUPT USING 2 SEGMENT.c: 62: void LCD(int g,int h);INTERRUPT USING 2 SEGMENT.c: 63:
      +                           {;INTERRUPT USING 2 SEGMENT.c: 64:    RA0=h;
  1173  021D  1283               	bcf	3,5	;RP0=0, select bank0
  1174  021E  1303               	bcf	3,6	;RP1=0, select bank0
  1175  021F  1824               	btfsc	LCD@h,0
  1176  0220  2A22               	goto	u251
  1177  0221  2A26               	goto	u250
  1178  0222                     u251:
  1179  0222  1283               	bcf	3,5	;RP0=0, select bank0
  1180  0223  1303               	bcf	3,6	;RP1=0, select bank0
  1181  0224  1405               	bsf	5,0	;volatile
  1182  0225  2A29               	goto	u264
  1183  0226                     u250:
  1184  0226  1283               	bcf	3,5	;RP0=0, select bank0
  1185  0227  1303               	bcf	3,6	;RP1=0, select bank0
  1186  0228  1005               	bcf	5,0	;volatile
  1187  0229                     u264:
  1188                           
  1189                           ;INTERRUPT USING 2 SEGMENT.c: 65:    RA1=0;
  1190  0229  1085               	bcf	5,1	;volatile
  1191  022A                     l823:
  1192                           
  1193                           ;INTERRUPT USING 2 SEGMENT.c: 66:    PORTC=(g&0Xf0)>>4;
  1194  022A  0823               	movf	LCD@g+1,w
  1195  022B  00A7               	movwf	??_LCD+1
  1196  022C  0822               	movf	LCD@g,w
  1197  022D  00A6               	movwf	??_LCD
  1198  022E  3004               	movlw	4
  1199  022F  00FF               	movwf	btemp+1
  1200  0230                     u275:
  1201  0230  0D27               	rlf	??_LCD+1,w
  1202  0231  0CA7               	rrf	??_LCD+1,f
  1203  0232  0CA6               	rrf	??_LCD,f
  1204  0233  0BFF               	decfsz	btemp+1,f
  1205  0234  2A30               	goto	u275
  1206  0235  0826               	movf	??_LCD,w
  1207  0236  390F               	andlw	15
  1208  0237  0087               	movwf	7	;volatile
  1209  0238                     l825:
  1210                           
  1211                           ;INTERRUPT USING 2 SEGMENT.c: 67:    pulse();
  1212  0238  120A  118A  2248  120A  118A  	fcall	_pulse
  1213  023D                     l827:
  1214                           
  1215                           ;INTERRUPT USING 2 SEGMENT.c: 68:    PORTC=(g&0x0f);
  1216  023D  1283               	bcf	3,5	;RP0=0, select bank0
  1217  023E  1303               	bcf	3,6	;RP1=0, select bank0
  1218  023F  0822               	movf	LCD@g,w
  1219  0240  390F               	andlw	15
  1220  0241  0087               	movwf	7	;volatile
  1221  0242                     l829:
  1222                           
  1223                           ;INTERRUPT USING 2 SEGMENT.c: 69:    pulse();
  1224  0242  120A  118A  2248  120A  118A  	fcall	_pulse
  1225  0247                     l60:
  1226  0247  0008               	return
  1227  0248                     __end_of_LCD:
  1228                           
  1229                           	psect	text5
  1230  0248                     __ptext5:	
  1231 ;; *************** function _pulse *****************
  1232 ;; Defined at:
  1233 ;;		line 55 in file "INTERRUPT USING 2 SEGMENT.c"
  1234 ;; Parameters:    Size  Location     Type
  1235 ;;		None
  1236 ;; Auto vars:     Size  Location     Type
  1237 ;;		None
  1238 ;; Return value:  Size  Location     Type
  1239 ;;                  1    wreg      void 
  1240 ;; Registers used:
  1241 ;;		wreg
  1242 ;; Tracked objects:
  1243 ;;		On entry : 0/0
  1244 ;;		On exit  : 0/0
  1245 ;;		Unchanged: 0/0
  1246 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1247 ;;      Params:         0       0       0       0       0
  1248 ;;      Locals:         0       0       0       0       0
  1249 ;;      Temps:          0       2       0       0       0
  1250 ;;      Totals:         0       2       0       0       0
  1251 ;;Total ram usage:        2 bytes
  1252 ;; Hardware stack levels used: 1
  1253 ;; Hardware stack levels required when called: 1
  1254 ;; This function calls:
  1255 ;;		Nothing
  1256 ;; This function is called by:
  1257 ;;		_LCD
  1258 ;; This function uses a non-reentrant model
  1259 ;;
  1260                           
  1261                           
  1262                           ;psect for function _pulse
  1263  0248                     _pulse:
  1264  0248                     l815:	
  1265                           ;incstack = 0
  1266                           ; Regs used in _pulse: [wreg]
  1267                           
  1268                           
  1269                           ;INTERRUPT USING 2 SEGMENT.c: 57:     RA2=1;
  1270  0248  1283               	bcf	3,5	;RP0=0, select bank0
  1271  0249  1303               	bcf	3,6	;RP1=0, select bank0
  1272  024A  1505               	bsf	5,2	;volatile
  1273  024B                     l817:
  1274                           
  1275                           ;INTERRUPT USING 2 SEGMENT.c: 58:     _delay((unsigned long)((10)*(4000000/4000.0)));
  1276  024B  300D               	movlw	13
  1277  024C  1283               	bcf	3,5	;RP0=0, select bank0
  1278  024D  1303               	bcf	3,6	;RP1=0, select bank0
  1279  024E  00A1               	movwf	??_pulse+1
  1280  024F  30FB               	movlw	251
  1281  0250  00A0               	movwf	??_pulse
  1282  0251                     u477:
  1283  0251  0BA0               	decfsz	??_pulse,f
  1284  0252  2A51               	goto	u477
  1285  0253  0BA1               	decfsz	??_pulse+1,f
  1286  0254  2A51               	goto	u477
  1287  0255                     l819:
  1288                           
  1289                           ;INTERRUPT USING 2 SEGMENT.c: 59:     RA2=0;
  1290  0255  1283               	bcf	3,5	;RP0=0, select bank0
  1291  0256  1303               	bcf	3,6	;RP1=0, select bank0
  1292  0257  1105               	bcf	5,2	;volatile
  1293                           
  1294                           ;INTERRUPT USING 2 SEGMENT.c: 60:     _delay((unsigned long)((10)*(4000000/4000.0)));
  1295  0258  300D               	movlw	13
  1296  0259  1283               	bcf	3,5	;RP0=0, select bank0
  1297  025A  1303               	bcf	3,6	;RP1=0, select bank0
  1298  025B  00A1               	movwf	??_pulse+1
  1299  025C  30FB               	movlw	251
  1300  025D  00A0               	movwf	??_pulse
  1301  025E                     u487:
  1302  025E  0BA0               	decfsz	??_pulse,f
  1303  025F  2A5E               	goto	u487
  1304  0260  0BA1               	decfsz	??_pulse+1,f
  1305  0261  2A5E               	goto	u487
  1306  0262                     l57:
  1307  0262  0008               	return
  1308  0263                     __end_of_pulse:
  1309                           
  1310                           	psect	text6
  1311  01DD                     __ptext6:	
  1312 ;; *************** function _itr *****************
  1313 ;; Defined at:
  1314 ;;		line 17 in file "INTERRUPT USING 2 SEGMENT.c"
  1315 ;; Parameters:    Size  Location     Type
  1316 ;;		None
  1317 ;; Auto vars:     Size  Location     Type
  1318 ;;  i               2    7[COMMON] int 
  1319 ;; Return value:  Size  Location     Type
  1320 ;;                  1    wreg      void 
  1321 ;; Registers used:
  1322 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  1323 ;; Tracked objects:
  1324 ;;		On entry : 0/0
  1325 ;;		On exit  : 0/0
  1326 ;;		Unchanged: 0/0
  1327 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1328 ;;      Params:         0       0       0       0       0
  1329 ;;      Locals:         2       0       0       0       0
  1330 ;;      Temps:          7       0       0       0       0
  1331 ;;      Totals:         9       0       0       0       0
  1332 ;;Total ram usage:        9 bytes
  1333 ;; Hardware stack levels used: 1
  1334 ;; This function calls:
  1335 ;;		Nothing
  1336 ;; This function is called by:
  1337 ;;		Interrupt level 1
  1338 ;; This function uses a non-reentrant model
  1339 ;;
  1340                           
  1341                           
  1342                           ;psect for function _itr
  1343  01DD                     _itr:
  1344  01DD                     i1l761:
  1345                           
  1346                           ;INTERRUPT USING 2 SEGMENT.c: 19:     if (INTF==1)
  1347  01DD  1C8B               	btfss	11,1	;volatile
  1348  01DE  29E0               	goto	u23_21
  1349  01DF  29E1               	goto	u23_20
  1350  01E0                     u23_21:
  1351  01E0  2A10               	goto	i1l46
  1352  01E1                     u23_20:
  1353  01E1                     i1l763:
  1354                           
  1355                           ;INTERRUPT USING 2 SEGMENT.c: 20:     {;INTERRUPT USING 2 SEGMENT.c: 21:         int i=0
      +                          ;
  1356  01E1  01F7               	clrf	itr@i
  1357  01E2  01F8               	clrf	itr@i+1
  1358                           
  1359                           ;INTERRUPT USING 2 SEGMENT.c: 22:         for (i=0;i<=9;i++)
  1360  01E3  01F7               	clrf	itr@i
  1361  01E4  01F8               	clrf	itr@i+1
  1362  01E5                     i1l769:
  1363                           
  1364                           ;INTERRUPT USING 2 SEGMENT.c: 23:         {;INTERRUPT USING 2 SEGMENT.c: 24:            
      +                           PORTD=cc[i];
  1365  01E5  0877               	movf	itr@i,w
  1366  01E6  00F0               	movwf	??_itr
  1367  01E7  0770               	addwf	??_itr,w
  1368  01E8  3E3A               	addlw	(low (_cc| 0))& (0+255)
  1369  01E9  0084               	movwf	4
  1370  01EA  1383               	bcf	3,7	;select IRP bank0
  1371  01EB  0800               	movf	0,w
  1372  01EC  1283               	bcf	3,5	;RP0=0, select bank0
  1373  01ED  1303               	bcf	3,6	;RP1=0, select bank0
  1374  01EE  0088               	movwf	8	;volatile
  1375  01EF                     i1l771:
  1376                           
  1377                           ;INTERRUPT USING 2 SEGMENT.c: 25:             _delay((unsigned long)((500)*(4000000/4000
      +                          .0)));
  1378  01EF  3003               	movlw	3
  1379  01F0  00F2               	movwf	??_itr+2
  1380  01F1  308A               	movlw	138
  1381  01F2  00F1               	movwf	??_itr+1
  1382  01F3  3055               	movlw	85
  1383  01F4  00F0               	movwf	??_itr
  1384  01F5                     u49_27:
  1385  01F5  0BF0               	decfsz	??_itr,f
  1386  01F6  29F5               	goto	u49_27
  1387  01F7  0BF1               	decfsz	??_itr+1,f
  1388  01F8  29F5               	goto	u49_27
  1389  01F9  0BF2               	decfsz	??_itr+2,f
  1390  01FA  29F5               	goto	u49_27
  1391  01FB  29FC               	nop2
  1392  01FC                     i1l773:
  1393                           
  1394                           ;INTERRUPT USING 2 SEGMENT.c: 26:         }
  1395  01FC  3001               	movlw	1
  1396  01FD  07F7               	addwf	itr@i,f
  1397  01FE  1803               	skipnc
  1398  01FF  0AF8               	incf	itr@i+1,f
  1399  0200  3000               	movlw	0
  1400  0201  07F8               	addwf	itr@i+1,f
  1401  0202                     i1l775:
  1402  0202  0878               	movf	itr@i+1,w
  1403  0203  3A80               	xorlw	128
  1404  0204  00FF               	movwf	btemp+1
  1405  0205  3080               	movlw	128
  1406  0206  027F               	subwf	btemp+1,w
  1407  0207  1D03               	skipz
  1408  0208  2A0B               	goto	u24_25
  1409  0209  300A               	movlw	10
  1410  020A  0277               	subwf	itr@i,w
  1411  020B                     u24_25:
  1412  020B  1C03               	skipc
  1413  020C  2A0E               	goto	u24_21
  1414  020D  2A0F               	goto	u24_20
  1415  020E                     u24_21:
  1416  020E  29E5               	goto	i1l769
  1417  020F                     u24_20:
  1418  020F                     i1l777:
  1419  020F                     i1l779:
  1420                           
  1421                           ;INTERRUPT USING 2 SEGMENT.c: 28:         INTF=0;
  1422  020F  108B               	bcf	11,1	;volatile
  1423  0210                     i1l46:
  1424  0210  0876               	movf	??_itr+6,w
  1425  0211  1283               	bcf	3,5	;RP0=0, select bank0
  1426  0212  1303               	bcf	3,6	;RP1=0, select bank0
  1427  0213  00FF               	movwf	btemp+1
  1428  0214  0875               	movf	??_itr+5,w
  1429  0215  008A               	movwf	10
  1430  0216  0874               	movf	??_itr+4,w
  1431  0217  0084               	movwf	4
  1432  0218  0E73               	swapf	??_itr+3,w
  1433  0219  0083               	movwf	3
  1434  021A  0EFE               	swapf	btemp,f
  1435  021B  0E7E               	swapf	btemp,w
  1436  021C  0009               	retfie
  1437  021D                     __end_of_itr:
  1438  007E                     btemp	set	126	;btemp
  1439  007E                     wtemp0	set	126
  1440                           
  1441                           	psect	intentry
  1442  0004                     __pintentry:	
  1443                           ;incstack = 0
  1444                           ; Regs used in _itr: [wreg-fsr0h+status,2+status,0+btemp+1]
  1445                           
  1446  0004                     interrupt_function:
  1447  007E                     saved_w	set	btemp
  1448  0004  00FE               	movwf	btemp
  1449  0005  0E03               	swapf	3,w
  1450  0006  00F3               	movwf	??_itr+3
  1451  0007  0804               	movf	4,w
  1452  0008  00F4               	movwf	??_itr+4
  1453  0009  080A               	movf	10,w
  1454  000A  00F5               	movwf	??_itr+5
  1455  000B  1283               	bcf	3,5	;RP0=0, select bank0
  1456  000C  1303               	bcf	3,6	;RP1=0, select bank0
  1457  000D  087F               	movf	btemp+1,w
  1458  000E  00F6               	movwf	??_itr+6
  1459  000F  120A  118A  29DD   	ljmp	_itr

Data Sizes:
    Strings     0
    Constant    0
    Data        20
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9       9
    BANK0            80     26      46
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _itr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_display
    _display->___awdiv
    ___awdiv->___awmod
    _LCD->_pulse

Critical Paths under _itr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _itr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _itr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _itr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    3699
                                             24 BANK0      2     2      0
                                _LCD
                            _display
 ---------------------------------------------------------------------------------
 (1) _display                                              8     6      2    2545
                                             16 BANK0      8     6      2
                                _LCD
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     600
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     604
                                              7 BANK0      9     5      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _LCD                                                  6     2      4    1130
                                              2 BANK0      6     2      4
                              _pulse
 ---------------------------------------------------------------------------------
 (3) _pulse                                                2     2      0       0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _itr                                                  9     9      0      45
                                              0 COMMON     9     9      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD
     _pulse
   _display
     _LCD
     ___awdiv
       ___awmod (ARG)
     ___awmod

 _itr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     1A      2E       5       57.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      9       9       1       64.3%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      37      12        0.0%
ABS                  0      0      37       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Thu Mar 30 15:16:26 2023

                      pc 0002                       l60 0247                       l63 00A8  
                     l57 0262             ___awdiv@sign 002D                       _cc 003A  
                     fsr 0004                      l302 0181                      l315 01DC  
                    l821 021D                      l901 01C1                      l815 0248  
                    l823 022A                      l831 0119                      l903 01C8  
                    l817 024B                      l825 0238                      l841 012B  
                    l833 011C                      l905 01CE                      l913 0027  
                    l921 00A9                      l819 0255                      l827 023D  
                    l851 013F                      l843 0130                      l835 0120  
                    l907 01D3                      l915 0071                      l931 00BC  
                    l923 00AF                      l829 0242                      l861 0165  
                    l853 0146                      l845 0134                      l837 0125  
                    l909 01D8                      l917 0082                      l941 00D4  
                    l933 00BF                      l925 00B3                      l871 017D  
                    l863 0166                      l855 014A                      l847 0136  
                    l839 0127                      l919 0095                      l951 0104  
                    l943 00E2                      l935 00C2                      l927 00B6  
                    l865 016D                      l857 014E                      l849 013C  
                    l881 018E                      l953 010C                      l945 00F0  
                    l937 00C5                      l929 00B9                      l859 015F  
                    l867 0173                      l891 01A2                      l883 0190  
                    l875 0182                      l947 00F2                      l939 00C6  
                    l869 0178                      l893 01A9                      l885 0194  
                    l877 0185                      l949 00F6                      l895 01AD  
                    l887 0199                      l879 0189                      l897 01B1  
                    l889 019F                      l899 01BB                      _RA0 0028  
                    _LCD 021D                      _RA1 0029                      _RA2 002A  
                    u300 013C                      u301 013B                      u320 014E  
                    u400 019F                      u321 014D                      u401 019E  
                    u250 0226                      u251 0222                      u315 0140  
                    u340 015F                      u420 01B1                      u341 015E  
                    u421 01B0                      u430 01BB                      u335 014F  
                    u431 01BA                      u415 01A3                      u264 0229  
                    u360 0173                      u280 0120                      u361 0172  
                    u345 015B                      u281 011F                      u370 0178  
                    u290 012B                      u450 01CE                      u275 0230  
                    u371 0177                      u355 0167                      u291 012A  
                    u451 01CD                      u435 01B7                      u460 01D3  
                    u380 0189                      u461 01D2                      u445 01C2  
                    u381 0188                      u390 0194                      u391 0193  
                    u477 0251                      u487 025E                      _itr 01DD  
                    fsr0 0004                      indf 0000             ___awmod@sign 0026  
                   LCD@g 0022                     LCD@h 0024                     ?_LCD 0022  
                   ?_itr 0070                     _INTF 0059                     i1l46 0210  
                   _main 00A9                     btemp 007E                     itr@i 0077  
                   start 0012                    ??_LCD 0026                    ??_itr 0070  
                  ?_main 0070          __end_of___awdiv 0182          __end_of___awmod 01DD  
                  _ANSEL 0188          ___awdiv@divisor 0027                    i1l761 01DD  
                  i1l771 01EF                    i1l763 01E1                    i1l773 01FC  
                  i1l775 0202                    i1l777 020F                    i1l769 01E5  
                  i1l779 020F          ___awdiv@counter 002C                    u23_20 01E1  
                  u23_21 01E0                    u24_20 020F                    u24_21 020E  
                  u24_25 020B                    _PORTA 0005                    _PORTB 0006  
                  _PORTC 0007                    _PORTD 0008                    _TRISA 0085  
                  _TRISB 0086                    _TRISC 0087                    _TRISD 0088  
                  u49_27 01F5          __end_of_display 00A9                    _pulse 0248  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 0015             __end_of_main 0119                   ??_main 0038  
       ___awdiv@dividend 0029                   ?_pulse 0070                   _ANSELH 0189  
                 _INTCON 000B                ??___awdiv 002B                ??___awmod 0024  
       ___awdiv@quotient 002E          ___awmod@divisor 0020          ___awmod@counter 0025  
              ??_display 0032                   saved_w 007E  __end_of__initialization 0023  
         __pcstackCOMMON 0070             __pidataBANK0 0263            __end_of_pulse 0263  
                ??_pulse 0020               __pmaintext 00A9               __pintentry 0004  
                ___awdiv 0119                  ___awmod 0182                  __ptext1 0027  
                __ptext2 0182                  __ptext3 0119                  __ptext4 021D  
                __ptext5 0248                  __ptext6 01DD                  _display 0027  
           __size_of_LCD 002B             __size_of_itr 0040         ___awmod@dividend 0022  
                main@cnt 0038     end_of_initialization 0023      start_initialization 0015  
            __end_of_LCD 0248              __end_of_itr 021D               init_fetch0 0277  
            __pdataBANK0 003A                ___latbits 0002            __pcstackBANK0 0020  
               ?___awdiv 0027                 ?___awmod 0020                 ?_display 0030  
         __size_of_pulse 001B        interrupt_function 0004         __size_of___awdiv 0069  
       __size_of___awmod 005B         __size_of_display 0082            __size_of_main 0070  
               display@a 0032                 display@b 0034                 display@c 0036  
               display@k 0030                 init_ram0 027B                 intlevel1 0000  
