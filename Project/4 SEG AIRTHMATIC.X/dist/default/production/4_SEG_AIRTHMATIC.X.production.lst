

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Sat Mar 18 19:09:08 2023

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	inittext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	dabs	1,0x7E,2
    15  0000                     
    16                           ; Version 2.20
    17                           ; Generated 12/02/2020 GMT
    18                           ; 
    19                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC16F887 Definitions
    48                           ; 
    49                           ; SFR Addresses
    50  0000                     	;# 
    51  0001                     	;# 
    52  0002                     	;# 
    53  0003                     	;# 
    54  0004                     	;# 
    55  0005                     	;# 
    56  0006                     	;# 
    57  0007                     	;# 
    58  0008                     	;# 
    59  0009                     	;# 
    60  000A                     	;# 
    61  000B                     	;# 
    62  000C                     	;# 
    63  000D                     	;# 
    64  000E                     	;# 
    65  000E                     	;# 
    66  000F                     	;# 
    67  0010                     	;# 
    68  0011                     	;# 
    69  0012                     	;# 
    70  0013                     	;# 
    71  0014                     	;# 
    72  0015                     	;# 
    73  0015                     	;# 
    74  0016                     	;# 
    75  0017                     	;# 
    76  0018                     	;# 
    77  0019                     	;# 
    78  001A                     	;# 
    79  001B                     	;# 
    80  001B                     	;# 
    81  001C                     	;# 
    82  001D                     	;# 
    83  001E                     	;# 
    84  001F                     	;# 
    85  0081                     	;# 
    86  0085                     	;# 
    87  0086                     	;# 
    88  0087                     	;# 
    89  0088                     	;# 
    90  0089                     	;# 
    91  008C                     	;# 
    92  008D                     	;# 
    93  008E                     	;# 
    94  008F                     	;# 
    95  0090                     	;# 
    96  0091                     	;# 
    97  0092                     	;# 
    98  0093                     	;# 
    99  0093                     	;# 
   100  0093                     	;# 
   101  0094                     	;# 
   102  0095                     	;# 
   103  0096                     	;# 
   104  0097                     	;# 
   105  0098                     	;# 
   106  0099                     	;# 
   107  009A                     	;# 
   108  009B                     	;# 
   109  009C                     	;# 
   110  009D                     	;# 
   111  009E                     	;# 
   112  009F                     	;# 
   113  0105                     	;# 
   114  0107                     	;# 
   115  0108                     	;# 
   116  0109                     	;# 
   117  010C                     	;# 
   118  010C                     	;# 
   119  010D                     	;# 
   120  010E                     	;# 
   121  010F                     	;# 
   122  0185                     	;# 
   123  0187                     	;# 
   124  0188                     	;# 
   125  0189                     	;# 
   126  018C                     	;# 
   127  018D                     	;# 
   128  0000                     	;# 
   129  0001                     	;# 
   130  0002                     	;# 
   131  0003                     	;# 
   132  0004                     	;# 
   133  0005                     	;# 
   134  0006                     	;# 
   135  0007                     	;# 
   136  0008                     	;# 
   137  0009                     	;# 
   138  000A                     	;# 
   139  000B                     	;# 
   140  000C                     	;# 
   141  000D                     	;# 
   142  000E                     	;# 
   143  000E                     	;# 
   144  000F                     	;# 
   145  0010                     	;# 
   146  0011                     	;# 
   147  0012                     	;# 
   148  0013                     	;# 
   149  0014                     	;# 
   150  0015                     	;# 
   151  0015                     	;# 
   152  0016                     	;# 
   153  0017                     	;# 
   154  0018                     	;# 
   155  0019                     	;# 
   156  001A                     	;# 
   157  001B                     	;# 
   158  001B                     	;# 
   159  001C                     	;# 
   160  001D                     	;# 
   161  001E                     	;# 
   162  001F                     	;# 
   163  0081                     	;# 
   164  0085                     	;# 
   165  0086                     	;# 
   166  0087                     	;# 
   167  0088                     	;# 
   168  0089                     	;# 
   169  008C                     	;# 
   170  008D                     	;# 
   171  008E                     	;# 
   172  008F                     	;# 
   173  0090                     	;# 
   174  0091                     	;# 
   175  0092                     	;# 
   176  0093                     	;# 
   177  0093                     	;# 
   178  0093                     	;# 
   179  0094                     	;# 
   180  0095                     	;# 
   181  0096                     	;# 
   182  0097                     	;# 
   183  0098                     	;# 
   184  0099                     	;# 
   185  009A                     	;# 
   186  009B                     	;# 
   187  009C                     	;# 
   188  009D                     	;# 
   189  009E                     	;# 
   190  009F                     	;# 
   191  0105                     	;# 
   192  0107                     	;# 
   193  0108                     	;# 
   194  0109                     	;# 
   195  010C                     	;# 
   196  010C                     	;# 
   197  010D                     	;# 
   198  010E                     	;# 
   199  010F                     	;# 
   200  0185                     	;# 
   201  0187                     	;# 
   202  0188                     	;# 
   203  0189                     	;# 
   204  018C                     	;# 
   205  018D                     	;# 
   206                           
   207                           	psect	idataBANK0
   208  0719                     __pidataBANK0:
   209                           
   210                           ;initializer for _cc
   211  0719  343F               	retlw	63
   212  071A  3400               	retlw	0
   213  071B  3406               	retlw	6
   214  071C  3400               	retlw	0
   215  071D  345B               	retlw	91
   216  071E  3400               	retlw	0
   217  071F  344F               	retlw	79
   218  0720  3400               	retlw	0
   219  0721  3466               	retlw	102
   220  0722  3400               	retlw	0
   221  0723  346D               	retlw	109
   222  0724  3400               	retlw	0
   223  0725  347D               	retlw	125
   224  0726  3400               	retlw	0
   225  0727  3407               	retlw	7
   226  0728  3400               	retlw	0
   227  0729  347F               	retlw	127
   228  072A  3400               	retlw	0
   229  072B  3467               	retlw	103
   230  072C  3400               	retlw	0
   231  0008                     _PORTD	set	8
   232  0007                     _PORTC	set	7
   233  0005                     _PORTA	set	5
   234  0042                     _RD2	set	66
   235  0041                     _RD1	set	65
   236  0040                     _RD0	set	64
   237  0043                     _RD3	set	67
   238  0029                     _RA1	set	41
   239  0028                     _RA0	set	40
   240  0088                     _TRISD	set	136
   241  0087                     _TRISC	set	135
   242  0085                     _TRISA	set	133
   243  0189                     _ANSELH	set	393
   244  0188                     _ANSEL	set	392
   245                           
   246                           	psect	cinit
   247  07E0                     start_initialization:	
   248                           ; #config settings
   249                           
   250  07E0                     __initialization:
   251                           
   252                           ; Initialize objects allocated to BANK0
   253  07E0  1383               	bcf	3,7	;select IRP bank0
   254  07E1  3034               	movlw	low (__pdataBANK0+20)
   255  07E2  00FD               	movwf	btemp+-1
   256  07E3  3007               	movlw	high __pidataBANK0
   257  07E4  00FE               	movwf	btemp
   258  07E5  3019               	movlw	low __pidataBANK0
   259  07E6  00FF               	movwf	btemp+1
   260  07E7  3020               	movlw	low __pdataBANK0
   261  07E8  0084               	movwf	4
   262  07E9  120A  118A  270A  120A  118A  	fcall	init_ram0
   263                           
   264                           ; Clear objects allocated to BANK0
   265  07EE  01B4               	clrf	__pbssBANK0& (0+127)
   266  07EF  01B5               	clrf	(__pbssBANK0+1)& (0+127)
   267                           
   268                           ; Clear objects allocated to COMMON
   269  07F0  01F0               	clrf	__pbssCOMMON& (0+127)
   270  07F1  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   271  07F2  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
   272  07F3  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
   273  07F4  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
   274  07F5  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
   275  07F6  01F6               	clrf	(__pbssCOMMON+6)& (0+127)
   276  07F7  01F7               	clrf	(__pbssCOMMON+7)& (0+127)
   277  07F8  01F8               	clrf	(__pbssCOMMON+8)& (0+127)
   278  07F9  01F9               	clrf	(__pbssCOMMON+9)& (0+127)
   279  07FA  01FA               	clrf	(__pbssCOMMON+10)& (0+127)
   280  07FB  01FB               	clrf	(__pbssCOMMON+11)& (0+127)
   281  07FC                     end_of_initialization:	
   282                           ;End of C runtime variable initialization code
   283                           
   284  07FC                     __end_of__initialization:
   285  07FC  0183               	clrf	3
   286  07FD  120A  118A  2F2D   	ljmp	_main	;jump to C main() function
   287                           
   288                           	psect	bssCOMMON
   289  0070                     __pbssCOMMON:
   290  0070                     _count:
   291  0070                     	ds	2
   292  0072                     _flag:
   293  0072                     	ds	2
   294  0074                     _l:
   295  0074                     	ds	2
   296  0076                     _k:
   297  0076                     	ds	2
   298  0078                     _j:
   299  0078                     	ds	2
   300  007A                     _i:
   301  007A                     	ds	2
   302                           
   303                           	psect	bssBANK0
   304  0034                     __pbssBANK0:
   305  0034                     _flag1:
   306  0034                     	ds	2
   307                           
   308                           	psect	dataBANK0
   309  0020                     __pdataBANK0:
   310  0020                     _cc:
   311  0020                     	ds	20
   312                           
   313                           	psect	inittext
   314  0706                     init_fetch0:	
   315                           ;	Called with low address in FSR and high address in W
   316                           
   317  0706  087E               	movf	btemp,w
   318  0707  008A               	movwf	10
   319  0708  087F               	movf	btemp+1,w
   320  0709  0082               	movwf	2
   321  070A                     init_ram0:	
   322                           ;Called with:
   323                           ;	high address of idata address in btemp 
   324                           ;	low address of idata address in btemp+1 
   325                           ;	low address of data in FSR
   326                           ;	high address + 1 of data in btemp-1
   327                           
   328  070A  120A  118A  2706  120A  118A  	fcall	init_fetch0
   329  070F  0080               	movwf	0
   330  0710  0A84               	incf	4,f
   331  0711  0804               	movf	4,w
   332  0712  067D               	xorwf	btemp+-1,w
   333  0713  1903               	btfsc	3,2
   334  0714  3400               	retlw	0
   335  0715  0AFF               	incf	btemp+1,f
   336  0716  1903               	btfsc	3,2
   337  0717  0AFE               	incf	btemp,f
   338  0718  2F0A               	goto	init_ram0
   339                           
   340                           	psect	cstackCOMMON
   341  007C                     __pcstackCOMMON:
   342  007C                     ?_first_seg:
   343  007C                     ?_display:	
   344                           ; 1 bytes @ 0x0
   345                           
   346  007C                     ??_display:	
   347                           ; 1 bytes @ 0x0
   348                           
   349  007C                     ?_main:	
   350                           ; 1 bytes @ 0x0
   351                           
   352                           
   353                           ; 1 bytes @ 0x0
   354  007C                     	ds	2
   355  007E                     ??_first_seg:
   356  007E                     ??_main:	
   357                           ; 1 bytes @ 0x2
   358                           
   359                           
   360                           	psect	maintext
   361  072D                     __pmaintext:	
   362                           ; 1 bytes @ 0x2
   363 ;;
   364 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   365 ;;
   366 ;; *************** function _main *****************
   367 ;; Defined at:
   368 ;;		line 18 in file "4 SEG AIRTHMATIC.c"
   369 ;; Parameters:    Size  Location     Type
   370 ;;		None
   371 ;; Auto vars:     Size  Location     Type
   372 ;;		None
   373 ;; Return value:  Size  Location     Type
   374 ;;                  1    wreg      void 
   375 ;; Registers used:
   376 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   377 ;; Tracked objects:
   378 ;;		On entry : B00/0
   379 ;;		On exit  : 0/0
   380 ;;		Unchanged: 0/0
   381 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   382 ;;      Params:         0       0       0       0       0
   383 ;;      Locals:         0       0       0       0       0
   384 ;;      Temps:          0       0       0       0       0
   385 ;;      Totals:         0       0       0       0       0
   386 ;;Total ram usage:        0 bytes
   387 ;; Hardware stack levels required when called: 2
   388 ;; This function calls:
   389 ;;		_first_seg
   390 ;; This function is called by:
   391 ;;		Startup code after reset
   392 ;; This function uses a non-reentrant model
   393 ;;
   394                           
   395                           
   396                           ;psect for function _main
   397  072D                     _main:
   398  072D                     l693:	
   399                           ;incstack = 0
   400                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   401                           
   402  072D  3003               	movlw	3
   403  072E  1683               	bsf	3,5	;RP0=1, select bank1
   404  072F  1303               	bcf	3,6	;RP1=0, select bank1
   405  0730  0085               	movwf	5	;volatile
   406  0731                     l695:
   407  0731  1283               	bcf	3,5	;RP0=0, select bank0
   408  0732  1303               	bcf	3,6	;RP1=0, select bank0
   409  0733  0185               	clrf	5	;volatile
   410  0734                     l697:
   411  0734  1683               	bsf	3,5	;RP0=1, select bank1
   412  0735  1303               	bcf	3,6	;RP1=0, select bank1
   413  0736  0187               	clrf	7	;volatile
   414  0737                     l699:
   415  0737  1283               	bcf	3,5	;RP0=0, select bank0
   416  0738  1303               	bcf	3,6	;RP1=0, select bank0
   417  0739  0187               	clrf	7	;volatile
   418  073A                     l701:
   419  073A  1683               	bsf	3,5	;RP0=1, select bank1
   420  073B  1303               	bcf	3,6	;RP1=0, select bank1
   421  073C  0188               	clrf	8	;volatile
   422  073D                     l703:
   423  073D  1283               	bcf	3,5	;RP0=0, select bank0
   424  073E  1303               	bcf	3,6	;RP1=0, select bank0
   425  073F  0188               	clrf	8	;volatile
   426  0740                     l705:
   427  0740  1683               	bsf	3,5	;RP0=1, select bank3
   428  0741  1703               	bsf	3,6	;RP1=1, select bank3
   429  0742  0188               	clrf	8	;volatile
   430  0743                     l707:
   431  0743  0189               	clrf	9	;volatile
   432  0744                     l709:
   433  0744  1283               	bcf	3,5	;RP0=0, select bank0
   434  0745  1303               	bcf	3,6	;RP1=0, select bank0
   435  0746  1C05               	btfss	5,0	;volatile
   436  0747  2F49               	goto	u31
   437  0748  2F4A               	goto	u30
   438  0749                     u31:
   439  0749  2F58               	goto	l717
   440  074A                     u30:
   441  074A                     l711:
   442  074A  1885               	btfsc	5,1	;volatile
   443  074B  2F4D               	goto	u41
   444  074C  2F4E               	goto	u40
   445  074D                     u41:
   446  074D  2F58               	goto	l717
   447  074E                     u40:
   448  074E                     l713:
   449  074E  0872               	movf	_flag,w
   450  074F  0473               	iorwf	_flag+1,w
   451  0750  1D03               	btfss	3,2
   452  0751  2F53               	goto	u51
   453  0752  2F54               	goto	u50
   454  0753                     u51:
   455  0753  2F58               	goto	l717
   456  0754                     u50:
   457  0754                     l715:
   458  0754  3001               	movlw	1
   459  0755  00F2               	movwf	_flag
   460  0756  3000               	movlw	0
   461  0757  00F3               	movwf	_flag+1
   462  0758                     l717:
   463  0758  0372               	decf	_flag,w
   464  0759  0473               	iorwf	_flag+1,w
   465  075A  1D03               	btfss	3,2
   466  075B  2F5D               	goto	u61
   467  075C  2F5E               	goto	u60
   468  075D                     u61:
   469  075D  2F6F               	goto	l723
   470  075E                     u60:
   471  075E                     l719:
   472  075E  3001               	movlw	1
   473  075F  07F0               	addwf	_count,f
   474  0760  1803               	skipnc
   475  0761  0AF1               	incf	_count+1,f
   476  0762  3000               	movlw	0
   477  0763  07F1               	addwf	_count+1,f
   478  0764  3001               	movlw	1
   479  0765  07F2               	addwf	_flag,f
   480  0766  1803               	skipnc
   481  0767  0AF3               	incf	_flag+1,f
   482  0768  3000               	movlw	0
   483  0769  07F3               	addwf	_flag+1,f
   484  076A                     l721:
   485  076A  120A  118A  2700  120A  118A  	fcall	_first_seg
   486  076F                     l723:
   487  076F  1283               	bcf	3,5	;RP0=0, select bank0
   488  0770  1303               	bcf	3,6	;RP1=0, select bank0
   489  0771  1805               	btfsc	5,0	;volatile
   490  0772  2F74               	goto	u71
   491  0773  2F75               	goto	u70
   492  0774                     u71:
   493  0774  2F44               	goto	l709
   494  0775                     u70:
   495  0775                     l725:
   496  0775  1885               	btfsc	5,1	;volatile
   497  0776  2F78               	goto	u81
   498  0777  2F79               	goto	u80
   499  0778                     u81:
   500  0778  2F44               	goto	l709
   501  0779                     u80:
   502  0779                     l727:
   503  0779  01F2               	clrf	_flag
   504  077A  01F3               	clrf	_flag+1
   505  077B  2F44               	goto	l709
   506  077C  120A  118A  2800   	ljmp	start
   507  077F                     __end_of_main:
   508                           
   509                           	psect	text1
   510  0700                     __ptext1:	
   511 ;; *************** function _first_seg *****************
   512 ;; Defined at:
   513 ;;		line 46 in file "4 SEG AIRTHMATIC.c"
   514 ;; Parameters:    Size  Location     Type
   515 ;;		None
   516 ;; Auto vars:     Size  Location     Type
   517 ;;		None
   518 ;; Return value:  Size  Location     Type
   519 ;;                  1    wreg      void 
   520 ;; Registers used:
   521 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   522 ;; Tracked objects:
   523 ;;		On entry : 0/0
   524 ;;		On exit  : 0/0
   525 ;;		Unchanged: 0/0
   526 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   527 ;;      Params:         0       0       0       0       0
   528 ;;      Locals:         0       0       0       0       0
   529 ;;      Temps:          0       0       0       0       0
   530 ;;      Totals:         0       0       0       0       0
   531 ;;Total ram usage:        0 bytes
   532 ;; Hardware stack levels used: 1
   533 ;; Hardware stack levels required when called: 1
   534 ;; This function calls:
   535 ;;		_display
   536 ;; This function is called by:
   537 ;;		_main
   538 ;; This function uses a non-reentrant model
   539 ;;
   540                           
   541                           
   542                           ;psect for function _first_seg
   543  0700                     _first_seg:
   544  0700                     l691:	
   545                           ;incstack = 0
   546                           ; Regs used in _first_seg: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   547                           
   548  0700  120A  118A  277F  120A  118A  	fcall	_display
   549  0705                     l70:
   550  0705  0008               	return
   551  0706                     __end_of_first_seg:
   552                           
   553                           	psect	text2
   554  077F                     __ptext2:	
   555 ;; *************** function _display *****************
   556 ;; Defined at:
   557 ;;		line 50 in file "4 SEG AIRTHMATIC.c"
   558 ;; Parameters:    Size  Location     Type
   559 ;;		None
   560 ;; Auto vars:     Size  Location     Type
   561 ;;		None
   562 ;; Return value:  Size  Location     Type
   563 ;;                  1    wreg      void 
   564 ;; Registers used:
   565 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   566 ;; Tracked objects:
   567 ;;		On entry : 0/0
   568 ;;		On exit  : 0/0
   569 ;;		Unchanged: 0/0
   570 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   571 ;;      Params:         0       0       0       0       0
   572 ;;      Locals:         0       0       0       0       0
   573 ;;      Temps:          2       0       0       0       0
   574 ;;      Totals:         2       0       0       0       0
   575 ;;Total ram usage:        2 bytes
   576 ;; Hardware stack levels used: 1
   577 ;; This function calls:
   578 ;;		Nothing
   579 ;; This function is called by:
   580 ;;		_first_seg
   581 ;; This function uses a non-reentrant model
   582 ;;
   583                           
   584                           
   585                           ;psect for function _display
   586  077F                     _display:
   587  077F                     l671:	
   588                           ;incstack = 0
   589                           ; Regs used in _display: [wreg-fsr0h+status,2+status,0]
   590                           
   591  077F  0871               	movf	_count+1,w
   592  0780  00F9               	movwf	_j+1
   593  0781  0870               	movf	_count,w
   594  0782  00F8               	movwf	_j
   595  0783  2FD1               	goto	l73
   596  0784                     l673:
   597  0784  0871               	movf	_count+1,w
   598  0785  00F7               	movwf	_k+1
   599  0786  0870               	movf	_count,w
   600  0787  00F6               	movwf	_k
   601  0788  2FBD               	goto	l75
   602  0789                     l76:
   603  0789  1283               	bcf	3,5	;RP0=0, select bank0
   604  078A  1303               	bcf	3,6	;RP1=0, select bank0
   605  078B  1588               	bsf	8,3	;volatile
   606  078C  1408               	bsf	8,0	;volatile
   607  078D  1488               	bsf	8,1	;volatile
   608  078E  1108               	bcf	8,2	;volatile
   609  078F                     l675:
   610  078F  0878               	movf	_j,w
   611  0790  00FC               	movwf	??_display
   612  0791  077C               	addwf	??_display,w
   613  0792  3E20               	addlw	(low (_cc| 0))& (0+255)
   614  0793  0084               	movwf	4
   615  0794  1383               	bcf	3,7	;select IRP bank0
   616  0795  0800               	movf	0,w
   617  0796  0087               	movwf	7	;volatile
   618  0797                     l677:
   619  0797  3041               	movlw	65
   620  0798  00FD               	movwf	??_display+1
   621  0799  30EE               	movlw	238
   622  079A  00FC               	movwf	??_display
   623  079B                     u97:
   624  079B  0BFC               	decfsz	??_display,f
   625  079C  2F9B               	goto	u97
   626  079D  0BFD               	decfsz	??_display+1,f
   627  079E  2F9B               	goto	u97
   628  079F  0000               	nop
   629  07A0                     l679:
   630  07A0  1283               	bcf	3,5	;RP0=0, select bank0
   631  07A1  1303               	bcf	3,6	;RP1=0, select bank0
   632  07A2  1508               	bsf	8,2	;volatile
   633  07A3                     l681:
   634  07A3  1408               	bsf	8,0	;volatile
   635  07A4                     l683:
   636  07A4  1488               	bsf	8,1	;volatile
   637  07A5                     l685:
   638  07A5  1188               	bcf	8,3	;volatile
   639  07A6                     l687:
   640  07A6  0876               	movf	_k,w
   641  07A7  00FC               	movwf	??_display
   642  07A8  077C               	addwf	??_display,w
   643  07A9  3E20               	addlw	(low (_cc| 0))& (0+255)
   644  07AA  0084               	movwf	4
   645  07AB  1383               	bcf	3,7	;select IRP bank0
   646  07AC  0800               	movf	0,w
   647  07AD  0087               	movwf	7	;volatile
   648  07AE  3041               	movlw	65
   649  07AF  00FD               	movwf	??_display+1
   650  07B0  30EE               	movlw	238
   651  07B1  00FC               	movwf	??_display
   652  07B2                     u107:
   653  07B2  0BFC               	decfsz	??_display,f
   654  07B3  2FB2               	goto	u107
   655  07B4  0BFD               	decfsz	??_display+1,f
   656  07B5  2FB2               	goto	u107
   657  07B6  0000               	nop
   658  07B7  3001               	movlw	1
   659  07B8  07F6               	addwf	_k,f
   660  07B9  1803               	skipnc
   661  07BA  0AF7               	incf	_k+1,f
   662  07BB  3000               	movlw	0
   663  07BC  07F7               	addwf	_k+1,f
   664  07BD                     l75:
   665  07BD  0871               	movf	_count+1,w
   666  07BE  3A80               	xorlw	128
   667  07BF  00FC               	movwf	??_display
   668  07C0  0877               	movf	_k+1,w
   669  07C1  3A80               	xorlw	128
   670  07C2  027C               	subwf	??_display,w
   671  07C3  1D03               	skipz
   672  07C4  2FC7               	goto	u15
   673  07C5  0876               	movf	_k,w
   674  07C6  0270               	subwf	_count,w
   675  07C7                     u15:
   676  07C7  1803               	skipnc
   677  07C8  2FCA               	goto	u11
   678  07C9  2FCB               	goto	u10
   679  07CA                     u11:
   680  07CA  2F89               	goto	l76
   681  07CB                     u10:
   682  07CB                     l689:
   683  07CB  3001               	movlw	1
   684  07CC  07F8               	addwf	_j,f
   685  07CD  1803               	skipnc
   686  07CE  0AF9               	incf	_j+1,f
   687  07CF  3000               	movlw	0
   688  07D0  07F9               	addwf	_j+1,f
   689  07D1                     l73:
   690  07D1  0871               	movf	_count+1,w
   691  07D2  3A80               	xorlw	128
   692  07D3  00FC               	movwf	??_display
   693  07D4  0879               	movf	_j+1,w
   694  07D5  3A80               	xorlw	128
   695  07D6  027C               	subwf	??_display,w
   696  07D7  1D03               	skipz
   697  07D8  2FDB               	goto	u25
   698  07D9  0878               	movf	_j,w
   699  07DA  0270               	subwf	_count,w
   700  07DB                     u25:
   701  07DB  1803               	skipnc
   702  07DC  2FDE               	goto	u21
   703  07DD  2FDF               	goto	u20
   704  07DE                     u21:
   705  07DE  2F84               	goto	l673
   706  07DF                     u20:
   707  07DF                     l79:
   708  07DF  0008               	return
   709  07E0                     __end_of_display:
   710  007E                     btemp	set	126	;btemp
   711  007E                     wtemp0	set	126

Data Sizes:
    Strings     0
    Constant    0
    Data        20
    BSS         14
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      2      14
    BANK0            80      0      22
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _first_seg->_display

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                          _first_seg
 ---------------------------------------------------------------------------------
 (1) _first_seg                                            0     0      0       0
                            _display
 ---------------------------------------------------------------------------------
 (2) _display                                              2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _first_seg
     _display

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      0      16       5       27.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      2       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      24      12        0.0%
ABS                  0      0      24       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Sat Mar 18 19:09:08 2023

                      _i 007A                        _j 0078                        _k 0076  
                      _l 0074                        pc 0002                       l70 0705  
                     l73 07D1                       l75 07BD                       l76 0789  
                     l79 07DF                       u10 07CB                       u11 07CA  
                     u20 07DF                       u21 07DE                       u30 074A  
                     u15 07C7                       u31 0749                       u40 074E  
                     u25 07DB                       u41 074D                       u50 0754  
                     u51 0753                       u60 075E                       u61 075D  
                     u70 0775                       u71 0774                       u80 0779  
                     u81 0778                       u97 079B                       _cc 0020  
                     fsr 0004                      l701 073A                      l711 074A  
                    l703 073D                      l721 076A                      l713 074E  
                    l705 0740                      l723 076F                      l715 0754  
                    l707 0743                      l725 0775                      l717 0758  
                    l709 0744                      l671 077F                      l727 0779  
                    l719 075E                      l681 07A3                      l673 0784  
                    l683 07A4                      l675 078F                      l691 0700  
                    l685 07A5                      l677 0797                      l693 072D  
                    l687 07A6                      l679 07A0                      l695 0731  
                    l689 07CB                      l697 0734                      l699 0737  
                    _RA0 0028                      _RA1 0029                      _RD0 0040  
                    _RD1 0041                      _RD2 0042                      _RD3 0043  
                    u107 07B2                      fsr0 0004                      indf 0000  
                   _flag 0072                     _main 072D                     btemp 007E  
                   start 0000                    ?_main 007C                    _ANSEL 0188  
                  _PORTA 0005                    _PORTC 0007                    _PORTD 0008  
                  _TRISA 0085                    _TRISC 0087                    _TRISD 0088  
        __end_of_display 07E0                    _flag1 0034                    _count 0070  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 07E0             __end_of_main 077F                   ??_main 007E  
                 _ANSELH 0189                ??_display 007C  __end_of__initialization 07FC  
         __pcstackCOMMON 007C             __pidataBANK0 0719               __pbssBANK0 0034  
     __size_of_first_seg 0006               __pmaintext 072D        __end_of_first_seg 0706  
                __ptext1 0700                  __ptext2 077F                  _display 077F  
   end_of_initialization 07FC      start_initialization 07E0               init_fetch0 0706  
            __pdataBANK0 0020              __pbssCOMMON 0070                ___latbits 0002  
               ?_display 007C                _first_seg 0700               ?_first_seg 007C  
       __size_of_display 0061            __size_of_main 0052              ??_first_seg 007E  
               init_ram0 070A  
