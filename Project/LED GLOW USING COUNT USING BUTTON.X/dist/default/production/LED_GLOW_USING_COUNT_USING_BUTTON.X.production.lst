

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Tue Mar 28 12:40:41 2023

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    13                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	dabs	1,0x7E,2
    17  0000                     
    18                           ; Version 2.20
    19                           ; Generated 12/02/2020 GMT
    20                           ; 
    21                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    22                           ; All rights reserved.
    23                           ; 
    24                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    25                           ; 
    26                           ; Redistribution and use in source and binary forms, with or without modification, are
    27                           ; permitted provided that the following conditions are met:
    28                           ; 
    29                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    30                           ;        conditions and the following disclaimer.
    31                           ; 
    32                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    33                           ;        of conditions and the following disclaimer in the documentation and/or other
    34                           ;        materials provided with the distribution.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC16F887 Definitions
    50                           ; 
    51                           ; SFR Addresses
    52  0000                     	;# 
    53  0001                     	;# 
    54  0002                     	;# 
    55  0003                     	;# 
    56  0004                     	;# 
    57  0005                     	;# 
    58  0006                     	;# 
    59  0007                     	;# 
    60  0008                     	;# 
    61  0009                     	;# 
    62  000A                     	;# 
    63  000B                     	;# 
    64  000C                     	;# 
    65  000D                     	;# 
    66  000E                     	;# 
    67  000E                     	;# 
    68  000F                     	;# 
    69  0010                     	;# 
    70  0011                     	;# 
    71  0012                     	;# 
    72  0013                     	;# 
    73  0014                     	;# 
    74  0015                     	;# 
    75  0015                     	;# 
    76  0016                     	;# 
    77  0017                     	;# 
    78  0018                     	;# 
    79  0019                     	;# 
    80  001A                     	;# 
    81  001B                     	;# 
    82  001B                     	;# 
    83  001C                     	;# 
    84  001D                     	;# 
    85  001E                     	;# 
    86  001F                     	;# 
    87  0081                     	;# 
    88  0085                     	;# 
    89  0086                     	;# 
    90  0087                     	;# 
    91  0088                     	;# 
    92  0089                     	;# 
    93  008C                     	;# 
    94  008D                     	;# 
    95  008E                     	;# 
    96  008F                     	;# 
    97  0090                     	;# 
    98  0091                     	;# 
    99  0092                     	;# 
   100  0093                     	;# 
   101  0093                     	;# 
   102  0093                     	;# 
   103  0094                     	;# 
   104  0095                     	;# 
   105  0096                     	;# 
   106  0097                     	;# 
   107  0098                     	;# 
   108  0099                     	;# 
   109  009A                     	;# 
   110  009B                     	;# 
   111  009C                     	;# 
   112  009D                     	;# 
   113  009E                     	;# 
   114  009F                     	;# 
   115  0105                     	;# 
   116  0107                     	;# 
   117  0108                     	;# 
   118  0109                     	;# 
   119  010C                     	;# 
   120  010C                     	;# 
   121  010D                     	;# 
   122  010E                     	;# 
   123  010F                     	;# 
   124  0185                     	;# 
   125  0187                     	;# 
   126  0188                     	;# 
   127  0189                     	;# 
   128  018C                     	;# 
   129  018D                     	;# 
   130  0000                     	;# 
   131  0001                     	;# 
   132  0002                     	;# 
   133  0003                     	;# 
   134  0004                     	;# 
   135  0005                     	;# 
   136  0006                     	;# 
   137  0007                     	;# 
   138  0008                     	;# 
   139  0009                     	;# 
   140  000A                     	;# 
   141  000B                     	;# 
   142  000C                     	;# 
   143  000D                     	;# 
   144  000E                     	;# 
   145  000E                     	;# 
   146  000F                     	;# 
   147  0010                     	;# 
   148  0011                     	;# 
   149  0012                     	;# 
   150  0013                     	;# 
   151  0014                     	;# 
   152  0015                     	;# 
   153  0015                     	;# 
   154  0016                     	;# 
   155  0017                     	;# 
   156  0018                     	;# 
   157  0019                     	;# 
   158  001A                     	;# 
   159  001B                     	;# 
   160  001B                     	;# 
   161  001C                     	;# 
   162  001D                     	;# 
   163  001E                     	;# 
   164  001F                     	;# 
   165  0081                     	;# 
   166  0085                     	;# 
   167  0086                     	;# 
   168  0087                     	;# 
   169  0088                     	;# 
   170  0089                     	;# 
   171  008C                     	;# 
   172  008D                     	;# 
   173  008E                     	;# 
   174  008F                     	;# 
   175  0090                     	;# 
   176  0091                     	;# 
   177  0092                     	;# 
   178  0093                     	;# 
   179  0093                     	;# 
   180  0093                     	;# 
   181  0094                     	;# 
   182  0095                     	;# 
   183  0096                     	;# 
   184  0097                     	;# 
   185  0098                     	;# 
   186  0099                     	;# 
   187  009A                     	;# 
   188  009B                     	;# 
   189  009C                     	;# 
   190  009D                     	;# 
   191  009E                     	;# 
   192  009F                     	;# 
   193  0105                     	;# 
   194  0107                     	;# 
   195  0108                     	;# 
   196  0109                     	;# 
   197  010C                     	;# 
   198  010C                     	;# 
   199  010D                     	;# 
   200  010E                     	;# 
   201  010F                     	;# 
   202  0185                     	;# 
   203  0187                     	;# 
   204  0188                     	;# 
   205  0189                     	;# 
   206  018C                     	;# 
   207  018D                     	;# 
   208  0001                     _TMR0	set	1
   209  0008                     _PORTD	set	8
   210  0007                     _PORTC	set	7
   211  005A                     _T0IF	set	90
   212  003E                     _RC6	set	62
   213  003D                     _RC5	set	61
   214  003F                     _RC7	set	63
   215  0038                     _RC0	set	56
   216  003C                     _RC4	set	60
   217  003B                     _RC3	set	59
   218  0081                     _OPTION_REG	set	129
   219  0088                     _TRISD	set	136
   220  0087                     _TRISC	set	135
   221                           
   222                           	psect	cinit
   223  07F6                     start_initialization:	
   224                           ; #config settings
   225                           
   226  07F6                     __initialization:
   227                           
   228                           ; Clear objects allocated to COMMON
   229  07F6  01FC               	clrf	__pbssCOMMON& (0+127)
   230  07F7  01FD               	clrf	(__pbssCOMMON+1)& (0+127)
   231                           
   232                           ; Clear objects allocated to BANK0
   233  07F8  1283               	bcf	3,5	;RP0=0, select bank0
   234  07F9  1303               	bcf	3,6	;RP1=0, select bank0
   235  07FA  01AC               	clrf	__pbssBANK0& (0+127)
   236  07FB  01AD               	clrf	(__pbssBANK0+1)& (0+127)
   237  07FC                     end_of_initialization:	
   238                           ;End of C runtime variable initialization code
   239                           
   240  07FC                     __end_of__initialization:
   241  07FC  0183               	clrf	3
   242  07FD  120A  118A  2F6F   	ljmp	_main	;jump to C main() function
   243                           
   244                           	psect	bssCOMMON
   245  007C                     __pbssCOMMON:
   246  007C                     _count:
   247  007C                     	ds	2
   248                           
   249                           	psect	bssBANK0
   250  002C                     __pbssBANK0:
   251  002C                     _count1:
   252  002C                     	ds	2
   253                           
   254                           	psect	cstackCOMMON
   255  0070                     __pcstackCOMMON:
   256  0070                     ?_timer:
   257  0070                     ?_main:	
   258                           ; 1 bytes @ 0x0
   259                           
   260  0070                     ?_pulse:	
   261                           ; 1 bytes @ 0x0
   262                           
   263  0070                     ??_pulse:	
   264                           ; 1 bytes @ 0x0
   265                           
   266  0070                     ?___awmod:	
   267                           ; 1 bytes @ 0x0
   268                           
   269  0070                     timer@m:	
   270                           ; 2 bytes @ 0x0
   271                           
   272  0070                     ___awmod@divisor:	
   273                           ; 2 bytes @ 0x0
   274                           
   275                           
   276                           ; 2 bytes @ 0x0
   277  0070                     	ds	1
   278  0071                     ?_LCD:
   279  0071                     LCD@g:	
   280                           ; 1 bytes @ 0x1
   281                           
   282                           
   283                           ; 2 bytes @ 0x1
   284  0071                     	ds	1
   285  0072                     ??_timer:
   286  0072                     ___awmod@dividend:	
   287                           ; 1 bytes @ 0x2
   288                           
   289                           
   290                           ; 2 bytes @ 0x2
   291  0072                     	ds	1
   292  0073                     LCD@h:
   293  0073                     timer@time:	
   294                           ; 2 bytes @ 0x3
   295                           
   296                           
   297                           ; 2 bytes @ 0x3
   298  0073                     	ds	1
   299  0074                     ??___awmod:
   300                           
   301                           ; 1 bytes @ 0x4
   302  0074                     	ds	1
   303  0075                     ??_LCD:
   304  0075                     ___awmod@counter:	
   305                           ; 1 bytes @ 0x5
   306                           
   307  0075                     timer@cnt:	
   308                           ; 1 bytes @ 0x5
   309                           
   310                           
   311                           ; 2 bytes @ 0x5
   312  0075                     	ds	1
   313  0076                     ___awmod@sign:
   314                           
   315                           ; 1 bytes @ 0x6
   316  0076                     	ds	1
   317  0077                     ?___awdiv:
   318  0077                     ___awdiv@divisor:	
   319                           ; 2 bytes @ 0x7
   320                           
   321                           
   322                           ; 2 bytes @ 0x7
   323  0077                     	ds	2
   324  0079                     ___awdiv@dividend:
   325                           
   326                           ; 2 bytes @ 0x9
   327  0079                     	ds	2
   328  007B                     ??___awdiv:
   329                           
   330                           ; 1 bytes @ 0xB
   331  007B                     	ds	1
   332  007C                     ??_display:
   333  007C                     ??_main:	
   334                           ; 1 bytes @ 0xC
   335                           
   336                           
   337                           	psect	cstackBANK0
   338  0020                     __pcstackBANK0:	
   339                           ; 1 bytes @ 0xC
   340                           
   341  0020                     ___awdiv@counter:
   342                           
   343                           ; 1 bytes @ 0x0
   344  0020                     	ds	1
   345  0021                     ___awdiv@sign:
   346                           
   347                           ; 1 bytes @ 0x1
   348  0021                     	ds	1
   349  0022                     ___awdiv@quotient:
   350                           
   351                           ; 2 bytes @ 0x2
   352  0022                     	ds	2
   353  0024                     ?_display:
   354  0024                     display@k:	
   355                           ; 1 bytes @ 0x4
   356                           
   357                           
   358                           ; 2 bytes @ 0x4
   359  0024                     	ds	2
   360  0026                     display@a:
   361                           
   362                           ; 2 bytes @ 0x6
   363  0026                     	ds	2
   364  0028                     display@b:
   365                           
   366                           ; 2 bytes @ 0x8
   367  0028                     	ds	2
   368  002A                     display@c:
   369                           
   370                           ; 2 bytes @ 0xA
   371  002A                     	ds	2
   372                           
   373                           	psect	maintext
   374  076F                     __pmaintext:	
   375 ;;
   376 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   377 ;;
   378 ;; *************** function _main *****************
   379 ;; Defined at:
   380 ;;		line 20 in file "LED GLOW USING COUNT USING BUTTON.c"
   381 ;; Parameters:    Size  Location     Type
   382 ;;		None
   383 ;; Auto vars:     Size  Location     Type
   384 ;;		None
   385 ;; Return value:  Size  Location     Type
   386 ;;                  1    wreg      void 
   387 ;; Registers used:
   388 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   389 ;; Tracked objects:
   390 ;;		On entry : B00/0
   391 ;;		On exit  : 0/0
   392 ;;		Unchanged: 0/0
   393 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   394 ;;      Params:         0       0       0       0       0
   395 ;;      Locals:         0       0       0       0       0
   396 ;;      Temps:          0       0       0       0       0
   397 ;;      Totals:         0       0       0       0       0
   398 ;;Total ram usage:        0 bytes
   399 ;; Hardware stack levels required when called: 3
   400 ;; This function calls:
   401 ;;		_LCD
   402 ;;		_display
   403 ;;		_timer
   404 ;; This function is called by:
   405 ;;		Startup code after reset
   406 ;; This function uses a non-reentrant model
   407 ;;
   408                           
   409                           
   410                           ;psect for function _main
   411  076F                     _main:
   412  076F                     l937:	
   413                           ;incstack = 0
   414                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   415                           
   416                           
   417                           ;LED GLOW USING COUNT USING BUTTON.c: 22:     TRISC=0X18;
   418  076F  3018               	movlw	24
   419  0770  1683               	bsf	3,5	;RP0=1, select bank1
   420  0771  1303               	bcf	3,6	;RP1=0, select bank1
   421  0772  0087               	movwf	7	;volatile
   422  0773                     l939:
   423                           
   424                           ;LED GLOW USING COUNT USING BUTTON.c: 23:     PORTC=0X00;
   425  0773  1283               	bcf	3,5	;RP0=0, select bank0
   426  0774  1303               	bcf	3,6	;RP1=0, select bank0
   427  0775  0187               	clrf	7	;volatile
   428  0776                     l941:
   429                           
   430                           ;LED GLOW USING COUNT USING BUTTON.c: 24:     TRISD=0X00;
   431  0776  1683               	bsf	3,5	;RP0=1, select bank1
   432  0777  1303               	bcf	3,6	;RP1=0, select bank1
   433  0778  0188               	clrf	8	;volatile
   434  0779                     l943:
   435                           
   436                           ;LED GLOW USING COUNT USING BUTTON.c: 25:     PORTD=0X00;
   437  0779  1283               	bcf	3,5	;RP0=0, select bank0
   438  077A  1303               	bcf	3,6	;RP1=0, select bank0
   439  077B  0188               	clrf	8	;volatile
   440  077C                     l945:
   441                           
   442                           ;LED GLOW USING COUNT USING BUTTON.c: 26:     OPTION_REG=0x05;
   443  077C  3005               	movlw	5
   444  077D  1683               	bsf	3,5	;RP0=1, select bank1
   445  077E  1303               	bcf	3,6	;RP1=0, select bank1
   446  077F  0081               	movwf	1	;volatile
   447  0780                     l947:
   448                           
   449                           ;LED GLOW USING COUNT USING BUTTON.c: 27:     TMR0=131;
   450  0780  3083               	movlw	131
   451  0781  1283               	bcf	3,5	;RP0=0, select bank0
   452  0782  1303               	bcf	3,6	;RP1=0, select bank0
   453  0783  0081               	movwf	1	;volatile
   454  0784                     l949:
   455                           
   456                           ;LED GLOW USING COUNT USING BUTTON.c: 28:     LCD(0x02,0);
   457  0784  3002               	movlw	2
   458  0785  00F1               	movwf	LCD@g
   459  0786  3000               	movlw	0
   460  0787  00F2               	movwf	LCD@g+1
   461  0788  3000               	movlw	0
   462  0789  00F3               	movwf	LCD@h
   463  078A  00F4               	movwf	LCD@h+1
   464  078B  120A  118A  25D2  120A  118A  	fcall	_LCD
   465  0790                     l951:
   466                           
   467                           ;LED GLOW USING COUNT USING BUTTON.c: 29:     LCD(0X28,0);
   468  0790  3028               	movlw	40
   469  0791  00F1               	movwf	LCD@g
   470  0792  3000               	movlw	0
   471  0793  00F2               	movwf	LCD@g+1
   472  0794  3000               	movlw	0
   473  0795  00F3               	movwf	LCD@h
   474  0796  00F4               	movwf	LCD@h+1
   475  0797  120A  118A  25D2  120A  118A  	fcall	_LCD
   476  079C                     l953:
   477                           
   478                           ;LED GLOW USING COUNT USING BUTTON.c: 30:     LCD(0X0E,0);
   479  079C  300E               	movlw	14
   480  079D  00F1               	movwf	LCD@g
   481  079E  3000               	movlw	0
   482  079F  00F2               	movwf	LCD@g+1
   483  07A0  3000               	movlw	0
   484  07A1  00F3               	movwf	LCD@h
   485  07A2  00F4               	movwf	LCD@h+1
   486  07A3  120A  118A  25D2  120A  118A  	fcall	_LCD
   487  07A8                     l955:
   488                           
   489                           ;LED GLOW USING COUNT USING BUTTON.c: 31:     LCD(0X80,0);
   490  07A8  3080               	movlw	128
   491  07A9  00F1               	movwf	LCD@g
   492  07AA  3000               	movlw	0
   493  07AB  00F2               	movwf	LCD@g+1
   494  07AC  3000               	movlw	0
   495  07AD  00F3               	movwf	LCD@h
   496  07AE  00F4               	movwf	LCD@h+1
   497  07AF  120A  118A  25D2  120A  118A  	fcall	_LCD
   498  07B4                     l957:
   499                           
   500                           ;LED GLOW USING COUNT USING BUTTON.c: 33:     {;LED GLOW USING COUNT USING BUTTON.c: 34:
      +                                   if (RC3==1)
   501  07B4  1283               	bcf	3,5	;RP0=0, select bank0
   502  07B5  1303               	bcf	3,6	;RP1=0, select bank0
   503  07B6  1D87               	btfss	7,3	;volatile
   504  07B7  2FB9               	goto	u551
   505  07B8  2FBA               	goto	u550
   506  07B9                     u551:
   507  07B9  2FDD               	goto	l44
   508  07BA                     u550:
   509  07BA                     l959:
   510                           
   511                           ;LED GLOW USING COUNT USING BUTTON.c: 35:         {;LED GLOW USING COUNT USING BUTTON.c:
      +                           36:             LCD(0x80,0);
   512  07BA  3080               	movlw	128
   513  07BB  00F1               	movwf	LCD@g
   514  07BC  3000               	movlw	0
   515  07BD  00F2               	movwf	LCD@g+1
   516  07BE  3000               	movlw	0
   517  07BF  00F3               	movwf	LCD@h
   518  07C0  00F4               	movwf	LCD@h+1
   519  07C1  120A  118A  25D2  120A  118A  	fcall	_LCD
   520  07C6                     l961:
   521                           
   522                           ;LED GLOW USING COUNT USING BUTTON.c: 37:             count++;
   523  07C6  3001               	movlw	1
   524  07C7  07FC               	addwf	_count,f
   525  07C8  1803               	skipnc
   526  07C9  0AFD               	incf	_count+1,f
   527  07CA  3000               	movlw	0
   528  07CB  07FD               	addwf	_count+1,f
   529  07CC                     l963:
   530                           
   531                           ;LED GLOW USING COUNT USING BUTTON.c: 38:             display(count);
   532  07CC  087D               	movf	_count+1,w
   533  07CD  1283               	bcf	3,5	;RP0=0, select bank0
   534  07CE  1303               	bcf	3,6	;RP1=0, select bank0
   535  07CF  00A5               	movwf	display@k+1
   536  07D0  087C               	movf	_count,w
   537  07D1  00A4               	movwf	display@k
   538  07D2  120A  118A  26EF  120A  118A  	fcall	_display
   539  07D7                     l45:	
   540                           ;LED GLOW USING COUNT USING BUTTON.c: 39:             while(RC3==1);
   541                           
   542  07D7  1283               	bcf	3,5	;RP0=0, select bank0
   543  07D8  1303               	bcf	3,6	;RP1=0, select bank0
   544  07D9  1987               	btfsc	7,3	;volatile
   545  07DA  2FDC               	goto	u561
   546  07DB  2FDD               	goto	u560
   547  07DC                     u561:
   548  07DC  2FD7               	goto	l45
   549  07DD                     u560:
   550  07DD                     l44:	
   551                           ;LED GLOW USING COUNT USING BUTTON.c: 40:         }
   552                           
   553                           
   554                           ;LED GLOW USING COUNT USING BUTTON.c: 41:         if (RC4==1)
   555  07DD  1E07               	btfss	7,4	;volatile
   556  07DE  2FE0               	goto	u571
   557  07DF  2FE1               	goto	u570
   558  07E0                     u571:
   559  07E0  2FB4               	goto	l957
   560  07E1                     u570:
   561  07E1                     l49:
   562  07E1  1A07               	btfsc	7,4	;volatile
   563  07E2  2FE4               	goto	u581
   564  07E3  2FE5               	goto	u580
   565  07E4                     u581:
   566  07E4  2FE1               	goto	l49
   567  07E5                     u580:
   568  07E5                     l51:
   569                           
   570                           ;LED GLOW USING COUNT USING BUTTON.c: 44:             RC0=1;
   571  07E5  1407               	bsf	7,0	;volatile
   572  07E6                     l967:
   573                           
   574                           ;LED GLOW USING COUNT USING BUTTON.c: 45:             timer(count);
   575  07E6  087D               	movf	_count+1,w
   576  07E7  00F1               	movwf	timer@m+1
   577  07E8  087C               	movf	_count,w
   578  07E9  00F0               	movwf	timer@m
   579  07EA  120A  118A  25FB  120A  118A  	fcall	_timer
   580  07EF                     l969:
   581                           
   582                           ;LED GLOW USING COUNT USING BUTTON.c: 46:             RC0=0;
   583  07EF  1283               	bcf	3,5	;RP0=0, select bank0
   584  07F0  1303               	bcf	3,6	;RP1=0, select bank0
   585  07F1  1007               	bcf	7,0	;volatile
   586  07F2  2FB4               	goto	l957
   587  07F3  120A  118A  2800   	ljmp	start
   588  07F6                     __end_of_main:
   589                           
   590                           	psect	text1
   591  05FB                     __ptext1:	
   592 ;; *************** function _timer *****************
   593 ;; Defined at:
   594 ;;		line 66 in file "LED GLOW USING COUNT USING BUTTON.c"
   595 ;; Parameters:    Size  Location     Type
   596 ;;  m               2    0[COMMON] int 
   597 ;; Auto vars:     Size  Location     Type
   598 ;;  cnt             2    5[COMMON] int 
   599 ;;  time            2    3[COMMON] int 
   600 ;; Return value:  Size  Location     Type
   601 ;;                  1    wreg      void 
   602 ;; Registers used:
   603 ;;		wreg, status,2, status,0
   604 ;; Tracked objects:
   605 ;;		On entry : 0/0
   606 ;;		On exit  : 0/0
   607 ;;		Unchanged: 0/0
   608 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   609 ;;      Params:         2       0       0       0       0
   610 ;;      Locals:         4       0       0       0       0
   611 ;;      Temps:          1       0       0       0       0
   612 ;;      Totals:         7       0       0       0       0
   613 ;;Total ram usage:        7 bytes
   614 ;; Hardware stack levels used: 1
   615 ;; This function calls:
   616 ;;		Nothing
   617 ;; This function is called by:
   618 ;;		_main
   619 ;; This function uses a non-reentrant model
   620 ;;
   621                           
   622                           
   623                           ;psect for function _timer
   624  05FB                     _timer:
   625  05FB                     l923:	
   626                           ;incstack = 0
   627                           ; Regs used in _timer: [wreg+status,2+status,0]
   628                           
   629                           
   630                           ;LED GLOW USING COUNT USING BUTTON.c: 66: void timer(int m);LED GLOW USING COUNT USING B
      +                          UTTON.c: 67: {;LED GLOW USING COUNT USING BUTTON.c: 68:     int time=0,cnt=0;
   631  05FB  01F3               	clrf	timer@time
   632  05FC  01F4               	clrf	timer@time+1
   633  05FD  01F5               	clrf	timer@cnt
   634  05FE  01F6               	clrf	timer@cnt+1
   635                           
   636                           ;LED GLOW USING COUNT USING BUTTON.c: 69:     while (m>time)
   637  05FF  2E1E               	goto	l935
   638  0600                     l64:
   639                           
   640                           ;LED GLOW USING COUNT USING BUTTON.c: 70:     {;LED GLOW USING COUNT USING BUTTON.c: 71:
      +                                 if (T0IF==1)
   641  0600  1D0B               	btfss	11,2	;volatile
   642  0601  2E03               	goto	u521
   643  0602  2E04               	goto	u520
   644  0603                     u521:
   645  0603  2E0F               	goto	l929
   646  0604                     u520:
   647  0604                     l925:
   648                           
   649                           ;LED GLOW USING COUNT USING BUTTON.c: 72:       {;LED GLOW USING COUNT USING BUTTON.c: 7
      +                          3:           cnt++;
   650  0604  3001               	movlw	1
   651  0605  07F5               	addwf	timer@cnt,f
   652  0606  1803               	skipnc
   653  0607  0AF6               	incf	timer@cnt+1,f
   654  0608  3000               	movlw	0
   655  0609  07F6               	addwf	timer@cnt+1,f
   656  060A                     l927:
   657                           
   658                           ;LED GLOW USING COUNT USING BUTTON.c: 74:           T0IF=0;
   659  060A  110B               	bcf	11,2	;volatile
   660                           
   661                           ;LED GLOW USING COUNT USING BUTTON.c: 75:           TMR0=131;
   662  060B  3083               	movlw	131
   663  060C  1283               	bcf	3,5	;RP0=0, select bank0
   664  060D  1303               	bcf	3,6	;RP1=0, select bank0
   665  060E  0081               	movwf	1	;volatile
   666  060F                     l929:
   667                           
   668                           ;LED GLOW USING COUNT USING BUTTON.c: 77:       if (cnt==125)
   669  060F  307D               	movlw	125
   670  0610  0675               	xorwf	timer@cnt,w
   671  0611  0476               	iorwf	timer@cnt+1,w
   672  0612  1D03               	btfss	3,2
   673  0613  2E15               	goto	u531
   674  0614  2E16               	goto	u530
   675  0615                     u531:
   676  0615  2E1E               	goto	l935
   677  0616                     u530:
   678  0616                     l931:
   679                           
   680                           ;LED GLOW USING COUNT USING BUTTON.c: 78:       {;LED GLOW USING COUNT USING BUTTON.c: 7
      +                          9:           time++;
   681  0616  3001               	movlw	1
   682  0617  07F3               	addwf	timer@time,f
   683  0618  1803               	skipnc
   684  0619  0AF4               	incf	timer@time+1,f
   685  061A  3000               	movlw	0
   686  061B  07F4               	addwf	timer@time+1,f
   687  061C                     l933:
   688                           
   689                           ;LED GLOW USING COUNT USING BUTTON.c: 80:           cnt=0;
   690  061C  01F5               	clrf	timer@cnt
   691  061D  01F6               	clrf	timer@cnt+1
   692  061E                     l935:
   693                           
   694                           ;LED GLOW USING COUNT USING BUTTON.c: 69:     while (m>time)
   695  061E  0874               	movf	timer@time+1,w
   696  061F  3A80               	xorlw	128
   697  0620  00F2               	movwf	??_timer
   698  0621  0871               	movf	timer@m+1,w
   699  0622  3A80               	xorlw	128
   700  0623  0272               	subwf	??_timer,w
   701  0624  1D03               	skipz
   702  0625  2E28               	goto	u545
   703  0626  0870               	movf	timer@m,w
   704  0627  0273               	subwf	timer@time,w
   705  0628                     u545:
   706  0628  1C03               	skipc
   707  0629  2E2B               	goto	u541
   708  062A  2E2C               	goto	u540
   709  062B                     u541:
   710  062B  2E00               	goto	l64
   711  062C                     u540:
   712  062C                     l68:
   713  062C  0008               	return
   714  062D                     __end_of_timer:
   715                           
   716                           	psect	text2
   717  06EF                     __ptext2:	
   718 ;; *************** function _display *****************
   719 ;; Defined at:
   720 ;;		line 84 in file "LED GLOW USING COUNT USING BUTTON.c"
   721 ;; Parameters:    Size  Location     Type
   722 ;;  k               2    4[BANK0 ] int 
   723 ;; Auto vars:     Size  Location     Type
   724 ;;  c               2   10[BANK0 ] int 
   725 ;;  b               2    8[BANK0 ] int 
   726 ;;  a               2    6[BANK0 ] int 
   727 ;; Return value:  Size  Location     Type
   728 ;;                  1    wreg      void 
   729 ;; Registers used:
   730 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   731 ;; Tracked objects:
   732 ;;		On entry : 0/0
   733 ;;		On exit  : 0/0
   734 ;;		Unchanged: 0/0
   735 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   736 ;;      Params:         0       2       0       0       0
   737 ;;      Locals:         0       6       0       0       0
   738 ;;      Temps:          0       0       0       0       0
   739 ;;      Totals:         0       8       0       0       0
   740 ;;Total ram usage:        8 bytes
   741 ;; Hardware stack levels used: 1
   742 ;; Hardware stack levels required when called: 2
   743 ;; This function calls:
   744 ;;		_LCD
   745 ;;		___awdiv
   746 ;;		___awmod
   747 ;; This function is called by:
   748 ;;		_main
   749 ;; This function uses a non-reentrant model
   750 ;;
   751                           
   752                           
   753                           ;psect for function _display
   754  06EF                     _display:
   755  06EF                     l915:	
   756                           ;incstack = 0
   757                           ; Regs used in _display: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   758                           
   759                           
   760                           ;LED GLOW USING COUNT USING BUTTON.c: 84: void display(int k);LED GLOW USING COUNT USING
      +                           BUTTON.c: 85: {;LED GLOW USING COUNT USING BUTTON.c: 86:     int a,b,c;;LED GLOW USING 
      +                          COUNT USING BUTTON.c: 87:     a=k/100;
   761  06EF  3064               	movlw	100
   762  06F0  00F7               	movwf	___awdiv@divisor
   763  06F1  3000               	movlw	0
   764  06F2  00F8               	movwf	___awdiv@divisor+1
   765  06F3  1283               	bcf	3,5	;RP0=0, select bank0
   766  06F4  1303               	bcf	3,6	;RP1=0, select bank0
   767  06F5  0825               	movf	display@k+1,w
   768  06F6  00FA               	movwf	___awdiv@dividend+1
   769  06F7  0824               	movf	display@k,w
   770  06F8  00F9               	movwf	___awdiv@dividend
   771  06F9  120A  118A  2686  120A  118A  	fcall	___awdiv
   772  06FE  0878               	movf	?___awdiv+1,w
   773  06FF  1283               	bcf	3,5	;RP0=0, select bank0
   774  0700  1303               	bcf	3,6	;RP1=0, select bank0
   775  0701  00A7               	movwf	display@a+1
   776  0702  0877               	movf	?___awdiv,w
   777  0703  00A6               	movwf	display@a
   778                           
   779                           ;LED GLOW USING COUNT USING BUTTON.c: 88:     b=(k%100)/10;
   780  0704  300A               	movlw	10
   781  0705  00F7               	movwf	___awdiv@divisor
   782  0706  3000               	movlw	0
   783  0707  00F8               	movwf	___awdiv@divisor+1
   784  0708  0825               	movf	display@k+1,w
   785  0709  00F3               	movwf	___awmod@dividend+1
   786  070A  0824               	movf	display@k,w
   787  070B  00F2               	movwf	___awmod@dividend
   788  070C  3064               	movlw	100
   789  070D  00F0               	movwf	___awmod@divisor
   790  070E  3000               	movlw	0
   791  070F  00F1               	movwf	___awmod@divisor+1
   792  0710  120A  118A  262D  120A  118A  	fcall	___awmod
   793  0715  0871               	movf	?___awmod+1,w
   794  0716  00FA               	movwf	___awdiv@dividend+1
   795  0717  0870               	movf	?___awmod,w
   796  0718  00F9               	movwf	___awdiv@dividend
   797  0719  120A  118A  2686  120A  118A  	fcall	___awdiv
   798  071E  0878               	movf	?___awdiv+1,w
   799  071F  1283               	bcf	3,5	;RP0=0, select bank0
   800  0720  1303               	bcf	3,6	;RP1=0, select bank0
   801  0721  00A9               	movwf	display@b+1
   802  0722  0877               	movf	?___awdiv,w
   803  0723  00A8               	movwf	display@b
   804                           
   805                           ;LED GLOW USING COUNT USING BUTTON.c: 89:     c=k%10;
   806  0724  300A               	movlw	10
   807  0725  00F0               	movwf	___awmod@divisor
   808  0726  3000               	movlw	0
   809  0727  00F1               	movwf	___awmod@divisor+1
   810  0728  0825               	movf	display@k+1,w
   811  0729  00F3               	movwf	___awmod@dividend+1
   812  072A  0824               	movf	display@k,w
   813  072B  00F2               	movwf	___awmod@dividend
   814  072C  120A  118A  262D  120A  118A  	fcall	___awmod
   815  0731  0871               	movf	?___awmod+1,w
   816  0732  1283               	bcf	3,5	;RP0=0, select bank0
   817  0733  1303               	bcf	3,6	;RP1=0, select bank0
   818  0734  00AB               	movwf	display@c+1
   819  0735  0870               	movf	?___awmod,w
   820  0736  00AA               	movwf	display@c
   821  0737                     l917:
   822                           
   823                           ;LED GLOW USING COUNT USING BUTTON.c: 90:     LCD(0x30+a,1);
   824  0737  0826               	movf	display@a,w
   825  0738  3E30               	addlw	48
   826  0739  00F1               	movwf	LCD@g
   827  073A  0827               	movf	display@a+1,w
   828  073B  1803               	skipnc
   829  073C  3E01               	addlw	1
   830  073D  3E00               	addlw	0
   831  073E  00F2               	movwf	LCD@g+1
   832  073F  3001               	movlw	1
   833  0740  00F3               	movwf	LCD@h
   834  0741  3000               	movlw	0
   835  0742  00F4               	movwf	LCD@h+1
   836  0743  120A  118A  25D2  120A  118A  	fcall	_LCD
   837  0748                     l919:
   838                           
   839                           ;LED GLOW USING COUNT USING BUTTON.c: 91:     LCD(0x30+b,1);
   840  0748  1283               	bcf	3,5	;RP0=0, select bank0
   841  0749  1303               	bcf	3,6	;RP1=0, select bank0
   842  074A  0828               	movf	display@b,w
   843  074B  3E30               	addlw	48
   844  074C  00F1               	movwf	LCD@g
   845  074D  0829               	movf	display@b+1,w
   846  074E  1803               	skipnc
   847  074F  3E01               	addlw	1
   848  0750  3E00               	addlw	0
   849  0751  00F2               	movwf	LCD@g+1
   850  0752  3001               	movlw	1
   851  0753  00F3               	movwf	LCD@h
   852  0754  3000               	movlw	0
   853  0755  00F4               	movwf	LCD@h+1
   854  0756  120A  118A  25D2  120A  118A  	fcall	_LCD
   855  075B                     l921:
   856                           
   857                           ;LED GLOW USING COUNT USING BUTTON.c: 92:     LCD(0x30+c,1);
   858  075B  1283               	bcf	3,5	;RP0=0, select bank0
   859  075C  1303               	bcf	3,6	;RP1=0, select bank0
   860  075D  082A               	movf	display@c,w
   861  075E  3E30               	addlw	48
   862  075F  00F1               	movwf	LCD@g
   863  0760  082B               	movf	display@c+1,w
   864  0761  1803               	skipnc
   865  0762  3E01               	addlw	1
   866  0763  3E00               	addlw	0
   867  0764  00F2               	movwf	LCD@g+1
   868  0765  3001               	movlw	1
   869  0766  00F3               	movwf	LCD@h
   870  0767  3000               	movlw	0
   871  0768  00F4               	movwf	LCD@h+1
   872  0769  120A  118A  25D2  120A  118A  	fcall	_LCD
   873  076E                     l71:
   874  076E  0008               	return
   875  076F                     __end_of_display:
   876                           
   877                           	psect	text3
   878  062D                     __ptext3:	
   879 ;; *************** function ___awmod *****************
   880 ;; Defined at:
   881 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awmod.c"
   882 ;; Parameters:    Size  Location     Type
   883 ;;  divisor         2    0[COMMON] int 
   884 ;;  dividend        2    2[COMMON] int 
   885 ;; Auto vars:     Size  Location     Type
   886 ;;  sign            1    6[COMMON] unsigned char 
   887 ;;  counter         1    5[COMMON] unsigned char 
   888 ;; Return value:  Size  Location     Type
   889 ;;                  2    0[COMMON] int 
   890 ;; Registers used:
   891 ;;		wreg, status,2, status,0
   892 ;; Tracked objects:
   893 ;;		On entry : 0/0
   894 ;;		On exit  : 0/0
   895 ;;		Unchanged: 0/0
   896 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   897 ;;      Params:         4       0       0       0       0
   898 ;;      Locals:         2       0       0       0       0
   899 ;;      Temps:          1       0       0       0       0
   900 ;;      Totals:         7       0       0       0       0
   901 ;;Total ram usage:        7 bytes
   902 ;; Hardware stack levels used: 1
   903 ;; This function calls:
   904 ;;		Nothing
   905 ;; This function is called by:
   906 ;;		_display
   907 ;; This function uses a non-reentrant model
   908 ;;
   909                           
   910                           
   911                           ;psect for function ___awmod
   912  062D                     ___awmod:
   913  062D                     l877:	
   914                           ;incstack = 0
   915                           ; Regs used in ___awmod: [wreg+status,2+status,0]
   916                           
   917  062D  01F6               	clrf	___awmod@sign
   918  062E                     l879:
   919  062E  1FF3               	btfss	___awmod@dividend+1,7
   920  062F  2E31               	goto	u431
   921  0630  2E32               	goto	u430
   922  0631                     u431:
   923  0631  2E39               	goto	l885
   924  0632                     u430:
   925  0632                     l881:
   926  0632  09F2               	comf	___awmod@dividend,f
   927  0633  09F3               	comf	___awmod@dividend+1,f
   928  0634  0AF2               	incf	___awmod@dividend,f
   929  0635  1903               	skipnz
   930  0636  0AF3               	incf	___awmod@dividend+1,f
   931  0637                     l883:
   932  0637  01F6               	clrf	___awmod@sign
   933  0638  0AF6               	incf	___awmod@sign,f
   934  0639                     l885:
   935  0639  1FF1               	btfss	___awmod@divisor+1,7
   936  063A  2E3C               	goto	u441
   937  063B  2E3D               	goto	u440
   938  063C                     u441:
   939  063C  2E42               	goto	l889
   940  063D                     u440:
   941  063D                     l887:
   942  063D  09F0               	comf	___awmod@divisor,f
   943  063E  09F1               	comf	___awmod@divisor+1,f
   944  063F  0AF0               	incf	___awmod@divisor,f
   945  0640  1903               	skipnz
   946  0641  0AF1               	incf	___awmod@divisor+1,f
   947  0642                     l889:
   948  0642  0870               	movf	___awmod@divisor,w
   949  0643  0471               	iorwf	___awmod@divisor+1,w
   950  0644  1903               	btfsc	3,2
   951  0645  2E47               	goto	u451
   952  0646  2E48               	goto	u450
   953  0647                     u451:
   954  0647  2E77               	goto	l907
   955  0648                     u450:
   956  0648                     l891:
   957  0648  01F5               	clrf	___awmod@counter
   958  0649  0AF5               	incf	___awmod@counter,f
   959  064A  2E56               	goto	l897
   960  064B                     l893:
   961  064B  3001               	movlw	1
   962  064C                     u465:
   963  064C  1003               	clrc
   964  064D  0DF0               	rlf	___awmod@divisor,f
   965  064E  0DF1               	rlf	___awmod@divisor+1,f
   966  064F  3EFF               	addlw	-1
   967  0650  1D03               	skipz
   968  0651  2E4C               	goto	u465
   969  0652                     l895:
   970  0652  3001               	movlw	1
   971  0653  00F4               	movwf	??___awmod
   972  0654  0874               	movf	??___awmod,w
   973  0655  07F5               	addwf	___awmod@counter,f
   974  0656                     l897:
   975  0656  1FF1               	btfss	___awmod@divisor+1,7
   976  0657  2E59               	goto	u471
   977  0658  2E5A               	goto	u470
   978  0659                     u471:
   979  0659  2E4B               	goto	l893
   980  065A                     u470:
   981  065A                     l899:
   982  065A  0871               	movf	___awmod@divisor+1,w
   983  065B  0273               	subwf	___awmod@dividend+1,w
   984  065C  1D03               	skipz
   985  065D  2E60               	goto	u485
   986  065E  0870               	movf	___awmod@divisor,w
   987  065F  0272               	subwf	___awmod@dividend,w
   988  0660                     u485:
   989  0660  1C03               	skipc
   990  0661  2E63               	goto	u481
   991  0662  2E64               	goto	u480
   992  0663                     u481:
   993  0663  2E6A               	goto	l903
   994  0664                     u480:
   995  0664                     l901:
   996  0664  0870               	movf	___awmod@divisor,w
   997  0665  02F2               	subwf	___awmod@dividend,f
   998  0666  0871               	movf	___awmod@divisor+1,w
   999  0667  1C03               	skipc
  1000  0668  03F3               	decf	___awmod@dividend+1,f
  1001  0669  02F3               	subwf	___awmod@dividend+1,f
  1002  066A                     l903:
  1003  066A  3001               	movlw	1
  1004  066B                     u495:
  1005  066B  1003               	clrc
  1006  066C  0CF1               	rrf	___awmod@divisor+1,f
  1007  066D  0CF0               	rrf	___awmod@divisor,f
  1008  066E  3EFF               	addlw	-1
  1009  066F  1D03               	skipz
  1010  0670  2E6B               	goto	u495
  1011  0671                     l905:
  1012  0671  3001               	movlw	1
  1013  0672  02F5               	subwf	___awmod@counter,f
  1014  0673  1D03               	btfss	3,2
  1015  0674  2E76               	goto	u501
  1016  0675  2E77               	goto	u500
  1017  0676                     u501:
  1018  0676  2E5A               	goto	l899
  1019  0677                     u500:
  1020  0677                     l907:
  1021  0677  0876               	movf	___awmod@sign,w
  1022  0678  1903               	btfsc	3,2
  1023  0679  2E7B               	goto	u511
  1024  067A  2E7C               	goto	u510
  1025  067B                     u511:
  1026  067B  2E81               	goto	l911
  1027  067C                     u510:
  1028  067C                     l909:
  1029  067C  09F2               	comf	___awmod@dividend,f
  1030  067D  09F3               	comf	___awmod@dividend+1,f
  1031  067E  0AF2               	incf	___awmod@dividend,f
  1032  067F  1903               	skipnz
  1033  0680  0AF3               	incf	___awmod@dividend+1,f
  1034  0681                     l911:
  1035  0681  0873               	movf	___awmod@dividend+1,w
  1036  0682  00F1               	movwf	?___awmod+1
  1037  0683  0872               	movf	___awmod@dividend,w
  1038  0684  00F0               	movwf	?___awmod
  1039  0685                     l323:
  1040  0685  0008               	return
  1041  0686                     __end_of___awmod:
  1042                           
  1043                           	psect	text4
  1044  0686                     __ptext4:	
  1045 ;; *************** function ___awdiv *****************
  1046 ;; Defined at:
  1047 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awdiv.c"
  1048 ;; Parameters:    Size  Location     Type
  1049 ;;  divisor         2    7[COMMON] int 
  1050 ;;  dividend        2    9[COMMON] int 
  1051 ;; Auto vars:     Size  Location     Type
  1052 ;;  quotient        2    2[BANK0 ] int 
  1053 ;;  sign            1    1[BANK0 ] unsigned char 
  1054 ;;  counter         1    0[BANK0 ] unsigned char 
  1055 ;; Return value:  Size  Location     Type
  1056 ;;                  2    7[COMMON] int 
  1057 ;; Registers used:
  1058 ;;		wreg, status,2, status,0
  1059 ;; Tracked objects:
  1060 ;;		On entry : 0/0
  1061 ;;		On exit  : 0/0
  1062 ;;		Unchanged: 0/0
  1063 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1064 ;;      Params:         4       0       0       0       0
  1065 ;;      Locals:         0       4       0       0       0
  1066 ;;      Temps:          1       0       0       0       0
  1067 ;;      Totals:         5       4       0       0       0
  1068 ;;Total ram usage:        9 bytes
  1069 ;; Hardware stack levels used: 1
  1070 ;; This function calls:
  1071 ;;		Nothing
  1072 ;; This function is called by:
  1073 ;;		_display
  1074 ;; This function uses a non-reentrant model
  1075 ;;
  1076                           
  1077                           
  1078                           ;psect for function ___awdiv
  1079  0686                     ___awdiv:
  1080  0686                     l833:	
  1081                           ;incstack = 0
  1082                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1083                           
  1084  0686  1283               	bcf	3,5	;RP0=0, select bank0
  1085  0687  1303               	bcf	3,6	;RP1=0, select bank0
  1086  0688  01A1               	clrf	___awdiv@sign
  1087  0689                     l835:
  1088  0689  1FF8               	btfss	___awdiv@divisor+1,7
  1089  068A  2E8C               	goto	u331
  1090  068B  2E8D               	goto	u330
  1091  068C                     u331:
  1092  068C  2E94               	goto	l841
  1093  068D                     u330:
  1094  068D                     l837:
  1095  068D  09F7               	comf	___awdiv@divisor,f
  1096  068E  09F8               	comf	___awdiv@divisor+1,f
  1097  068F  0AF7               	incf	___awdiv@divisor,f
  1098  0690  1903               	skipnz
  1099  0691  0AF8               	incf	___awdiv@divisor+1,f
  1100  0692                     l839:
  1101  0692  01A1               	clrf	___awdiv@sign
  1102  0693  0AA1               	incf	___awdiv@sign,f
  1103  0694                     l841:
  1104  0694  1FFA               	btfss	___awdiv@dividend+1,7
  1105  0695  2E97               	goto	u341
  1106  0696  2E98               	goto	u340
  1107  0697                     u341:
  1108  0697  2EA1               	goto	l847
  1109  0698                     u340:
  1110  0698                     l843:
  1111  0698  09F9               	comf	___awdiv@dividend,f
  1112  0699  09FA               	comf	___awdiv@dividend+1,f
  1113  069A  0AF9               	incf	___awdiv@dividend,f
  1114  069B  1903               	skipnz
  1115  069C  0AFA               	incf	___awdiv@dividend+1,f
  1116  069D                     l845:
  1117  069D  3001               	movlw	1
  1118  069E  00FB               	movwf	??___awdiv
  1119  069F  087B               	movf	??___awdiv,w
  1120  06A0  06A1               	xorwf	___awdiv@sign,f
  1121  06A1                     l847:
  1122  06A1  01A2               	clrf	___awdiv@quotient
  1123  06A2  01A3               	clrf	___awdiv@quotient+1
  1124  06A3                     l849:
  1125  06A3  0877               	movf	___awdiv@divisor,w
  1126  06A4  0478               	iorwf	___awdiv@divisor+1,w
  1127  06A5  1903               	btfsc	3,2
  1128  06A6  2EA8               	goto	u351
  1129  06A7  2EA9               	goto	u350
  1130  06A8                     u351:
  1131  06A8  2EE0               	goto	l869
  1132  06A9                     u350:
  1133  06A9                     l851:
  1134  06A9  01A0               	clrf	___awdiv@counter
  1135  06AA  0AA0               	incf	___awdiv@counter,f
  1136  06AB  2EB7               	goto	l857
  1137  06AC                     l853:
  1138  06AC  3001               	movlw	1
  1139  06AD                     u365:
  1140  06AD  1003               	clrc
  1141  06AE  0DF7               	rlf	___awdiv@divisor,f
  1142  06AF  0DF8               	rlf	___awdiv@divisor+1,f
  1143  06B0  3EFF               	addlw	-1
  1144  06B1  1D03               	skipz
  1145  06B2  2EAD               	goto	u365
  1146  06B3                     l855:
  1147  06B3  3001               	movlw	1
  1148  06B4  00FB               	movwf	??___awdiv
  1149  06B5  087B               	movf	??___awdiv,w
  1150  06B6  07A0               	addwf	___awdiv@counter,f
  1151  06B7                     l857:
  1152  06B7  1FF8               	btfss	___awdiv@divisor+1,7
  1153  06B8  2EBA               	goto	u371
  1154  06B9  2EBB               	goto	u370
  1155  06BA                     u371:
  1156  06BA  2EAC               	goto	l853
  1157  06BB                     u370:
  1158  06BB                     l859:
  1159  06BB  3001               	movlw	1
  1160  06BC                     u385:
  1161  06BC  1003               	clrc
  1162  06BD  0DA2               	rlf	___awdiv@quotient,f
  1163  06BE  0DA3               	rlf	___awdiv@quotient+1,f
  1164  06BF  3EFF               	addlw	-1
  1165  06C0  1D03               	skipz
  1166  06C1  2EBC               	goto	u385
  1167  06C2  0878               	movf	___awdiv@divisor+1,w
  1168  06C3  027A               	subwf	___awdiv@dividend+1,w
  1169  06C4  1D03               	skipz
  1170  06C5  2EC8               	goto	u395
  1171  06C6  0877               	movf	___awdiv@divisor,w
  1172  06C7  0279               	subwf	___awdiv@dividend,w
  1173  06C8                     u395:
  1174  06C8  1C03               	skipc
  1175  06C9  2ECB               	goto	u391
  1176  06CA  2ECC               	goto	u390
  1177  06CB                     u391:
  1178  06CB  2ED3               	goto	l865
  1179  06CC                     u390:
  1180  06CC                     l861:
  1181  06CC  0877               	movf	___awdiv@divisor,w
  1182  06CD  02F9               	subwf	___awdiv@dividend,f
  1183  06CE  0878               	movf	___awdiv@divisor+1,w
  1184  06CF  1C03               	skipc
  1185  06D0  03FA               	decf	___awdiv@dividend+1,f
  1186  06D1  02FA               	subwf	___awdiv@dividend+1,f
  1187  06D2                     l863:
  1188  06D2  1422               	bsf	___awdiv@quotient,0
  1189  06D3                     l865:
  1190  06D3  3001               	movlw	1
  1191  06D4                     u405:
  1192  06D4  1003               	clrc
  1193  06D5  0CF8               	rrf	___awdiv@divisor+1,f
  1194  06D6  0CF7               	rrf	___awdiv@divisor,f
  1195  06D7  3EFF               	addlw	-1
  1196  06D8  1D03               	skipz
  1197  06D9  2ED4               	goto	u405
  1198  06DA                     l867:
  1199  06DA  3001               	movlw	1
  1200  06DB  02A0               	subwf	___awdiv@counter,f
  1201  06DC  1D03               	btfss	3,2
  1202  06DD  2EDF               	goto	u411
  1203  06DE  2EE0               	goto	u410
  1204  06DF                     u411:
  1205  06DF  2EBB               	goto	l859
  1206  06E0                     u410:
  1207  06E0                     l869:
  1208  06E0  0821               	movf	___awdiv@sign,w
  1209  06E1  1903               	btfsc	3,2
  1210  06E2  2EE4               	goto	u421
  1211  06E3  2EE5               	goto	u420
  1212  06E4                     u421:
  1213  06E4  2EEA               	goto	l873
  1214  06E5                     u420:
  1215  06E5                     l871:
  1216  06E5  09A2               	comf	___awdiv@quotient,f
  1217  06E6  09A3               	comf	___awdiv@quotient+1,f
  1218  06E7  0AA2               	incf	___awdiv@quotient,f
  1219  06E8  1903               	skipnz
  1220  06E9  0AA3               	incf	___awdiv@quotient+1,f
  1221  06EA                     l873:
  1222  06EA  0823               	movf	___awdiv@quotient+1,w
  1223  06EB  00F8               	movwf	?___awdiv+1
  1224  06EC  0822               	movf	___awdiv@quotient,w
  1225  06ED  00F7               	movwf	?___awdiv
  1226  06EE                     l310:
  1227  06EE  0008               	return
  1228  06EF                     __end_of___awdiv:
  1229                           
  1230                           	psect	text5
  1231  05D2                     __ptext5:	
  1232 ;; *************** function _LCD *****************
  1233 ;; Defined at:
  1234 ;;		line 57 in file "LED GLOW USING COUNT USING BUTTON.c"
  1235 ;; Parameters:    Size  Location     Type
  1236 ;;  g               2    1[COMMON] int 
  1237 ;;  h               2    3[COMMON] int 
  1238 ;; Auto vars:     Size  Location     Type
  1239 ;;		None
  1240 ;; Return value:  Size  Location     Type
  1241 ;;                  1    wreg      void 
  1242 ;; Registers used:
  1243 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1244 ;; Tracked objects:
  1245 ;;		On entry : 0/0
  1246 ;;		On exit  : 0/0
  1247 ;;		Unchanged: 0/0
  1248 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1249 ;;      Params:         4       0       0       0       0
  1250 ;;      Locals:         0       0       0       0       0
  1251 ;;      Temps:          2       0       0       0       0
  1252 ;;      Totals:         6       0       0       0       0
  1253 ;;Total ram usage:        6 bytes
  1254 ;; Hardware stack levels used: 1
  1255 ;; Hardware stack levels required when called: 1
  1256 ;; This function calls:
  1257 ;;		_pulse
  1258 ;; This function is called by:
  1259 ;;		_main
  1260 ;;		_display
  1261 ;; This function uses a non-reentrant model
  1262 ;;
  1263                           
  1264                           
  1265                           ;psect for function _LCD
  1266  05D2                     _LCD:
  1267  05D2                     l823:	
  1268                           ;incstack = 0
  1269                           ; Regs used in _LCD: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1270                           
  1271                           
  1272                           ;LED GLOW USING COUNT USING BUTTON.c: 57: void LCD(int g,int h);LED GLOW USING COUNT USI
      +                          NG BUTTON.c: 58: {;LED GLOW USING COUNT USING BUTTON.c: 59:     RC5=h;
  1273  05D2  1873               	btfsc	LCD@h,0
  1274  05D3  2DD5               	goto	u301
  1275  05D4  2DD9               	goto	u300
  1276  05D5                     u301:
  1277  05D5  1283               	bcf	3,5	;RP0=0, select bank0
  1278  05D6  1303               	bcf	3,6	;RP1=0, select bank0
  1279  05D7  1687               	bsf	7,5	;volatile
  1280  05D8  2DDC               	goto	u314
  1281  05D9                     u300:
  1282  05D9  1283               	bcf	3,5	;RP0=0, select bank0
  1283  05DA  1303               	bcf	3,6	;RP1=0, select bank0
  1284  05DB  1287               	bcf	7,5	;volatile
  1285  05DC                     u314:
  1286                           
  1287                           ;LED GLOW USING COUNT USING BUTTON.c: 60:     RC6=0;
  1288  05DC  1307               	bcf	7,6	;volatile
  1289  05DD                     l825:
  1290                           
  1291                           ;LED GLOW USING COUNT USING BUTTON.c: 61:     PORTD=(g&0xf0)>>4;
  1292  05DD  0872               	movf	LCD@g+1,w
  1293  05DE  00F6               	movwf	??_LCD+1
  1294  05DF  0871               	movf	LCD@g,w
  1295  05E0  00F5               	movwf	??_LCD
  1296  05E1  3004               	movlw	4
  1297  05E2  00FF               	movwf	btemp+1
  1298  05E3                     u325:
  1299  05E3  0D76               	rlf	??_LCD+1,w
  1300  05E4  0CF6               	rrf	??_LCD+1,f
  1301  05E5  0CF5               	rrf	??_LCD,f
  1302  05E6  0BFF               	decfsz	btemp+1,f
  1303  05E7  2DE3               	goto	u325
  1304  05E8  0875               	movf	??_LCD,w
  1305  05E9  390F               	andlw	15
  1306  05EA  0088               	movwf	8	;volatile
  1307  05EB                     l827:
  1308                           
  1309                           ;LED GLOW USING COUNT USING BUTTON.c: 62:     pulse();
  1310  05EB  120A  118A  25C1  120A  118A  	fcall	_pulse
  1311  05F0                     l829:
  1312                           
  1313                           ;LED GLOW USING COUNT USING BUTTON.c: 63:     PORTD=(g&0x0f);
  1314  05F0  0871               	movf	LCD@g,w
  1315  05F1  390F               	andlw	15
  1316  05F2  1283               	bcf	3,5	;RP0=0, select bank0
  1317  05F3  1303               	bcf	3,6	;RP1=0, select bank0
  1318  05F4  0088               	movwf	8	;volatile
  1319  05F5                     l831:
  1320                           
  1321                           ;LED GLOW USING COUNT USING BUTTON.c: 64:     pulse();
  1322  05F5  120A  118A  25C1  120A  118A  	fcall	_pulse
  1323  05FA                     l60:
  1324  05FA  0008               	return
  1325  05FB                     __end_of_LCD:
  1326                           
  1327                           	psect	text6
  1328  05C1                     __ptext6:	
  1329 ;; *************** function _pulse *****************
  1330 ;; Defined at:
  1331 ;;		line 50 in file "LED GLOW USING COUNT USING BUTTON.c"
  1332 ;; Parameters:    Size  Location     Type
  1333 ;;		None
  1334 ;; Auto vars:     Size  Location     Type
  1335 ;;		None
  1336 ;; Return value:  Size  Location     Type
  1337 ;;                  1    wreg      void 
  1338 ;; Registers used:
  1339 ;;		wreg
  1340 ;; Tracked objects:
  1341 ;;		On entry : 0/0
  1342 ;;		On exit  : 0/0
  1343 ;;		Unchanged: 0/0
  1344 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1345 ;;      Params:         0       0       0       0       0
  1346 ;;      Locals:         0       0       0       0       0
  1347 ;;      Temps:          1       0       0       0       0
  1348 ;;      Totals:         1       0       0       0       0
  1349 ;;Total ram usage:        1 bytes
  1350 ;; Hardware stack levels used: 1
  1351 ;; This function calls:
  1352 ;;		Nothing
  1353 ;; This function is called by:
  1354 ;;		_LCD
  1355 ;; This function uses a non-reentrant model
  1356 ;;
  1357                           
  1358                           
  1359                           ;psect for function _pulse
  1360  05C1                     _pulse:
  1361  05C1                     l817:	
  1362                           ;incstack = 0
  1363                           ; Regs used in _pulse: [wreg]
  1364                           
  1365                           
  1366                           ;LED GLOW USING COUNT USING BUTTON.c: 52:     RC7=1;
  1367  05C1  1283               	bcf	3,5	;RP0=0, select bank0
  1368  05C2  1303               	bcf	3,6	;RP1=0, select bank0
  1369  05C3  1787               	bsf	7,7	;volatile
  1370  05C4                     l819:
  1371                           
  1372                           ;LED GLOW USING COUNT USING BUTTON.c: 53:     _delay((unsigned long)((50)*(4000000/40000
      +                          00.0)));
  1373  05C4  3010               	movlw	16
  1374  05C5  00F0               	movwf	??_pulse
  1375  05C6                     u597:
  1376  05C6  0BF0               	decfsz	??_pulse,f
  1377  05C7  2DC6               	goto	u597
  1378  05C8  0000               	nop
  1379  05C9                     l821:
  1380                           
  1381                           ;LED GLOW USING COUNT USING BUTTON.c: 54:     RC7=0;
  1382  05C9  1283               	bcf	3,5	;RP0=0, select bank0
  1383  05CA  1303               	bcf	3,6	;RP1=0, select bank0
  1384  05CB  1387               	bcf	7,7	;volatile
  1385                           
  1386                           ;LED GLOW USING COUNT USING BUTTON.c: 55:     _delay((unsigned long)((50)*(4000000/40000
      +                          00.0)));
  1387  05CC  3010               	movlw	16
  1388  05CD  00F0               	movwf	??_pulse
  1389  05CE                     u607:
  1390  05CE  0BF0               	decfsz	??_pulse,f
  1391  05CF  2DCE               	goto	u607
  1392  05D0  0000               	nop
  1393  05D1                     l57:
  1394  05D1  0008               	return
  1395  05D2                     __end_of_pulse:
  1396  007E                     btemp	set	126	;btemp
  1397  007E                     wtemp0	set	126

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      14
    BANK0            80     12      14
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _display->___awdiv
    ___awdiv->___awmod
    _LCD->_pulse

Critical Paths under _main in BANK0

    _main->_display
    _display->___awdiv

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    4126
                                _LCD
                            _display
                              _timer
 ---------------------------------------------------------------------------------
 (1) _timer                                                7     5      2     147
                                              0 COMMON     7     5      2
 ---------------------------------------------------------------------------------
 (1) _display                                              8     6      2    2697
                                              4 BANK0      8     6      2
                                _LCD
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     600
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     604
                                              7 COMMON     5     1      4
                                              0 BANK0      4     4      0
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _LCD                                                  6     2      4    1282
                                              1 COMMON     6     2      4
                              _pulse
 ---------------------------------------------------------------------------------
 (3) _pulse                                                1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD
     _pulse
   _display
     _LCD
     ___awdiv
       ___awmod (ARG)
     ___awmod
   _timer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      C       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      1C       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      C       E       5       17.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      1C      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Tue Mar 28 12:40:41 2023

                     l51 07E5                       l60 05FA                       l44 07DD  
                     l45 07D7                       l71 076E                       l64 0600  
                     l57 05D1                       l49 07E1                       l68 062C  
           ___awdiv@sign 0021                      l310 06EE                      l323 0685  
                    l821 05C9                      l901 0664                      l831 05F5  
                    l823 05D2                      l911 0681                      l903 066A  
                    l817 05C1                      l825 05DD                      l841 0694  
                    l833 0686                      l905 0671                      l921 075B  
                    l819 05C4                      l827 05EB                      l851 06A9  
                    l843 0698                      l835 0689                      l907 0677  
                    l915 06EF                      l931 0616                      l923 05FB  
                    l829 05F0                      l861 06CC                      l853 06AC  
                    l845 069D                      l837 068D                      l909 067C  
                    l917 0737                      l933 061C                      l925 0604  
                    l941 0776                      l871 06E5                      l863 06D2  
                    l855 06B3                      l847 06A1                      l839 0692  
                    l919 0748                      l927 060A                      l935 061E  
                    l951 0790                      l943 0779                      l873 06EA  
                    l865 06D3                      l857 06B7                      l849 06A3  
                    l881 0632                      l929 060F                      l961 07C6  
                    l953 079C                      l945 077C                      l937 076F  
                    l867 06DA                      l859 06BB                      l891 0648  
                    l883 0637                      l963 07CC                      l955 07A8  
                    l947 0780                      l939 0773                      l869 06E0  
                    l893 064B                      l885 0639                      l877 062D  
                    l957 07B4                      l949 0784                      l895 0652  
                    l887 063D                      l879 062E                      l967 07E6  
                    l959 07BA                      l897 0656                      l889 0642  
                    l969 07EF                      l899 065A                      _LCD 05D2  
                    _RC0 0038                      _RC3 003B                      _RC4 003C  
                    _RC5 003D                      _RC6 003E                      _RC7 003F  
                    u300 05D9                      u301 05D5                      u314 05DC  
                    u410 06E0                      u330 068D                      u411 06DF  
                    u331 068C                      u420 06E5                      u340 0698  
                    u500 0677                      u325 05E3                      u421 06E4  
                    u405 06D4                      u341 0697                      u501 0676  
                    u350 06A9                      u510 067C                      u430 0632  
                    u351 06A8                      u511 067B                      u431 0631  
                    u440 063D                      u520 0604                      u441 063C  
                    u521 0603                      u370 06BB                      u450 0648  
                    u530 0616                      u371 06BA                      u451 0647  
                    u531 0615                      u540 062C                      u365 06AD  
                    u541 062B                      u390 06CC                      u470 065A  
                    u550 07BA                      u607 05CE                      u391 06CB  
                    u471 0659                      u551 07B9                      u480 0664  
                    u560 07DD                      u385 06BC                      u481 0663  
                    u465 064C                      u545 0628                      u561 07DC  
                    u570 07E1                      u395 06C8                      u571 07E0  
                    u580 07E5                      u485 0660                      u581 07E4  
                    u495 066B                      u597 05C6             ___awmod@sign 0076  
                   LCD@g 0071                     LCD@h 0073                     ?_LCD 0071  
                   _T0IF 005A                     _TMR0 0001                     _main 076F  
                   btemp 007E                     start 0000                    ??_LCD 0075  
                  ?_main 0070          __end_of___awdiv 06EF          __end_of___awmod 0686  
        ___awdiv@divisor 0077          ___awdiv@counter 0020                    _PORTC 0007  
                  _PORTD 0008                    _TRISC 0087                    _TRISD 0088  
        __end_of_display 076F                    _count 007C                    _timer 05FB  
                  _pulse 05C1                    status 0003                    wtemp0 007E  
        __initialization 07F6             __end_of_main 07F6                   ??_main 007C  
       ___awdiv@dividend 0079                   ?_timer 0070                   ?_pulse 0070  
              ??___awdiv 007B                ??___awmod 0074                   _count1 002C  
       ___awdiv@quotient 0022          ___awmod@divisor 0070          ___awmod@counter 0075  
              ??_display 007C                   timer@m 0070  __end_of__initialization 07FC  
         __pcstackCOMMON 0070            __end_of_timer 062D            __end_of_pulse 05D2  
                ??_timer 0072                  ??_pulse 0070               __pbssBANK0 002C  
             __pmaintext 076F                  ___awdiv 0686                  ___awmod 062D  
                __ptext1 05FB                  __ptext2 06EF                  __ptext3 062D  
                __ptext4 0686                  __ptext5 05D2                  __ptext6 05C1  
                _display 06EF             __size_of_LCD 0029         ___awmod@dividend 0072  
   end_of_initialization 07FC      start_initialization 07F6              __end_of_LCD 05FB  
            __pbssCOMMON 007C                ___latbits 0002            __pcstackBANK0 0020  
               ?___awdiv 0077                 ?___awmod 0070                 ?_display 0024  
         __size_of_timer 0032           __size_of_pulse 0011         __size_of___awdiv 0069  
       __size_of___awmod 0059         __size_of_display 0080            __size_of_main 0087  
              timer@time 0073                 display@a 0026                 display@b 0028  
               display@c 002A                 display@k 0024                 timer@cnt 0075  
             _OPTION_REG 0081  
