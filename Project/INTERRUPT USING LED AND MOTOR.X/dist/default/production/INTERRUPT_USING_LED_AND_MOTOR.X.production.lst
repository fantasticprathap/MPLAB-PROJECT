

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Thu Mar 30 12:25:03 2023

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	intentry,global,class=CODE,delta=2
    10                           	dabs	1,0x7E,2
    11  0000                     
    12                           ; Version 2.20
    13                           ; Generated 12/02/2020 GMT
    14                           ; 
    15                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    16                           ; All rights reserved.
    17                           ; 
    18                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    19                           ; 
    20                           ; Redistribution and use in source and binary forms, with or without modification, are
    21                           ; permitted provided that the following conditions are met:
    22                           ; 
    23                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    24                           ;        conditions and the following disclaimer.
    25                           ; 
    26                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    27                           ;        of conditions and the following disclaimer in the documentation and/or other
    28                           ;        materials provided with the distribution.
    29                           ; 
    30                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    31                           ;        software without specific prior written permission.
    32                           ; 
    33                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    34                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    35                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    36                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    37                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    38                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    39                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    40                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    41                           ; 
    42                           ; 
    43                           ; Code-generator required, PIC16F887 Definitions
    44                           ; 
    45                           ; SFR Addresses
    46  0000                     	;# 
    47  0001                     	;# 
    48  0002                     	;# 
    49  0003                     	;# 
    50  0004                     	;# 
    51  0005                     	;# 
    52  0006                     	;# 
    53  0007                     	;# 
    54  0008                     	;# 
    55  0009                     	;# 
    56  000A                     	;# 
    57  000B                     	;# 
    58  000C                     	;# 
    59  000D                     	;# 
    60  000E                     	;# 
    61  000E                     	;# 
    62  000F                     	;# 
    63  0010                     	;# 
    64  0011                     	;# 
    65  0012                     	;# 
    66  0013                     	;# 
    67  0014                     	;# 
    68  0015                     	;# 
    69  0015                     	;# 
    70  0016                     	;# 
    71  0017                     	;# 
    72  0018                     	;# 
    73  0019                     	;# 
    74  001A                     	;# 
    75  001B                     	;# 
    76  001B                     	;# 
    77  001C                     	;# 
    78  001D                     	;# 
    79  001E                     	;# 
    80  001F                     	;# 
    81  0081                     	;# 
    82  0085                     	;# 
    83  0086                     	;# 
    84  0087                     	;# 
    85  0088                     	;# 
    86  0089                     	;# 
    87  008C                     	;# 
    88  008D                     	;# 
    89  008E                     	;# 
    90  008F                     	;# 
    91  0090                     	;# 
    92  0091                     	;# 
    93  0092                     	;# 
    94  0093                     	;# 
    95  0093                     	;# 
    96  0093                     	;# 
    97  0094                     	;# 
    98  0095                     	;# 
    99  0096                     	;# 
   100  0097                     	;# 
   101  0098                     	;# 
   102  0099                     	;# 
   103  009A                     	;# 
   104  009B                     	;# 
   105  009C                     	;# 
   106  009D                     	;# 
   107  009E                     	;# 
   108  009F                     	;# 
   109  0105                     	;# 
   110  0107                     	;# 
   111  0108                     	;# 
   112  0109                     	;# 
   113  010C                     	;# 
   114  010C                     	;# 
   115  010D                     	;# 
   116  010E                     	;# 
   117  010F                     	;# 
   118  0185                     	;# 
   119  0187                     	;# 
   120  0188                     	;# 
   121  0189                     	;# 
   122  018C                     	;# 
   123  018D                     	;# 
   124  0000                     	;# 
   125  0001                     	;# 
   126  0002                     	;# 
   127  0003                     	;# 
   128  0004                     	;# 
   129  0005                     	;# 
   130  0006                     	;# 
   131  0007                     	;# 
   132  0008                     	;# 
   133  0009                     	;# 
   134  000A                     	;# 
   135  000B                     	;# 
   136  000C                     	;# 
   137  000D                     	;# 
   138  000E                     	;# 
   139  000E                     	;# 
   140  000F                     	;# 
   141  0010                     	;# 
   142  0011                     	;# 
   143  0012                     	;# 
   144  0013                     	;# 
   145  0014                     	;# 
   146  0015                     	;# 
   147  0015                     	;# 
   148  0016                     	;# 
   149  0017                     	;# 
   150  0018                     	;# 
   151  0019                     	;# 
   152  001A                     	;# 
   153  001B                     	;# 
   154  001B                     	;# 
   155  001C                     	;# 
   156  001D                     	;# 
   157  001E                     	;# 
   158  001F                     	;# 
   159  0081                     	;# 
   160  0085                     	;# 
   161  0086                     	;# 
   162  0087                     	;# 
   163  0088                     	;# 
   164  0089                     	;# 
   165  008C                     	;# 
   166  008D                     	;# 
   167  008E                     	;# 
   168  008F                     	;# 
   169  0090                     	;# 
   170  0091                     	;# 
   171  0092                     	;# 
   172  0093                     	;# 
   173  0093                     	;# 
   174  0093                     	;# 
   175  0094                     	;# 
   176  0095                     	;# 
   177  0096                     	;# 
   178  0097                     	;# 
   179  0098                     	;# 
   180  0099                     	;# 
   181  009A                     	;# 
   182  009B                     	;# 
   183  009C                     	;# 
   184  009D                     	;# 
   185  009E                     	;# 
   186  009F                     	;# 
   187  0105                     	;# 
   188  0107                     	;# 
   189  0108                     	;# 
   190  0109                     	;# 
   191  010C                     	;# 
   192  010C                     	;# 
   193  010D                     	;# 
   194  010E                     	;# 
   195  010F                     	;# 
   196  0185                     	;# 
   197  0187                     	;# 
   198  0188                     	;# 
   199  0189                     	;# 
   200  018C                     	;# 
   201  018D                     	;# 
   202  000B                     _INTCON	set	11
   203  0007                     _PORTC	set	7
   204  0006                     _PORTB	set	6
   205  0039                     _RC1	set	57
   206  0038                     _RC0	set	56
   207  0059                     _INTF	set	89
   208  0087                     _TRISC	set	135
   209  0086                     _TRISB	set	134
   210  0189                     _ANSELH	set	393
   211  0188                     _ANSEL	set	392
   212                           
   213                           	psect	cinit
   214  000F                     start_initialization:	
   215                           ; #config settings
   216                           
   217  000F                     __initialization:
   218                           
   219                           ; Clear objects allocated to COMMON
   220  000F  01F0               	clrf	__pbssCOMMON& (0+127)
   221  0010  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   222  0011                     end_of_initialization:	
   223                           ;End of C runtime variable initialization code
   224                           
   225  0011                     __end_of__initialization:
   226  0011  0183               	clrf	3
   227  0012  120A  118A  2815   	ljmp	_main	;jump to C main() function
   228                           
   229                           	psect	bssCOMMON
   230  0070                     __pbssCOMMON:
   231  0070                     _flag:
   232  0070                     	ds	2
   233                           
   234                           	psect	cstackCOMMON
   235  0072                     __pcstackCOMMON:
   236  0072                     ?_itr:
   237  0072                     ??_itr:	
   238                           ; 1 bytes @ 0x0
   239                           
   240  0072                     ?_main:	
   241                           ; 1 bytes @ 0x0
   242                           
   243                           
   244                           ; 1 bytes @ 0x0
   245  0072                     	ds	2
   246  0074                     ??_main:
   247                           
   248                           	psect	maintext
   249  0015                     __pmaintext:	
   250                           ; 1 bytes @ 0x2
   251 ;;
   252 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   253 ;;
   254 ;; *************** function _main *****************
   255 ;; Defined at:
   256 ;;		line 19 in file "INTERRUPT USING LED AND MOTOR.c"
   257 ;; Parameters:    Size  Location     Type
   258 ;;		None
   259 ;; Auto vars:     Size  Location     Type
   260 ;;		None
   261 ;; Return value:  Size  Location     Type
   262 ;;                  1    wreg      void 
   263 ;; Registers used:
   264 ;;		wreg, status,2, status,0
   265 ;; Tracked objects:
   266 ;;		On entry : B00/0
   267 ;;		On exit  : 0/0
   268 ;;		Unchanged: 0/0
   269 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   270 ;;      Params:         0       0       0       0       0
   271 ;;      Locals:         0       0       0       0       0
   272 ;;      Temps:          0       0       0       0       0
   273 ;;      Totals:         0       0       0       0       0
   274 ;;Total ram usage:        0 bytes
   275 ;; Hardware stack levels required when called: 1
   276 ;; This function calls:
   277 ;;		Nothing
   278 ;; This function is called by:
   279 ;;		Startup code after reset
   280 ;; This function uses a non-reentrant model
   281 ;;
   282                           
   283                           
   284                           ;psect for function _main
   285  0015                     _main:
   286  0015                     l636:	
   287                           ;incstack = 0
   288                           ; Regs used in _main: [wreg+status,2+status,0]
   289                           
   290                           
   291                           ;INTERRUPT USING LED AND MOTOR.c: 21:     TRISB=0X01;
   292  0015  3001               	movlw	1
   293  0016  1683               	bsf	3,5	;RP0=1, select bank1
   294  0017  1303               	bcf	3,6	;RP1=0, select bank1
   295  0018  0086               	movwf	6	;volatile
   296  0019                     l638:
   297                           
   298                           ;INTERRUPT USING LED AND MOTOR.c: 22:     PORTB=0X00;
   299  0019  1283               	bcf	3,5	;RP0=0, select bank0
   300  001A  1303               	bcf	3,6	;RP1=0, select bank0
   301  001B  0186               	clrf	6	;volatile
   302  001C                     l640:
   303                           
   304                           ;INTERRUPT USING LED AND MOTOR.c: 23:     TRISC=0X00;
   305  001C  1683               	bsf	3,5	;RP0=1, select bank1
   306  001D  1303               	bcf	3,6	;RP1=0, select bank1
   307  001E  0187               	clrf	7	;volatile
   308  001F                     l642:
   309                           
   310                           ;INTERRUPT USING LED AND MOTOR.c: 24:     PORTC=0X00;
   311  001F  1283               	bcf	3,5	;RP0=0, select bank0
   312  0020  1303               	bcf	3,6	;RP1=0, select bank0
   313  0021  0187               	clrf	7	;volatile
   314  0022                     l644:
   315                           
   316                           ;INTERRUPT USING LED AND MOTOR.c: 25:     ANSEL=0X00;
   317  0022  1683               	bsf	3,5	;RP0=1, select bank3
   318  0023  1703               	bsf	3,6	;RP1=1, select bank3
   319  0024  0188               	clrf	8	;volatile
   320  0025                     l646:
   321                           
   322                           ;INTERRUPT USING LED AND MOTOR.c: 26:     ANSELH=0X00;
   323  0025  0189               	clrf	9	;volatile
   324  0026                     l648:
   325                           
   326                           ;INTERRUPT USING LED AND MOTOR.c: 27:     INTCON=0b11010000;
   327  0026  30D0               	movlw	208
   328  0027  008B               	movwf	11	;volatile
   329  0028                     l650:
   330                           
   331                           ;INTERRUPT USING LED AND MOTOR.c: 32:     {;INTERRUPT USING LED AND MOTOR.c: 33:        
      +                           if (flag==1)
   332  0028  0370               	decf	_flag,w
   333  0029  0471               	iorwf	_flag+1,w
   334  002A  1D03               	btfss	3,2
   335  002B  282D               	goto	u21
   336  002C  282E               	goto	u20
   337  002D                     u21:
   338  002D  2832               	goto	l654
   339  002E                     u20:
   340  002E                     l652:
   341                           
   342                           ;INTERRUPT USING LED AND MOTOR.c: 34:         {;INTERRUPT USING LED AND MOTOR.c: 35:    
      +                                   RC0=1;
   343  002E  1283               	bcf	3,5	;RP0=0, select bank0
   344  002F  1303               	bcf	3,6	;RP1=0, select bank0
   345  0030  1407               	bsf	7,0	;volatile
   346                           
   347                           ;INTERRUPT USING LED AND MOTOR.c: 36:             RC1=0;
   348  0031  1087               	bcf	7,1	;volatile
   349  0032                     l654:
   350                           
   351                           ;INTERRUPT USING LED AND MOTOR.c: 38:         if (flag==0)
   352  0032  0870               	movf	_flag,w
   353  0033  0471               	iorwf	_flag+1,w
   354  0034  1D03               	btfss	3,2
   355  0035  2837               	goto	u31
   356  0036  2838               	goto	u30
   357  0037                     u31:
   358  0037  2828               	goto	l650
   359  0038                     u30:
   360  0038                     l656:
   361                           
   362                           ;INTERRUPT USING LED AND MOTOR.c: 39:         {;INTERRUPT USING LED AND MOTOR.c: 40:    
      +                                   RC0=0;
   363  0038  1283               	bcf	3,5	;RP0=0, select bank0
   364  0039  1303               	bcf	3,6	;RP1=0, select bank0
   365  003A  1007               	bcf	7,0	;volatile
   366                           
   367                           ;INTERRUPT USING LED AND MOTOR.c: 41:             RC1=1;
   368  003B  1487               	bsf	7,1	;volatile
   369  003C  2828               	goto	l650
   370  003D  120A  118A  280C   	ljmp	start
   371  0040                     __end_of_main:
   372                           
   373                           	psect	text1
   374  0040                     __ptext1:	
   375 ;; *************** function _itr *****************
   376 ;; Defined at:
   377 ;;		line 11 in file "INTERRUPT USING LED AND MOTOR.c"
   378 ;; Parameters:    Size  Location     Type
   379 ;;		None
   380 ;; Auto vars:     Size  Location     Type
   381 ;;		None
   382 ;; Return value:  Size  Location     Type
   383 ;;                  1    wreg      void 
   384 ;; Registers used:
   385 ;;		wreg
   386 ;; Tracked objects:
   387 ;;		On entry : 0/0
   388 ;;		On exit  : 0/0
   389 ;;		Unchanged: 0/0
   390 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   391 ;;      Params:         0       0       0       0       0
   392 ;;      Locals:         0       0       0       0       0
   393 ;;      Temps:          2       0       0       0       0
   394 ;;      Totals:         2       0       0       0       0
   395 ;;Total ram usage:        2 bytes
   396 ;; Hardware stack levels used: 1
   397 ;; This function calls:
   398 ;;		Nothing
   399 ;; This function is called by:
   400 ;;		Interrupt level 1
   401 ;; This function uses a non-reentrant model
   402 ;;
   403                           
   404                           
   405                           ;psect for function _itr
   406  0040                     _itr:
   407  0040                     i1l630:
   408                           
   409                           ;INTERRUPT USING LED AND MOTOR.c: 13:     if (INTF==1)
   410  0040  1C8B               	btfss	11,1	;volatile
   411  0041  2843               	goto	u1_21
   412  0042  2844               	goto	u1_20
   413  0043                     u1_21:
   414  0043  284B               	goto	i1l28
   415  0044                     u1_20:
   416  0044                     i1l632:
   417                           
   418                           ;INTERRUPT USING LED AND MOTOR.c: 14:     {;INTERRUPT USING LED AND MOTOR.c: 15:        
      +                           flag=flag^1;
   419  0044  3001               	movlw	1
   420  0045  0670               	xorwf	_flag,w
   421  0046  00F0               	movwf	_flag
   422  0047  3000               	movlw	0
   423  0048  0671               	xorwf	_flag+1,w
   424  0049  00F1               	movwf	_flag+1
   425  004A                     i1l634:
   426                           
   427                           ;INTERRUPT USING LED AND MOTOR.c: 16:         INTF=0;
   428  004A  108B               	bcf	11,1	;volatile
   429  004B                     i1l28:
   430  004B  0873               	movf	??_itr+1,w
   431  004C  008A               	movwf	10
   432  004D  0E72               	swapf	??_itr,w
   433  004E  0083               	movwf	3
   434  004F  0EFE               	swapf	btemp,f
   435  0050  0E7E               	swapf	btemp,w
   436  0051  0009               	retfie
   437  0052                     __end_of_itr:
   438  007E                     btemp	set	126	;btemp
   439  007E                     wtemp0	set	126
   440                           
   441                           	psect	intentry
   442  0004                     __pintentry:	
   443                           ;incstack = 0
   444                           ; Regs used in _itr: [wreg]
   445                           
   446  0004                     interrupt_function:
   447  007E                     saved_w	set	btemp
   448  0004  00FE               	movwf	btemp
   449  0005  0E03               	swapf	3,w
   450  0006  00F2               	movwf	??_itr
   451  0007  080A               	movf	10,w
   452  0008  00F3               	movwf	??_itr+1
   453  0009  120A  118A  2840   	ljmp	_itr

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      2       4
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _itr in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _itr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _itr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _itr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _itr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _itr                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 _itr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      2       4       1       28.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       4       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       4      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Thu Mar 30 12:25:03 2023

                     u20 002E                       u21 002D                       u30 0038  
                     u31 0037                      l640 001C                      l650 0028  
                    l642 001F                      l652 002E                      l644 0022  
                    l636 0015                      l654 0032                      l646 0025  
                    l638 0019                      l656 0038                      l648 0026  
                    _RC0 0038                      _RC1 0039                      _itr 0040  
                   ?_itr 0072                     _INTF 0059                     i1l28 004B  
                   u1_20 0044                     u1_21 0043                     _flag 0070  
                   _main 0015                     btemp 007E                     start 000C  
                  ??_itr 0072                    ?_main 0072                    _ANSEL 0188  
                  i1l630 0040                    i1l632 0044                    i1l634 004A  
                  _PORTB 0006                    _PORTC 0007                    _TRISB 0086  
                  _TRISC 0087                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 000F             __end_of_main 0040  
                 ??_main 0074                   _ANSELH 0189                   _INTCON 000B  
                 saved_w 007E  __end_of__initialization 0011           __pcstackCOMMON 0072  
             __pmaintext 0015               __pintentry 0004                  __ptext1 0040  
           __size_of_itr 0012     end_of_initialization 0011      start_initialization 000F  
            __end_of_itr 0052              __pbssCOMMON 0070                ___latbits 0002  
      interrupt_function 0004            __size_of_main 002B                 intlevel1 0000  
