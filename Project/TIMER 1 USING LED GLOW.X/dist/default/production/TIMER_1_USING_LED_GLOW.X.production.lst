

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Tue Mar 28 18:16:34 2023

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    13                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	dabs	1,0x7E,2
    17  0000                     
    18                           ; Version 2.20
    19                           ; Generated 12/02/2020 GMT
    20                           ; 
    21                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    22                           ; All rights reserved.
    23                           ; 
    24                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    25                           ; 
    26                           ; Redistribution and use in source and binary forms, with or without modification, are
    27                           ; permitted provided that the following conditions are met:
    28                           ; 
    29                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    30                           ;        conditions and the following disclaimer.
    31                           ; 
    32                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    33                           ;        of conditions and the following disclaimer in the documentation and/or other
    34                           ;        materials provided with the distribution.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC16F887 Definitions
    50                           ; 
    51                           ; SFR Addresses
    52  0000                     	;# 
    53  0001                     	;# 
    54  0002                     	;# 
    55  0003                     	;# 
    56  0004                     	;# 
    57  0005                     	;# 
    58  0006                     	;# 
    59  0007                     	;# 
    60  0008                     	;# 
    61  0009                     	;# 
    62  000A                     	;# 
    63  000B                     	;# 
    64  000C                     	;# 
    65  000D                     	;# 
    66  000E                     	;# 
    67  000E                     	;# 
    68  000F                     	;# 
    69  0010                     	;# 
    70  0011                     	;# 
    71  0012                     	;# 
    72  0013                     	;# 
    73  0014                     	;# 
    74  0015                     	;# 
    75  0015                     	;# 
    76  0016                     	;# 
    77  0017                     	;# 
    78  0018                     	;# 
    79  0019                     	;# 
    80  001A                     	;# 
    81  001B                     	;# 
    82  001B                     	;# 
    83  001C                     	;# 
    84  001D                     	;# 
    85  001E                     	;# 
    86  001F                     	;# 
    87  0081                     	;# 
    88  0085                     	;# 
    89  0086                     	;# 
    90  0087                     	;# 
    91  0088                     	;# 
    92  0089                     	;# 
    93  008C                     	;# 
    94  008D                     	;# 
    95  008E                     	;# 
    96  008F                     	;# 
    97  0090                     	;# 
    98  0091                     	;# 
    99  0092                     	;# 
   100  0093                     	;# 
   101  0093                     	;# 
   102  0093                     	;# 
   103  0094                     	;# 
   104  0095                     	;# 
   105  0096                     	;# 
   106  0097                     	;# 
   107  0098                     	;# 
   108  0099                     	;# 
   109  009A                     	;# 
   110  009B                     	;# 
   111  009C                     	;# 
   112  009D                     	;# 
   113  009E                     	;# 
   114  009F                     	;# 
   115  0105                     	;# 
   116  0107                     	;# 
   117  0108                     	;# 
   118  0109                     	;# 
   119  010C                     	;# 
   120  010C                     	;# 
   121  010D                     	;# 
   122  010E                     	;# 
   123  010F                     	;# 
   124  0185                     	;# 
   125  0187                     	;# 
   126  0188                     	;# 
   127  0189                     	;# 
   128  018C                     	;# 
   129  018D                     	;# 
   130  0000                     	;# 
   131  0001                     	;# 
   132  0002                     	;# 
   133  0003                     	;# 
   134  0004                     	;# 
   135  0005                     	;# 
   136  0006                     	;# 
   137  0007                     	;# 
   138  0008                     	;# 
   139  0009                     	;# 
   140  000A                     	;# 
   141  000B                     	;# 
   142  000C                     	;# 
   143  000D                     	;# 
   144  000E                     	;# 
   145  000E                     	;# 
   146  000F                     	;# 
   147  0010                     	;# 
   148  0011                     	;# 
   149  0012                     	;# 
   150  0013                     	;# 
   151  0014                     	;# 
   152  0015                     	;# 
   153  0015                     	;# 
   154  0016                     	;# 
   155  0017                     	;# 
   156  0018                     	;# 
   157  0019                     	;# 
   158  001A                     	;# 
   159  001B                     	;# 
   160  001B                     	;# 
   161  001C                     	;# 
   162  001D                     	;# 
   163  001E                     	;# 
   164  001F                     	;# 
   165  0081                     	;# 
   166  0085                     	;# 
   167  0086                     	;# 
   168  0087                     	;# 
   169  0088                     	;# 
   170  0089                     	;# 
   171  008C                     	;# 
   172  008D                     	;# 
   173  008E                     	;# 
   174  008F                     	;# 
   175  0090                     	;# 
   176  0091                     	;# 
   177  0092                     	;# 
   178  0093                     	;# 
   179  0093                     	;# 
   180  0093                     	;# 
   181  0094                     	;# 
   182  0095                     	;# 
   183  0096                     	;# 
   184  0097                     	;# 
   185  0098                     	;# 
   186  0099                     	;# 
   187  009A                     	;# 
   188  009B                     	;# 
   189  009C                     	;# 
   190  009D                     	;# 
   191  009E                     	;# 
   192  009F                     	;# 
   193  0105                     	;# 
   194  0107                     	;# 
   195  0108                     	;# 
   196  0109                     	;# 
   197  010C                     	;# 
   198  010C                     	;# 
   199  010D                     	;# 
   200  010E                     	;# 
   201  010F                     	;# 
   202  0185                     	;# 
   203  0187                     	;# 
   204  0188                     	;# 
   205  0189                     	;# 
   206  018C                     	;# 
   207  018D                     	;# 
   208  000E                     _TMR1	set	14
   209  0010                     _T1CON	set	16
   210  0008                     _PORTD	set	8
   211  0007                     _PORTC	set	7
   212  0060                     _TMR1IF	set	96
   213  003B                     _RC3	set	59
   214  003A                     _RC2	set	58
   215  003C                     _RC4	set	60
   216  003D                     _RC5	set	61
   217  0039                     _RC1	set	57
   218  0038                     _RC0	set	56
   219  0088                     _TRISD	set	136
   220  0087                     _TRISC	set	135
   221                           
   222                           	psect	cinit
   223  07F6                     start_initialization:	
   224                           ; #config settings
   225                           
   226  07F6                     __initialization:
   227                           
   228                           ; Clear objects allocated to COMMON
   229  07F6  01FC               	clrf	__pbssCOMMON& (0+127)
   230  07F7  01FD               	clrf	(__pbssCOMMON+1)& (0+127)
   231                           
   232                           ; Clear objects allocated to BANK0
   233  07F8  1283               	bcf	3,5	;RP0=0, select bank0
   234  07F9  1303               	bcf	3,6	;RP1=0, select bank0
   235  07FA  01AC               	clrf	__pbssBANK0& (0+127)
   236  07FB  01AD               	clrf	(__pbssBANK0+1)& (0+127)
   237  07FC                     end_of_initialization:	
   238                           ;End of C runtime variable initialization code
   239                           
   240  07FC                     __end_of__initialization:
   241  07FC  0183               	clrf	3
   242  07FD  120A  118A  2F71   	ljmp	_main	;jump to C main() function
   243                           
   244                           	psect	bssCOMMON
   245  007C                     __pbssCOMMON:
   246  007C                     _count:
   247  007C                     	ds	2
   248                           
   249                           	psect	bssBANK0
   250  002C                     __pbssBANK0:
   251  002C                     _count1:
   252  002C                     	ds	2
   253                           
   254                           	psect	cstackCOMMON
   255  0070                     __pcstackCOMMON:
   256  0070                     ?_timer:
   257  0070                     ?_main:	
   258                           ; 1 bytes @ 0x0
   259                           
   260  0070                     ?_pulse:	
   261                           ; 1 bytes @ 0x0
   262                           
   263  0070                     ??_pulse:	
   264                           ; 1 bytes @ 0x0
   265                           
   266  0070                     ?___awmod:	
   267                           ; 1 bytes @ 0x0
   268                           
   269  0070                     timer@m:	
   270                           ; 2 bytes @ 0x0
   271                           
   272  0070                     ___awmod@divisor:	
   273                           ; 2 bytes @ 0x0
   274                           
   275                           
   276                           ; 2 bytes @ 0x0
   277  0070                     	ds	1
   278  0071                     ?_LCD:
   279  0071                     LCD@g:	
   280                           ; 1 bytes @ 0x1
   281                           
   282                           
   283                           ; 2 bytes @ 0x1
   284  0071                     	ds	1
   285  0072                     ??_timer:
   286  0072                     ___awmod@dividend:	
   287                           ; 1 bytes @ 0x2
   288                           
   289                           
   290                           ; 2 bytes @ 0x2
   291  0072                     	ds	1
   292  0073                     LCD@h:
   293  0073                     timer@time:	
   294                           ; 2 bytes @ 0x3
   295                           
   296                           
   297                           ; 2 bytes @ 0x3
   298  0073                     	ds	1
   299  0074                     ??___awmod:
   300                           
   301                           ; 1 bytes @ 0x4
   302  0074                     	ds	1
   303  0075                     ??_LCD:
   304  0075                     ___awmod@counter:	
   305                           ; 1 bytes @ 0x5
   306                           
   307  0075                     timer@cnt:	
   308                           ; 1 bytes @ 0x5
   309                           
   310                           
   311                           ; 2 bytes @ 0x5
   312  0075                     	ds	1
   313  0076                     ___awmod@sign:
   314                           
   315                           ; 1 bytes @ 0x6
   316  0076                     	ds	1
   317  0077                     ?___awdiv:
   318  0077                     ___awdiv@divisor:	
   319                           ; 2 bytes @ 0x7
   320                           
   321                           
   322                           ; 2 bytes @ 0x7
   323  0077                     	ds	2
   324  0079                     ___awdiv@dividend:
   325                           
   326                           ; 2 bytes @ 0x9
   327  0079                     	ds	2
   328  007B                     ??___awdiv:
   329                           
   330                           ; 1 bytes @ 0xB
   331  007B                     	ds	1
   332  007C                     ??_display:
   333  007C                     ??_main:	
   334                           ; 1 bytes @ 0xC
   335                           
   336                           
   337                           	psect	cstackBANK0
   338  0020                     __pcstackBANK0:	
   339                           ; 1 bytes @ 0xC
   340                           
   341  0020                     ___awdiv@counter:
   342                           
   343                           ; 1 bytes @ 0x0
   344  0020                     	ds	1
   345  0021                     ___awdiv@sign:
   346                           
   347                           ; 1 bytes @ 0x1
   348  0021                     	ds	1
   349  0022                     ___awdiv@quotient:
   350                           
   351                           ; 2 bytes @ 0x2
   352  0022                     	ds	2
   353  0024                     ?_display:
   354  0024                     display@k:	
   355                           ; 1 bytes @ 0x4
   356                           
   357                           
   358                           ; 2 bytes @ 0x4
   359  0024                     	ds	2
   360  0026                     display@a:
   361                           
   362                           ; 2 bytes @ 0x6
   363  0026                     	ds	2
   364  0028                     display@b:
   365                           
   366                           ; 2 bytes @ 0x8
   367  0028                     	ds	2
   368  002A                     display@c:
   369                           
   370                           ; 2 bytes @ 0xA
   371  002A                     	ds	2
   372                           
   373                           	psect	maintext
   374  0771                     __pmaintext:	
   375 ;;
   376 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   377 ;;
   378 ;; *************** function _main *****************
   379 ;; Defined at:
   380 ;;		line 20 in file "TIMER 1 USING LED GLOW.c"
   381 ;; Parameters:    Size  Location     Type
   382 ;;		None
   383 ;; Auto vars:     Size  Location     Type
   384 ;;		None
   385 ;; Return value:  Size  Location     Type
   386 ;;                  1    wreg      void 
   387 ;; Registers used:
   388 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   389 ;; Tracked objects:
   390 ;;		On entry : B00/0
   391 ;;		On exit  : 0/0
   392 ;;		Unchanged: 0/0
   393 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   394 ;;      Params:         0       0       0       0       0
   395 ;;      Locals:         0       0       0       0       0
   396 ;;      Temps:          0       0       0       0       0
   397 ;;      Totals:         0       0       0       0       0
   398 ;;Total ram usage:        0 bytes
   399 ;; Hardware stack levels required when called: 3
   400 ;; This function calls:
   401 ;;		_LCD
   402 ;;		_display
   403 ;;		_timer
   404 ;; This function is called by:
   405 ;;		Startup code after reset
   406 ;; This function uses a non-reentrant model
   407 ;;
   408                           
   409                           
   410                           ;psect for function _main
   411  0771                     _main:
   412  0771                     l941:	
   413                           ;incstack = 0
   414                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   415                           
   416                           
   417                           ;TIMER 1 USING LED GLOW.c: 22:     TRISC=0X03;
   418  0771  3003               	movlw	3
   419  0772  1683               	bsf	3,5	;RP0=1, select bank1
   420  0773  1303               	bcf	3,6	;RP1=0, select bank1
   421  0774  0087               	movwf	7	;volatile
   422  0775                     l943:
   423                           
   424                           ;TIMER 1 USING LED GLOW.c: 23:     PORTC=0X00;
   425  0775  1283               	bcf	3,5	;RP0=0, select bank0
   426  0776  1303               	bcf	3,6	;RP1=0, select bank0
   427  0777  0187               	clrf	7	;volatile
   428  0778                     l945:
   429                           
   430                           ;TIMER 1 USING LED GLOW.c: 24:     TRISD=0X00;
   431  0778  1683               	bsf	3,5	;RP0=1, select bank1
   432  0779  1303               	bcf	3,6	;RP1=0, select bank1
   433  077A  0188               	clrf	8	;volatile
   434  077B                     l947:
   435                           
   436                           ;TIMER 1 USING LED GLOW.c: 25:     PORTD=0X00;
   437  077B  1283               	bcf	3,5	;RP0=0, select bank0
   438  077C  1303               	bcf	3,6	;RP1=0, select bank0
   439  077D  0188               	clrf	8	;volatile
   440  077E                     l949:
   441                           
   442                           ;TIMER 1 USING LED GLOW.c: 26:     TMR1=55536;
   443  077E  30D8               	movlw	216
   444  077F  008F               	movwf	15	;volatile
   445  0780  30F0               	movlw	240
   446  0781  008E               	movwf	14	;volatile
   447  0782                     l951:
   448                           
   449                           ;TIMER 1 USING LED GLOW.c: 27:     T1CON=0X11;
   450  0782  3011               	movlw	17
   451  0783  0090               	movwf	16	;volatile
   452  0784                     l953:
   453                           
   454                           ;TIMER 1 USING LED GLOW.c: 28:     LCD(0x02,0);
   455  0784  3002               	movlw	2
   456  0785  00F1               	movwf	LCD@g
   457  0786  3000               	movlw	0
   458  0787  00F2               	movwf	LCD@g+1
   459  0788  3000               	movlw	0
   460  0789  00F3               	movwf	LCD@h
   461  078A  00F4               	movwf	LCD@h+1
   462  078B  120A  118A  25D2  120A  118A  	fcall	_LCD
   463  0790                     l955:
   464                           
   465                           ;TIMER 1 USING LED GLOW.c: 29:     LCD(0X28,0);
   466  0790  3028               	movlw	40
   467  0791  00F1               	movwf	LCD@g
   468  0792  3000               	movlw	0
   469  0793  00F2               	movwf	LCD@g+1
   470  0794  3000               	movlw	0
   471  0795  00F3               	movwf	LCD@h
   472  0796  00F4               	movwf	LCD@h+1
   473  0797  120A  118A  25D2  120A  118A  	fcall	_LCD
   474  079C                     l957:
   475                           
   476                           ;TIMER 1 USING LED GLOW.c: 30:     LCD(0X0E,0);
   477  079C  300E               	movlw	14
   478  079D  00F1               	movwf	LCD@g
   479  079E  3000               	movlw	0
   480  079F  00F2               	movwf	LCD@g+1
   481  07A0  3000               	movlw	0
   482  07A1  00F3               	movwf	LCD@h
   483  07A2  00F4               	movwf	LCD@h+1
   484  07A3  120A  118A  25D2  120A  118A  	fcall	_LCD
   485  07A8                     l959:
   486                           
   487                           ;TIMER 1 USING LED GLOW.c: 31:     LCD(0X80,0);
   488  07A8  3080               	movlw	128
   489  07A9  00F1               	movwf	LCD@g
   490  07AA  3000               	movlw	0
   491  07AB  00F2               	movwf	LCD@g+1
   492  07AC  3000               	movlw	0
   493  07AD  00F3               	movwf	LCD@h
   494  07AE  00F4               	movwf	LCD@h+1
   495  07AF  120A  118A  25D2  120A  118A  	fcall	_LCD
   496  07B4                     l961:
   497                           
   498                           ;TIMER 1 USING LED GLOW.c: 33:     {;TIMER 1 USING LED GLOW.c: 34:         if (RC0==1)
   499  07B4  1283               	bcf	3,5	;RP0=0, select bank0
   500  07B5  1303               	bcf	3,6	;RP1=0, select bank0
   501  07B6  1C07               	btfss	7,0	;volatile
   502  07B7  2FB9               	goto	u551
   503  07B8  2FBA               	goto	u550
   504  07B9                     u551:
   505  07B9  2FDD               	goto	l44
   506  07BA                     u550:
   507  07BA                     l963:
   508                           
   509                           ;TIMER 1 USING LED GLOW.c: 35:         {;TIMER 1 USING LED GLOW.c: 36:             LCD(0
      +                          X80,0);
   510  07BA  3080               	movlw	128
   511  07BB  00F1               	movwf	LCD@g
   512  07BC  3000               	movlw	0
   513  07BD  00F2               	movwf	LCD@g+1
   514  07BE  3000               	movlw	0
   515  07BF  00F3               	movwf	LCD@h
   516  07C0  00F4               	movwf	LCD@h+1
   517  07C1  120A  118A  25D2  120A  118A  	fcall	_LCD
   518  07C6                     l965:
   519                           
   520                           ;TIMER 1 USING LED GLOW.c: 37:             count++;
   521  07C6  3001               	movlw	1
   522  07C7  07FC               	addwf	_count,f
   523  07C8  1803               	skipnc
   524  07C9  0AFD               	incf	_count+1,f
   525  07CA  3000               	movlw	0
   526  07CB  07FD               	addwf	_count+1,f
   527  07CC                     l967:
   528                           
   529                           ;TIMER 1 USING LED GLOW.c: 38:             display(count);
   530  07CC  087D               	movf	_count+1,w
   531  07CD  1283               	bcf	3,5	;RP0=0, select bank0
   532  07CE  1303               	bcf	3,6	;RP1=0, select bank0
   533  07CF  00A5               	movwf	display@k+1
   534  07D0  087C               	movf	_count,w
   535  07D1  00A4               	movwf	display@k
   536  07D2  120A  118A  26F1  120A  118A  	fcall	_display
   537  07D7                     l45:	
   538                           ;TIMER 1 USING LED GLOW.c: 39:             while(RC0==1);
   539                           
   540  07D7  1283               	bcf	3,5	;RP0=0, select bank0
   541  07D8  1303               	bcf	3,6	;RP1=0, select bank0
   542  07D9  1807               	btfsc	7,0	;volatile
   543  07DA  2FDC               	goto	u561
   544  07DB  2FDD               	goto	u560
   545  07DC                     u561:
   546  07DC  2FD7               	goto	l45
   547  07DD                     u560:
   548  07DD                     l44:	
   549                           ;TIMER 1 USING LED GLOW.c: 40:         }
   550                           
   551                           
   552                           ;TIMER 1 USING LED GLOW.c: 41:         if (RC1==1)
   553  07DD  1C87               	btfss	7,1	;volatile
   554  07DE  2FE0               	goto	u571
   555  07DF  2FE1               	goto	u570
   556  07E0                     u571:
   557  07E0  2FB4               	goto	l961
   558  07E1                     u570:
   559  07E1                     l49:
   560  07E1  1887               	btfsc	7,1	;volatile
   561  07E2  2FE4               	goto	u581
   562  07E3  2FE5               	goto	u580
   563  07E4                     u581:
   564  07E4  2FE1               	goto	l49
   565  07E5                     u580:
   566  07E5                     l51:
   567                           
   568                           ;TIMER 1 USING LED GLOW.c: 44:             RC5=1;
   569  07E5  1687               	bsf	7,5	;volatile
   570  07E6                     l971:
   571                           
   572                           ;TIMER 1 USING LED GLOW.c: 45:             timer(count);
   573  07E6  087D               	movf	_count+1,w
   574  07E7  00F1               	movwf	timer@m+1
   575  07E8  087C               	movf	_count,w
   576  07E9  00F0               	movwf	timer@m
   577  07EA  120A  118A  25FB  120A  118A  	fcall	_timer
   578  07EF                     l973:
   579                           
   580                           ;TIMER 1 USING LED GLOW.c: 46:             RC5=0;
   581  07EF  1283               	bcf	3,5	;RP0=0, select bank0
   582  07F0  1303               	bcf	3,6	;RP1=0, select bank0
   583  07F1  1287               	bcf	7,5	;volatile
   584  07F2  2FB4               	goto	l961
   585  07F3  120A  118A  2800   	ljmp	start
   586  07F6                     __end_of_main:
   587                           
   588                           	psect	text1
   589  05FB                     __ptext1:	
   590 ;; *************** function _timer *****************
   591 ;; Defined at:
   592 ;;		line 66 in file "TIMER 1 USING LED GLOW.c"
   593 ;; Parameters:    Size  Location     Type
   594 ;;  m               2    0[COMMON] int 
   595 ;; Auto vars:     Size  Location     Type
   596 ;;  cnt             2    5[COMMON] int 
   597 ;;  time            2    3[COMMON] int 
   598 ;; Return value:  Size  Location     Type
   599 ;;                  1    wreg      void 
   600 ;; Registers used:
   601 ;;		wreg, status,2, status,0
   602 ;; Tracked objects:
   603 ;;		On entry : 0/0
   604 ;;		On exit  : 0/0
   605 ;;		Unchanged: 0/0
   606 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   607 ;;      Params:         2       0       0       0       0
   608 ;;      Locals:         4       0       0       0       0
   609 ;;      Temps:          1       0       0       0       0
   610 ;;      Totals:         7       0       0       0       0
   611 ;;Total ram usage:        7 bytes
   612 ;; Hardware stack levels used: 1
   613 ;; This function calls:
   614 ;;		Nothing
   615 ;; This function is called by:
   616 ;;		_main
   617 ;; This function uses a non-reentrant model
   618 ;;
   619                           
   620                           
   621                           ;psect for function _timer
   622  05FB                     _timer:
   623  05FB                     l925:	
   624                           ;incstack = 0
   625                           ; Regs used in _timer: [wreg+status,2+status,0]
   626                           
   627                           
   628                           ;TIMER 1 USING LED GLOW.c: 66: void timer(int m);TIMER 1 USING LED GLOW.c: 67: {;TIMER 1
      +                           USING LED GLOW.c: 68:     int time=0,cnt=0;
   629  05FB  01F3               	clrf	timer@time
   630  05FC  01F4               	clrf	timer@time+1
   631  05FD  01F5               	clrf	timer@cnt
   632  05FE  01F6               	clrf	timer@cnt+1
   633                           
   634                           ;TIMER 1 USING LED GLOW.c: 69:     while (m>time)
   635  05FF  2E20               	goto	l939
   636  0600                     l64:
   637                           
   638                           ;TIMER 1 USING LED GLOW.c: 70:     {;TIMER 1 USING LED GLOW.c: 71:       if (TMR1IF==1)
   639  0600  1283               	bcf	3,5	;RP0=0, select bank0
   640  0601  1303               	bcf	3,6	;RP1=0, select bank0
   641  0602  1C0C               	btfss	12,0	;volatile
   642  0603  2E05               	goto	u521
   643  0604  2E06               	goto	u520
   644  0605                     u521:
   645  0605  2E11               	goto	l933
   646  0606                     u520:
   647  0606                     l927:
   648                           
   649                           ;TIMER 1 USING LED GLOW.c: 72:       {;TIMER 1 USING LED GLOW.c: 73:           cnt++;
   650  0606  3001               	movlw	1
   651  0607  07F5               	addwf	timer@cnt,f
   652  0608  1803               	skipnc
   653  0609  0AF6               	incf	timer@cnt+1,f
   654  060A  3000               	movlw	0
   655  060B  07F6               	addwf	timer@cnt+1,f
   656  060C                     l929:
   657                           
   658                           ;TIMER 1 USING LED GLOW.c: 74:           TMR1IF=0;
   659  060C  100C               	bcf	12,0	;volatile
   660  060D                     l931:
   661                           
   662                           ;TIMER 1 USING LED GLOW.c: 75:           TMR1=55536;
   663  060D  30D8               	movlw	216
   664  060E  008F               	movwf	15	;volatile
   665  060F  30F0               	movlw	240
   666  0610  008E               	movwf	14	;volatile
   667  0611                     l933:
   668                           
   669                           ;TIMER 1 USING LED GLOW.c: 77:       if (cnt==50)
   670  0611  3032               	movlw	50
   671  0612  0675               	xorwf	timer@cnt,w
   672  0613  0476               	iorwf	timer@cnt+1,w
   673  0614  1D03               	btfss	3,2
   674  0615  2E17               	goto	u531
   675  0616  2E18               	goto	u530
   676  0617                     u531:
   677  0617  2E20               	goto	l939
   678  0618                     u530:
   679  0618                     l935:
   680                           
   681                           ;TIMER 1 USING LED GLOW.c: 78:       {;TIMER 1 USING LED GLOW.c: 79:           time++;
   682  0618  3001               	movlw	1
   683  0619  07F3               	addwf	timer@time,f
   684  061A  1803               	skipnc
   685  061B  0AF4               	incf	timer@time+1,f
   686  061C  3000               	movlw	0
   687  061D  07F4               	addwf	timer@time+1,f
   688  061E                     l937:
   689                           
   690                           ;TIMER 1 USING LED GLOW.c: 80:           cnt=0;
   691  061E  01F5               	clrf	timer@cnt
   692  061F  01F6               	clrf	timer@cnt+1
   693  0620                     l939:
   694                           
   695                           ;TIMER 1 USING LED GLOW.c: 69:     while (m>time)
   696  0620  0874               	movf	timer@time+1,w
   697  0621  3A80               	xorlw	128
   698  0622  00F2               	movwf	??_timer
   699  0623  0871               	movf	timer@m+1,w
   700  0624  3A80               	xorlw	128
   701  0625  0272               	subwf	??_timer,w
   702  0626  1D03               	skipz
   703  0627  2E2A               	goto	u545
   704  0628  0870               	movf	timer@m,w
   705  0629  0273               	subwf	timer@time,w
   706  062A                     u545:
   707  062A  1C03               	skipc
   708  062B  2E2D               	goto	u541
   709  062C  2E2E               	goto	u540
   710  062D                     u541:
   711  062D  2E00               	goto	l64
   712  062E                     u540:
   713  062E                     l68:
   714  062E  0008               	return
   715  062F                     __end_of_timer:
   716                           
   717                           	psect	text2
   718  06F1                     __ptext2:	
   719 ;; *************** function _display *****************
   720 ;; Defined at:
   721 ;;		line 84 in file "TIMER 1 USING LED GLOW.c"
   722 ;; Parameters:    Size  Location     Type
   723 ;;  k               2    4[BANK0 ] int 
   724 ;; Auto vars:     Size  Location     Type
   725 ;;  c               2   10[BANK0 ] int 
   726 ;;  b               2    8[BANK0 ] int 
   727 ;;  a               2    6[BANK0 ] int 
   728 ;; Return value:  Size  Location     Type
   729 ;;                  1    wreg      void 
   730 ;; Registers used:
   731 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   732 ;; Tracked objects:
   733 ;;		On entry : 0/0
   734 ;;		On exit  : 0/0
   735 ;;		Unchanged: 0/0
   736 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   737 ;;      Params:         0       2       0       0       0
   738 ;;      Locals:         0       6       0       0       0
   739 ;;      Temps:          0       0       0       0       0
   740 ;;      Totals:         0       8       0       0       0
   741 ;;Total ram usage:        8 bytes
   742 ;; Hardware stack levels used: 1
   743 ;; Hardware stack levels required when called: 2
   744 ;; This function calls:
   745 ;;		_LCD
   746 ;;		___awdiv
   747 ;;		___awmod
   748 ;; This function is called by:
   749 ;;		_main
   750 ;; This function uses a non-reentrant model
   751 ;;
   752                           
   753                           
   754                           ;psect for function _display
   755  06F1                     _display:
   756  06F1                     l917:	
   757                           ;incstack = 0
   758                           ; Regs used in _display: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   759                           
   760                           
   761                           ;TIMER 1 USING LED GLOW.c: 84: void display(int k);TIMER 1 USING LED GLOW.c: 85: {;TIMER
      +                           1 USING LED GLOW.c: 86:     int a,b,c;;TIMER 1 USING LED GLOW.c: 87:     a=k/100;
   762  06F1  3064               	movlw	100
   763  06F2  00F7               	movwf	___awdiv@divisor
   764  06F3  3000               	movlw	0
   765  06F4  00F8               	movwf	___awdiv@divisor+1
   766  06F5  1283               	bcf	3,5	;RP0=0, select bank0
   767  06F6  1303               	bcf	3,6	;RP1=0, select bank0
   768  06F7  0825               	movf	display@k+1,w
   769  06F8  00FA               	movwf	___awdiv@dividend+1
   770  06F9  0824               	movf	display@k,w
   771  06FA  00F9               	movwf	___awdiv@dividend
   772  06FB  120A  118A  2688  120A  118A  	fcall	___awdiv
   773  0700  0878               	movf	?___awdiv+1,w
   774  0701  1283               	bcf	3,5	;RP0=0, select bank0
   775  0702  1303               	bcf	3,6	;RP1=0, select bank0
   776  0703  00A7               	movwf	display@a+1
   777  0704  0877               	movf	?___awdiv,w
   778  0705  00A6               	movwf	display@a
   779                           
   780                           ;TIMER 1 USING LED GLOW.c: 88:     b=(k%100)/10;
   781  0706  300A               	movlw	10
   782  0707  00F7               	movwf	___awdiv@divisor
   783  0708  3000               	movlw	0
   784  0709  00F8               	movwf	___awdiv@divisor+1
   785  070A  0825               	movf	display@k+1,w
   786  070B  00F3               	movwf	___awmod@dividend+1
   787  070C  0824               	movf	display@k,w
   788  070D  00F2               	movwf	___awmod@dividend
   789  070E  3064               	movlw	100
   790  070F  00F0               	movwf	___awmod@divisor
   791  0710  3000               	movlw	0
   792  0711  00F1               	movwf	___awmod@divisor+1
   793  0712  120A  118A  262F  120A  118A  	fcall	___awmod
   794  0717  0871               	movf	?___awmod+1,w
   795  0718  00FA               	movwf	___awdiv@dividend+1
   796  0719  0870               	movf	?___awmod,w
   797  071A  00F9               	movwf	___awdiv@dividend
   798  071B  120A  118A  2688  120A  118A  	fcall	___awdiv
   799  0720  0878               	movf	?___awdiv+1,w
   800  0721  1283               	bcf	3,5	;RP0=0, select bank0
   801  0722  1303               	bcf	3,6	;RP1=0, select bank0
   802  0723  00A9               	movwf	display@b+1
   803  0724  0877               	movf	?___awdiv,w
   804  0725  00A8               	movwf	display@b
   805                           
   806                           ;TIMER 1 USING LED GLOW.c: 89:     c=k%10;
   807  0726  300A               	movlw	10
   808  0727  00F0               	movwf	___awmod@divisor
   809  0728  3000               	movlw	0
   810  0729  00F1               	movwf	___awmod@divisor+1
   811  072A  0825               	movf	display@k+1,w
   812  072B  00F3               	movwf	___awmod@dividend+1
   813  072C  0824               	movf	display@k,w
   814  072D  00F2               	movwf	___awmod@dividend
   815  072E  120A  118A  262F  120A  118A  	fcall	___awmod
   816  0733  0871               	movf	?___awmod+1,w
   817  0734  1283               	bcf	3,5	;RP0=0, select bank0
   818  0735  1303               	bcf	3,6	;RP1=0, select bank0
   819  0736  00AB               	movwf	display@c+1
   820  0737  0870               	movf	?___awmod,w
   821  0738  00AA               	movwf	display@c
   822  0739                     l919:
   823                           
   824                           ;TIMER 1 USING LED GLOW.c: 90:     LCD(0x30+a,1);
   825  0739  0826               	movf	display@a,w
   826  073A  3E30               	addlw	48
   827  073B  00F1               	movwf	LCD@g
   828  073C  0827               	movf	display@a+1,w
   829  073D  1803               	skipnc
   830  073E  3E01               	addlw	1
   831  073F  3E00               	addlw	0
   832  0740  00F2               	movwf	LCD@g+1
   833  0741  3001               	movlw	1
   834  0742  00F3               	movwf	LCD@h
   835  0743  3000               	movlw	0
   836  0744  00F4               	movwf	LCD@h+1
   837  0745  120A  118A  25D2  120A  118A  	fcall	_LCD
   838  074A                     l921:
   839                           
   840                           ;TIMER 1 USING LED GLOW.c: 91:     LCD(0x30+b,1);
   841  074A  1283               	bcf	3,5	;RP0=0, select bank0
   842  074B  1303               	bcf	3,6	;RP1=0, select bank0
   843  074C  0828               	movf	display@b,w
   844  074D  3E30               	addlw	48
   845  074E  00F1               	movwf	LCD@g
   846  074F  0829               	movf	display@b+1,w
   847  0750  1803               	skipnc
   848  0751  3E01               	addlw	1
   849  0752  3E00               	addlw	0
   850  0753  00F2               	movwf	LCD@g+1
   851  0754  3001               	movlw	1
   852  0755  00F3               	movwf	LCD@h
   853  0756  3000               	movlw	0
   854  0757  00F4               	movwf	LCD@h+1
   855  0758  120A  118A  25D2  120A  118A  	fcall	_LCD
   856  075D                     l923:
   857                           
   858                           ;TIMER 1 USING LED GLOW.c: 92:     LCD(0x30+c,1);
   859  075D  1283               	bcf	3,5	;RP0=0, select bank0
   860  075E  1303               	bcf	3,6	;RP1=0, select bank0
   861  075F  082A               	movf	display@c,w
   862  0760  3E30               	addlw	48
   863  0761  00F1               	movwf	LCD@g
   864  0762  082B               	movf	display@c+1,w
   865  0763  1803               	skipnc
   866  0764  3E01               	addlw	1
   867  0765  3E00               	addlw	0
   868  0766  00F2               	movwf	LCD@g+1
   869  0767  3001               	movlw	1
   870  0768  00F3               	movwf	LCD@h
   871  0769  3000               	movlw	0
   872  076A  00F4               	movwf	LCD@h+1
   873  076B  120A  118A  25D2  120A  118A  	fcall	_LCD
   874  0770                     l71:
   875  0770  0008               	return
   876  0771                     __end_of_display:
   877                           
   878                           	psect	text3
   879  062F                     __ptext3:	
   880 ;; *************** function ___awmod *****************
   881 ;; Defined at:
   882 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awmod.c"
   883 ;; Parameters:    Size  Location     Type
   884 ;;  divisor         2    0[COMMON] int 
   885 ;;  dividend        2    2[COMMON] int 
   886 ;; Auto vars:     Size  Location     Type
   887 ;;  sign            1    6[COMMON] unsigned char 
   888 ;;  counter         1    5[COMMON] unsigned char 
   889 ;; Return value:  Size  Location     Type
   890 ;;                  2    0[COMMON] int 
   891 ;; Registers used:
   892 ;;		wreg, status,2, status,0
   893 ;; Tracked objects:
   894 ;;		On entry : 0/0
   895 ;;		On exit  : 0/0
   896 ;;		Unchanged: 0/0
   897 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   898 ;;      Params:         4       0       0       0       0
   899 ;;      Locals:         2       0       0       0       0
   900 ;;      Temps:          1       0       0       0       0
   901 ;;      Totals:         7       0       0       0       0
   902 ;;Total ram usage:        7 bytes
   903 ;; Hardware stack levels used: 1
   904 ;; This function calls:
   905 ;;		Nothing
   906 ;; This function is called by:
   907 ;;		_display
   908 ;; This function uses a non-reentrant model
   909 ;;
   910                           
   911                           
   912                           ;psect for function ___awmod
   913  062F                     ___awmod:
   914  062F                     l879:	
   915                           ;incstack = 0
   916                           ; Regs used in ___awmod: [wreg+status,2+status,0]
   917                           
   918  062F  01F6               	clrf	___awmod@sign
   919  0630                     l881:
   920  0630  1FF3               	btfss	___awmod@dividend+1,7
   921  0631  2E33               	goto	u431
   922  0632  2E34               	goto	u430
   923  0633                     u431:
   924  0633  2E3B               	goto	l887
   925  0634                     u430:
   926  0634                     l883:
   927  0634  09F2               	comf	___awmod@dividend,f
   928  0635  09F3               	comf	___awmod@dividend+1,f
   929  0636  0AF2               	incf	___awmod@dividend,f
   930  0637  1903               	skipnz
   931  0638  0AF3               	incf	___awmod@dividend+1,f
   932  0639                     l885:
   933  0639  01F6               	clrf	___awmod@sign
   934  063A  0AF6               	incf	___awmod@sign,f
   935  063B                     l887:
   936  063B  1FF1               	btfss	___awmod@divisor+1,7
   937  063C  2E3E               	goto	u441
   938  063D  2E3F               	goto	u440
   939  063E                     u441:
   940  063E  2E44               	goto	l891
   941  063F                     u440:
   942  063F                     l889:
   943  063F  09F0               	comf	___awmod@divisor,f
   944  0640  09F1               	comf	___awmod@divisor+1,f
   945  0641  0AF0               	incf	___awmod@divisor,f
   946  0642  1903               	skipnz
   947  0643  0AF1               	incf	___awmod@divisor+1,f
   948  0644                     l891:
   949  0644  0870               	movf	___awmod@divisor,w
   950  0645  0471               	iorwf	___awmod@divisor+1,w
   951  0646  1903               	btfsc	3,2
   952  0647  2E49               	goto	u451
   953  0648  2E4A               	goto	u450
   954  0649                     u451:
   955  0649  2E79               	goto	l909
   956  064A                     u450:
   957  064A                     l893:
   958  064A  01F5               	clrf	___awmod@counter
   959  064B  0AF5               	incf	___awmod@counter,f
   960  064C  2E58               	goto	l899
   961  064D                     l895:
   962  064D  3001               	movlw	1
   963  064E                     u465:
   964  064E  1003               	clrc
   965  064F  0DF0               	rlf	___awmod@divisor,f
   966  0650  0DF1               	rlf	___awmod@divisor+1,f
   967  0651  3EFF               	addlw	-1
   968  0652  1D03               	skipz
   969  0653  2E4E               	goto	u465
   970  0654                     l897:
   971  0654  3001               	movlw	1
   972  0655  00F4               	movwf	??___awmod
   973  0656  0874               	movf	??___awmod,w
   974  0657  07F5               	addwf	___awmod@counter,f
   975  0658                     l899:
   976  0658  1FF1               	btfss	___awmod@divisor+1,7
   977  0659  2E5B               	goto	u471
   978  065A  2E5C               	goto	u470
   979  065B                     u471:
   980  065B  2E4D               	goto	l895
   981  065C                     u470:
   982  065C                     l901:
   983  065C  0871               	movf	___awmod@divisor+1,w
   984  065D  0273               	subwf	___awmod@dividend+1,w
   985  065E  1D03               	skipz
   986  065F  2E62               	goto	u485
   987  0660  0870               	movf	___awmod@divisor,w
   988  0661  0272               	subwf	___awmod@dividend,w
   989  0662                     u485:
   990  0662  1C03               	skipc
   991  0663  2E65               	goto	u481
   992  0664  2E66               	goto	u480
   993  0665                     u481:
   994  0665  2E6C               	goto	l905
   995  0666                     u480:
   996  0666                     l903:
   997  0666  0870               	movf	___awmod@divisor,w
   998  0667  02F2               	subwf	___awmod@dividend,f
   999  0668  0871               	movf	___awmod@divisor+1,w
  1000  0669  1C03               	skipc
  1001  066A  03F3               	decf	___awmod@dividend+1,f
  1002  066B  02F3               	subwf	___awmod@dividend+1,f
  1003  066C                     l905:
  1004  066C  3001               	movlw	1
  1005  066D                     u495:
  1006  066D  1003               	clrc
  1007  066E  0CF1               	rrf	___awmod@divisor+1,f
  1008  066F  0CF0               	rrf	___awmod@divisor,f
  1009  0670  3EFF               	addlw	-1
  1010  0671  1D03               	skipz
  1011  0672  2E6D               	goto	u495
  1012  0673                     l907:
  1013  0673  3001               	movlw	1
  1014  0674  02F5               	subwf	___awmod@counter,f
  1015  0675  1D03               	btfss	3,2
  1016  0676  2E78               	goto	u501
  1017  0677  2E79               	goto	u500
  1018  0678                     u501:
  1019  0678  2E5C               	goto	l901
  1020  0679                     u500:
  1021  0679                     l909:
  1022  0679  0876               	movf	___awmod@sign,w
  1023  067A  1903               	btfsc	3,2
  1024  067B  2E7D               	goto	u511
  1025  067C  2E7E               	goto	u510
  1026  067D                     u511:
  1027  067D  2E83               	goto	l913
  1028  067E                     u510:
  1029  067E                     l911:
  1030  067E  09F2               	comf	___awmod@dividend,f
  1031  067F  09F3               	comf	___awmod@dividend+1,f
  1032  0680  0AF2               	incf	___awmod@dividend,f
  1033  0681  1903               	skipnz
  1034  0682  0AF3               	incf	___awmod@dividend+1,f
  1035  0683                     l913:
  1036  0683  0873               	movf	___awmod@dividend+1,w
  1037  0684  00F1               	movwf	?___awmod+1
  1038  0685  0872               	movf	___awmod@dividend,w
  1039  0686  00F0               	movwf	?___awmod
  1040  0687                     l323:
  1041  0687  0008               	return
  1042  0688                     __end_of___awmod:
  1043                           
  1044                           	psect	text4
  1045  0688                     __ptext4:	
  1046 ;; *************** function ___awdiv *****************
  1047 ;; Defined at:
  1048 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awdiv.c"
  1049 ;; Parameters:    Size  Location     Type
  1050 ;;  divisor         2    7[COMMON] int 
  1051 ;;  dividend        2    9[COMMON] int 
  1052 ;; Auto vars:     Size  Location     Type
  1053 ;;  quotient        2    2[BANK0 ] int 
  1054 ;;  sign            1    1[BANK0 ] unsigned char 
  1055 ;;  counter         1    0[BANK0 ] unsigned char 
  1056 ;; Return value:  Size  Location     Type
  1057 ;;                  2    7[COMMON] int 
  1058 ;; Registers used:
  1059 ;;		wreg, status,2, status,0
  1060 ;; Tracked objects:
  1061 ;;		On entry : 0/0
  1062 ;;		On exit  : 0/0
  1063 ;;		Unchanged: 0/0
  1064 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1065 ;;      Params:         4       0       0       0       0
  1066 ;;      Locals:         0       4       0       0       0
  1067 ;;      Temps:          1       0       0       0       0
  1068 ;;      Totals:         5       4       0       0       0
  1069 ;;Total ram usage:        9 bytes
  1070 ;; Hardware stack levels used: 1
  1071 ;; This function calls:
  1072 ;;		Nothing
  1073 ;; This function is called by:
  1074 ;;		_display
  1075 ;; This function uses a non-reentrant model
  1076 ;;
  1077                           
  1078                           
  1079                           ;psect for function ___awdiv
  1080  0688                     ___awdiv:
  1081  0688                     l835:	
  1082                           ;incstack = 0
  1083                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1084                           
  1085  0688  1283               	bcf	3,5	;RP0=0, select bank0
  1086  0689  1303               	bcf	3,6	;RP1=0, select bank0
  1087  068A  01A1               	clrf	___awdiv@sign
  1088  068B                     l837:
  1089  068B  1FF8               	btfss	___awdiv@divisor+1,7
  1090  068C  2E8E               	goto	u331
  1091  068D  2E8F               	goto	u330
  1092  068E                     u331:
  1093  068E  2E96               	goto	l843
  1094  068F                     u330:
  1095  068F                     l839:
  1096  068F  09F7               	comf	___awdiv@divisor,f
  1097  0690  09F8               	comf	___awdiv@divisor+1,f
  1098  0691  0AF7               	incf	___awdiv@divisor,f
  1099  0692  1903               	skipnz
  1100  0693  0AF8               	incf	___awdiv@divisor+1,f
  1101  0694                     l841:
  1102  0694  01A1               	clrf	___awdiv@sign
  1103  0695  0AA1               	incf	___awdiv@sign,f
  1104  0696                     l843:
  1105  0696  1FFA               	btfss	___awdiv@dividend+1,7
  1106  0697  2E99               	goto	u341
  1107  0698  2E9A               	goto	u340
  1108  0699                     u341:
  1109  0699  2EA3               	goto	l849
  1110  069A                     u340:
  1111  069A                     l845:
  1112  069A  09F9               	comf	___awdiv@dividend,f
  1113  069B  09FA               	comf	___awdiv@dividend+1,f
  1114  069C  0AF9               	incf	___awdiv@dividend,f
  1115  069D  1903               	skipnz
  1116  069E  0AFA               	incf	___awdiv@dividend+1,f
  1117  069F                     l847:
  1118  069F  3001               	movlw	1
  1119  06A0  00FB               	movwf	??___awdiv
  1120  06A1  087B               	movf	??___awdiv,w
  1121  06A2  06A1               	xorwf	___awdiv@sign,f
  1122  06A3                     l849:
  1123  06A3  01A2               	clrf	___awdiv@quotient
  1124  06A4  01A3               	clrf	___awdiv@quotient+1
  1125  06A5                     l851:
  1126  06A5  0877               	movf	___awdiv@divisor,w
  1127  06A6  0478               	iorwf	___awdiv@divisor+1,w
  1128  06A7  1903               	btfsc	3,2
  1129  06A8  2EAA               	goto	u351
  1130  06A9  2EAB               	goto	u350
  1131  06AA                     u351:
  1132  06AA  2EE2               	goto	l871
  1133  06AB                     u350:
  1134  06AB                     l853:
  1135  06AB  01A0               	clrf	___awdiv@counter
  1136  06AC  0AA0               	incf	___awdiv@counter,f
  1137  06AD  2EB9               	goto	l859
  1138  06AE                     l855:
  1139  06AE  3001               	movlw	1
  1140  06AF                     u365:
  1141  06AF  1003               	clrc
  1142  06B0  0DF7               	rlf	___awdiv@divisor,f
  1143  06B1  0DF8               	rlf	___awdiv@divisor+1,f
  1144  06B2  3EFF               	addlw	-1
  1145  06B3  1D03               	skipz
  1146  06B4  2EAF               	goto	u365
  1147  06B5                     l857:
  1148  06B5  3001               	movlw	1
  1149  06B6  00FB               	movwf	??___awdiv
  1150  06B7  087B               	movf	??___awdiv,w
  1151  06B8  07A0               	addwf	___awdiv@counter,f
  1152  06B9                     l859:
  1153  06B9  1FF8               	btfss	___awdiv@divisor+1,7
  1154  06BA  2EBC               	goto	u371
  1155  06BB  2EBD               	goto	u370
  1156  06BC                     u371:
  1157  06BC  2EAE               	goto	l855
  1158  06BD                     u370:
  1159  06BD                     l861:
  1160  06BD  3001               	movlw	1
  1161  06BE                     u385:
  1162  06BE  1003               	clrc
  1163  06BF  0DA2               	rlf	___awdiv@quotient,f
  1164  06C0  0DA3               	rlf	___awdiv@quotient+1,f
  1165  06C1  3EFF               	addlw	-1
  1166  06C2  1D03               	skipz
  1167  06C3  2EBE               	goto	u385
  1168  06C4  0878               	movf	___awdiv@divisor+1,w
  1169  06C5  027A               	subwf	___awdiv@dividend+1,w
  1170  06C6  1D03               	skipz
  1171  06C7  2ECA               	goto	u395
  1172  06C8  0877               	movf	___awdiv@divisor,w
  1173  06C9  0279               	subwf	___awdiv@dividend,w
  1174  06CA                     u395:
  1175  06CA  1C03               	skipc
  1176  06CB  2ECD               	goto	u391
  1177  06CC  2ECE               	goto	u390
  1178  06CD                     u391:
  1179  06CD  2ED5               	goto	l867
  1180  06CE                     u390:
  1181  06CE                     l863:
  1182  06CE  0877               	movf	___awdiv@divisor,w
  1183  06CF  02F9               	subwf	___awdiv@dividend,f
  1184  06D0  0878               	movf	___awdiv@divisor+1,w
  1185  06D1  1C03               	skipc
  1186  06D2  03FA               	decf	___awdiv@dividend+1,f
  1187  06D3  02FA               	subwf	___awdiv@dividend+1,f
  1188  06D4                     l865:
  1189  06D4  1422               	bsf	___awdiv@quotient,0
  1190  06D5                     l867:
  1191  06D5  3001               	movlw	1
  1192  06D6                     u405:
  1193  06D6  1003               	clrc
  1194  06D7  0CF8               	rrf	___awdiv@divisor+1,f
  1195  06D8  0CF7               	rrf	___awdiv@divisor,f
  1196  06D9  3EFF               	addlw	-1
  1197  06DA  1D03               	skipz
  1198  06DB  2ED6               	goto	u405
  1199  06DC                     l869:
  1200  06DC  3001               	movlw	1
  1201  06DD  02A0               	subwf	___awdiv@counter,f
  1202  06DE  1D03               	btfss	3,2
  1203  06DF  2EE1               	goto	u411
  1204  06E0  2EE2               	goto	u410
  1205  06E1                     u411:
  1206  06E1  2EBD               	goto	l861
  1207  06E2                     u410:
  1208  06E2                     l871:
  1209  06E2  0821               	movf	___awdiv@sign,w
  1210  06E3  1903               	btfsc	3,2
  1211  06E4  2EE6               	goto	u421
  1212  06E5  2EE7               	goto	u420
  1213  06E6                     u421:
  1214  06E6  2EEC               	goto	l875
  1215  06E7                     u420:
  1216  06E7                     l873:
  1217  06E7  09A2               	comf	___awdiv@quotient,f
  1218  06E8  09A3               	comf	___awdiv@quotient+1,f
  1219  06E9  0AA2               	incf	___awdiv@quotient,f
  1220  06EA  1903               	skipnz
  1221  06EB  0AA3               	incf	___awdiv@quotient+1,f
  1222  06EC                     l875:
  1223  06EC  0823               	movf	___awdiv@quotient+1,w
  1224  06ED  00F8               	movwf	?___awdiv+1
  1225  06EE  0822               	movf	___awdiv@quotient,w
  1226  06EF  00F7               	movwf	?___awdiv
  1227  06F0                     l310:
  1228  06F0  0008               	return
  1229  06F1                     __end_of___awdiv:
  1230                           
  1231                           	psect	text5
  1232  05D2                     __ptext5:	
  1233 ;; *************** function _LCD *****************
  1234 ;; Defined at:
  1235 ;;		line 57 in file "TIMER 1 USING LED GLOW.c"
  1236 ;; Parameters:    Size  Location     Type
  1237 ;;  g               2    1[COMMON] int 
  1238 ;;  h               2    3[COMMON] int 
  1239 ;; Auto vars:     Size  Location     Type
  1240 ;;		None
  1241 ;; Return value:  Size  Location     Type
  1242 ;;                  1    wreg      void 
  1243 ;; Registers used:
  1244 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1245 ;; Tracked objects:
  1246 ;;		On entry : 0/0
  1247 ;;		On exit  : 0/0
  1248 ;;		Unchanged: 0/0
  1249 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1250 ;;      Params:         4       0       0       0       0
  1251 ;;      Locals:         0       0       0       0       0
  1252 ;;      Temps:          2       0       0       0       0
  1253 ;;      Totals:         6       0       0       0       0
  1254 ;;Total ram usage:        6 bytes
  1255 ;; Hardware stack levels used: 1
  1256 ;; Hardware stack levels required when called: 1
  1257 ;; This function calls:
  1258 ;;		_pulse
  1259 ;; This function is called by:
  1260 ;;		_main
  1261 ;;		_display
  1262 ;; This function uses a non-reentrant model
  1263 ;;
  1264                           
  1265                           
  1266                           ;psect for function _LCD
  1267  05D2                     _LCD:
  1268  05D2                     l825:	
  1269                           ;incstack = 0
  1270                           ; Regs used in _LCD: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1271                           
  1272                           
  1273                           ;TIMER 1 USING LED GLOW.c: 57: void LCD(int g,int h);TIMER 1 USING LED GLOW.c: 58: {;TIM
      +                          ER 1 USING LED GLOW.c: 59:     RC2=h;
  1274  05D2  1873               	btfsc	LCD@h,0
  1275  05D3  2DD5               	goto	u301
  1276  05D4  2DD9               	goto	u300
  1277  05D5                     u301:
  1278  05D5  1283               	bcf	3,5	;RP0=0, select bank0
  1279  05D6  1303               	bcf	3,6	;RP1=0, select bank0
  1280  05D7  1507               	bsf	7,2	;volatile
  1281  05D8  2DDC               	goto	u314
  1282  05D9                     u300:
  1283  05D9  1283               	bcf	3,5	;RP0=0, select bank0
  1284  05DA  1303               	bcf	3,6	;RP1=0, select bank0
  1285  05DB  1107               	bcf	7,2	;volatile
  1286  05DC                     u314:
  1287                           
  1288                           ;TIMER 1 USING LED GLOW.c: 60:     RC3=0;
  1289  05DC  1187               	bcf	7,3	;volatile
  1290  05DD                     l827:
  1291                           
  1292                           ;TIMER 1 USING LED GLOW.c: 61:     PORTD=(g&0xf0)>>4;
  1293  05DD  0872               	movf	LCD@g+1,w
  1294  05DE  00F6               	movwf	??_LCD+1
  1295  05DF  0871               	movf	LCD@g,w
  1296  05E0  00F5               	movwf	??_LCD
  1297  05E1  3004               	movlw	4
  1298  05E2  00FF               	movwf	btemp+1
  1299  05E3                     u325:
  1300  05E3  0D76               	rlf	??_LCD+1,w
  1301  05E4  0CF6               	rrf	??_LCD+1,f
  1302  05E5  0CF5               	rrf	??_LCD,f
  1303  05E6  0BFF               	decfsz	btemp+1,f
  1304  05E7  2DE3               	goto	u325
  1305  05E8  0875               	movf	??_LCD,w
  1306  05E9  390F               	andlw	15
  1307  05EA  0088               	movwf	8	;volatile
  1308  05EB                     l829:
  1309                           
  1310                           ;TIMER 1 USING LED GLOW.c: 62:     pulse();
  1311  05EB  120A  118A  25C1  120A  118A  	fcall	_pulse
  1312  05F0                     l831:
  1313                           
  1314                           ;TIMER 1 USING LED GLOW.c: 63:     PORTD=(g&0x0f);
  1315  05F0  0871               	movf	LCD@g,w
  1316  05F1  390F               	andlw	15
  1317  05F2  1283               	bcf	3,5	;RP0=0, select bank0
  1318  05F3  1303               	bcf	3,6	;RP1=0, select bank0
  1319  05F4  0088               	movwf	8	;volatile
  1320  05F5                     l833:
  1321                           
  1322                           ;TIMER 1 USING LED GLOW.c: 64:     pulse();
  1323  05F5  120A  118A  25C1  120A  118A  	fcall	_pulse
  1324  05FA                     l60:
  1325  05FA  0008               	return
  1326  05FB                     __end_of_LCD:
  1327                           
  1328                           	psect	text6
  1329  05C1                     __ptext6:	
  1330 ;; *************** function _pulse *****************
  1331 ;; Defined at:
  1332 ;;		line 50 in file "TIMER 1 USING LED GLOW.c"
  1333 ;; Parameters:    Size  Location     Type
  1334 ;;		None
  1335 ;; Auto vars:     Size  Location     Type
  1336 ;;		None
  1337 ;; Return value:  Size  Location     Type
  1338 ;;                  1    wreg      void 
  1339 ;; Registers used:
  1340 ;;		wreg
  1341 ;; Tracked objects:
  1342 ;;		On entry : 0/0
  1343 ;;		On exit  : 0/0
  1344 ;;		Unchanged: 0/0
  1345 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1346 ;;      Params:         0       0       0       0       0
  1347 ;;      Locals:         0       0       0       0       0
  1348 ;;      Temps:          1       0       0       0       0
  1349 ;;      Totals:         1       0       0       0       0
  1350 ;;Total ram usage:        1 bytes
  1351 ;; Hardware stack levels used: 1
  1352 ;; This function calls:
  1353 ;;		Nothing
  1354 ;; This function is called by:
  1355 ;;		_LCD
  1356 ;; This function uses a non-reentrant model
  1357 ;;
  1358                           
  1359                           
  1360                           ;psect for function _pulse
  1361  05C1                     _pulse:
  1362  05C1                     l819:	
  1363                           ;incstack = 0
  1364                           ; Regs used in _pulse: [wreg]
  1365                           
  1366                           
  1367                           ;TIMER 1 USING LED GLOW.c: 52:     RC4=1;
  1368  05C1  1283               	bcf	3,5	;RP0=0, select bank0
  1369  05C2  1303               	bcf	3,6	;RP1=0, select bank0
  1370  05C3  1607               	bsf	7,4	;volatile
  1371  05C4                     l821:
  1372                           
  1373                           ;TIMER 1 USING LED GLOW.c: 53:     _delay((unsigned long)((50)*(4000000/4000000.0)));
  1374  05C4  3010               	movlw	16
  1375  05C5  00F0               	movwf	??_pulse
  1376  05C6                     u597:
  1377  05C6  0BF0               	decfsz	??_pulse,f
  1378  05C7  2DC6               	goto	u597
  1379  05C8  0000               	nop
  1380  05C9                     l823:
  1381                           
  1382                           ;TIMER 1 USING LED GLOW.c: 54:     RC4=0;
  1383  05C9  1283               	bcf	3,5	;RP0=0, select bank0
  1384  05CA  1303               	bcf	3,6	;RP1=0, select bank0
  1385  05CB  1207               	bcf	7,4	;volatile
  1386                           
  1387                           ;TIMER 1 USING LED GLOW.c: 55:     _delay((unsigned long)((50)*(4000000/4000000.0)));
  1388  05CC  3010               	movlw	16
  1389  05CD  00F0               	movwf	??_pulse
  1390  05CE                     u607:
  1391  05CE  0BF0               	decfsz	??_pulse,f
  1392  05CF  2DCE               	goto	u607
  1393  05D0  0000               	nop
  1394  05D1                     l57:
  1395  05D1  0008               	return
  1396  05D2                     __end_of_pulse:
  1397  007E                     btemp	set	126	;btemp
  1398  007E                     wtemp0	set	126

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      14
    BANK0            80     12      14
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _display->___awdiv
    ___awdiv->___awmod
    _LCD->_pulse

Critical Paths under _main in BANK0

    _main->_display
    _display->___awdiv

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    4126
                                _LCD
                            _display
                              _timer
 ---------------------------------------------------------------------------------
 (1) _timer                                                7     5      2     147
                                              0 COMMON     7     5      2
 ---------------------------------------------------------------------------------
 (1) _display                                              8     6      2    2697
                                              4 BANK0      8     6      2
                                _LCD
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     600
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     604
                                              7 COMMON     5     1      4
                                              0 BANK0      4     4      0
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _LCD                                                  6     2      4    1282
                                              1 COMMON     6     2      4
                              _pulse
 ---------------------------------------------------------------------------------
 (3) _pulse                                                1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD
     _pulse
   _display
     _LCD
     ___awdiv
       ___awmod (ARG)
     ___awmod
   _timer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      C       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      1C       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      C       E       5       17.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      1C      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Tue Mar 28 18:16:34 2023

                     l51 07E5                       l60 05FA                       l44 07DD  
                     l45 07D7                       l71 0770                       l64 0600  
                     l57 05D1                       l49 07E1                       l68 062E  
           ___awdiv@sign 0021                      l310 06F0                      l323 0687  
                    l821 05C4                      l901 065C                      l823 05C9  
                    l831 05F0                      l911 067E                      l903 0666  
                    l833 05F5                      l825 05D2                      l841 0694  
                    l913 0683                      l905 066C                      l921 074A  
                    l819 05C1                      l827 05DD                      l851 06A5  
                    l843 0696                      l835 0688                      l907 0673  
                    l923 075D                      l931 060D                      l829 05EB  
                    l861 06BD                      l853 06AB                      l845 069A  
                    l837 068B                      l909 0679                      l917 06F1  
                    l933 0611                      l925 05FB                      l941 0771  
                    l863 06CE                      l855 06AE                      l871 06E2  
                    l847 069F                      l839 068F                      l919 0739  
                    l935 0618                      l927 0606                      l951 0782  
                    l943 0775                      l873 06E7                      l865 06D4  
                    l857 06B5                      l849 06A3                      l881 0630  
                    l937 061E                      l929 060C                      l961 07B4  
                    l953 0784                      l945 0778                      l875 06EC  
                    l867 06D5                      l859 06B9                      l891 0644  
                    l883 0634                      l939 0620                      l971 07E6  
                    l963 07BA                      l955 0790                      l947 077B  
                    l869 06DC                      l893 064A                      l885 0639  
                    l973 07EF                      l965 07C6                      l957 079C  
                    l949 077E                      l895 064D                      l887 063B  
                    l879 062F                      l967 07CC                      l959 07A8  
                    l897 0654                      l889 063F                      l899 0658  
                    _LCD 05D2                      _RC0 0038                      _RC1 0039  
                    _RC2 003A                      _RC3 003B                      _RC4 003C  
                    _RC5 003D                      u300 05D9                      u301 05D5  
                    u314 05DC                      u410 06E2                      u330 068F  
                    u411 06E1                      u331 068E                      u420 06E7  
                    u340 069A                      u500 0679                      u325 05E3  
                    u421 06E6                      u405 06D6                      u341 0699  
                    u501 0678                      u350 06AB                      u510 067E  
                    u430 0634                      u351 06AA                      u511 067D  
                    u431 0633                      u440 063F                      u520 0606  
                    u441 063E                      u521 0605                      u370 06BD  
                    u450 064A                      u530 0618                      u371 06BC  
                    u451 0649                      u531 0617                      u540 062E  
                    u365 06AF                      u541 062D                      u390 06CE  
                    u470 065C                      u550 07BA                      u607 05CE  
                    u391 06CD                      u471 065B                      u551 07B9  
                    u480 0666                      u560 07DD                      u385 06BE  
                    u481 0665                      u465 064E                      u545 062A  
                    u561 07DC                      u570 07E1                      u395 06CA  
                    u571 07E0                      u580 07E5                      u485 0662  
                    u581 07E4                      u495 066D                      u597 05C6  
           ___awmod@sign 0076                     LCD@g 0071                     LCD@h 0073  
                   ?_LCD 0071                     _TMR1 000E                     _main 0771  
                   btemp 007E                     start 0000                    ??_LCD 0075  
                  ?_main 0070          __end_of___awdiv 06F1          __end_of___awmod 0688  
        ___awdiv@divisor 0077                    _T1CON 0010          ___awdiv@counter 0020  
                  _PORTC 0007                    _PORTD 0008                    _TRISC 0087  
                  _TRISD 0088          __end_of_display 0771                    _count 007C  
                  _timer 05FB                    _pulse 05C1                    status 0003  
                  wtemp0 007E          __initialization 07F6             __end_of_main 07F6  
                 ??_main 007C         ___awdiv@dividend 0079                   ?_timer 0070  
                 ?_pulse 0070                   _TMR1IF 0060                ??___awdiv 007B  
              ??___awmod 0074                   _count1 002C         ___awdiv@quotient 0022  
        ___awmod@divisor 0070          ___awmod@counter 0075                ??_display 007C  
                 timer@m 0070  __end_of__initialization 07FC           __pcstackCOMMON 0070  
          __end_of_timer 062F            __end_of_pulse 05D2                  ??_timer 0072  
                ??_pulse 0070               __pbssBANK0 002C               __pmaintext 0771  
                ___awdiv 0688                  ___awmod 062F                  __ptext1 05FB  
                __ptext2 06F1                  __ptext3 062F                  __ptext4 0688  
                __ptext5 05D2                  __ptext6 05C1                  _display 06F1  
           __size_of_LCD 0029         ___awmod@dividend 0072     end_of_initialization 07FC  
    start_initialization 07F6              __end_of_LCD 05FB              __pbssCOMMON 007C  
              ___latbits 0002            __pcstackBANK0 0020                 ?___awdiv 0077  
               ?___awmod 0070                 ?_display 0024           __size_of_timer 0034  
         __size_of_pulse 0011         __size_of___awdiv 0069         __size_of___awmod 0059  
       __size_of_display 0080            __size_of_main 0085                timer@time 0073  
               display@a 0026                 display@b 0028                 display@c 002A  
               display@k 0024                 timer@cnt 0075  
