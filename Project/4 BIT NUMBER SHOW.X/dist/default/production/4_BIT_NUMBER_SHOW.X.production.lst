

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Mon Mar 13 15:52:20 2023

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    10                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	text5,local,class=CODE,merge=1,delta=2
    13                           	dabs	1,0x7E,2
    14  0000                     
    15                           ; Version 2.20
    16                           ; Generated 12/02/2020 GMT
    17                           ; 
    18                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC16F887 Definitions
    47                           ; 
    48                           ; SFR Addresses
    49  0000                     	;# 
    50  0001                     	;# 
    51  0002                     	;# 
    52  0003                     	;# 
    53  0004                     	;# 
    54  0005                     	;# 
    55  0006                     	;# 
    56  0007                     	;# 
    57  0008                     	;# 
    58  0009                     	;# 
    59  000A                     	;# 
    60  000B                     	;# 
    61  000C                     	;# 
    62  000D                     	;# 
    63  000E                     	;# 
    64  000E                     	;# 
    65  000F                     	;# 
    66  0010                     	;# 
    67  0011                     	;# 
    68  0012                     	;# 
    69  0013                     	;# 
    70  0014                     	;# 
    71  0015                     	;# 
    72  0015                     	;# 
    73  0016                     	;# 
    74  0017                     	;# 
    75  0018                     	;# 
    76  0019                     	;# 
    77  001A                     	;# 
    78  001B                     	;# 
    79  001B                     	;# 
    80  001C                     	;# 
    81  001D                     	;# 
    82  001E                     	;# 
    83  001F                     	;# 
    84  0081                     	;# 
    85  0085                     	;# 
    86  0086                     	;# 
    87  0087                     	;# 
    88  0088                     	;# 
    89  0089                     	;# 
    90  008C                     	;# 
    91  008D                     	;# 
    92  008E                     	;# 
    93  008F                     	;# 
    94  0090                     	;# 
    95  0091                     	;# 
    96  0092                     	;# 
    97  0093                     	;# 
    98  0093                     	;# 
    99  0093                     	;# 
   100  0094                     	;# 
   101  0095                     	;# 
   102  0096                     	;# 
   103  0097                     	;# 
   104  0098                     	;# 
   105  0099                     	;# 
   106  009A                     	;# 
   107  009B                     	;# 
   108  009C                     	;# 
   109  009D                     	;# 
   110  009E                     	;# 
   111  009F                     	;# 
   112  0105                     	;# 
   113  0107                     	;# 
   114  0108                     	;# 
   115  0109                     	;# 
   116  010C                     	;# 
   117  010C                     	;# 
   118  010D                     	;# 
   119  010E                     	;# 
   120  010F                     	;# 
   121  0185                     	;# 
   122  0187                     	;# 
   123  0188                     	;# 
   124  0189                     	;# 
   125  018C                     	;# 
   126  018D                     	;# 
   127  0000                     	;# 
   128  0001                     	;# 
   129  0002                     	;# 
   130  0003                     	;# 
   131  0004                     	;# 
   132  0005                     	;# 
   133  0006                     	;# 
   134  0007                     	;# 
   135  0008                     	;# 
   136  0009                     	;# 
   137  000A                     	;# 
   138  000B                     	;# 
   139  000C                     	;# 
   140  000D                     	;# 
   141  000E                     	;# 
   142  000E                     	;# 
   143  000F                     	;# 
   144  0010                     	;# 
   145  0011                     	;# 
   146  0012                     	;# 
   147  0013                     	;# 
   148  0014                     	;# 
   149  0015                     	;# 
   150  0015                     	;# 
   151  0016                     	;# 
   152  0017                     	;# 
   153  0018                     	;# 
   154  0019                     	;# 
   155  001A                     	;# 
   156  001B                     	;# 
   157  001B                     	;# 
   158  001C                     	;# 
   159  001D                     	;# 
   160  001E                     	;# 
   161  001F                     	;# 
   162  0081                     	;# 
   163  0085                     	;# 
   164  0086                     	;# 
   165  0087                     	;# 
   166  0088                     	;# 
   167  0089                     	;# 
   168  008C                     	;# 
   169  008D                     	;# 
   170  008E                     	;# 
   171  008F                     	;# 
   172  0090                     	;# 
   173  0091                     	;# 
   174  0092                     	;# 
   175  0093                     	;# 
   176  0093                     	;# 
   177  0093                     	;# 
   178  0094                     	;# 
   179  0095                     	;# 
   180  0096                     	;# 
   181  0097                     	;# 
   182  0098                     	;# 
   183  0099                     	;# 
   184  009A                     	;# 
   185  009B                     	;# 
   186  009C                     	;# 
   187  009D                     	;# 
   188  009E                     	;# 
   189  009F                     	;# 
   190  0105                     	;# 
   191  0107                     	;# 
   192  0108                     	;# 
   193  0109                     	;# 
   194  010C                     	;# 
   195  010C                     	;# 
   196  010D                     	;# 
   197  010E                     	;# 
   198  010F                     	;# 
   199  0185                     	;# 
   200  0187                     	;# 
   201  0188                     	;# 
   202  0189                     	;# 
   203  018C                     	;# 
   204  018D                     	;# 
   205  0008                     _PORTD	set	8
   206  0007                     _PORTC	set	7
   207  0039                     _RC1	set	57
   208  0038                     _RC0	set	56
   209  003A                     _RC2	set	58
   210  0088                     _TRISD	set	136
   211  0087                     _TRISC	set	135
   212                           
   213                           	psect	cinit
   214  07FC                     start_initialization:	
   215                           ; #config settings
   216                           
   217  07FC                     __initialization:
   218  07FC                     end_of_initialization:	
   219                           ;End of C runtime variable initialization code
   220                           
   221  07FC                     __end_of__initialization:
   222  07FC  0183               	clrf	3
   223  07FD  120A  118A  2E3D   	ljmp	_main	;jump to C main() function
   224                           
   225                           	psect	cstackCOMMON
   226  0070                     __pcstackCOMMON:
   227  0070                     ?_main:
   228  0070                     ?_pulse:	
   229                           ; 1 bytes @ 0x0
   230                           
   231  0070                     ??_pulse:	
   232                           ; 1 bytes @ 0x0
   233                           
   234  0070                     ?___awmod:	
   235                           ; 1 bytes @ 0x0
   236                           
   237  0070                     ___awmod@divisor:	
   238                           ; 2 bytes @ 0x0
   239                           
   240                           
   241                           ; 2 bytes @ 0x0
   242  0070                     	ds	2
   243  0072                     ___awmod@dividend:
   244                           
   245                           ; 2 bytes @ 0x2
   246  0072                     	ds	2
   247  0074                     ??___awmod:
   248                           
   249                           ; 1 bytes @ 0x4
   250  0074                     	ds	1
   251  0075                     ___awmod@counter:
   252                           
   253                           ; 1 bytes @ 0x5
   254  0075                     	ds	1
   255  0076                     ___awmod@sign:
   256                           
   257                           ; 1 bytes @ 0x6
   258  0076                     	ds	1
   259  0077                     ?___awdiv:
   260  0077                     ___awdiv@divisor:	
   261                           ; 2 bytes @ 0x7
   262                           
   263                           
   264                           ; 2 bytes @ 0x7
   265  0077                     	ds	2
   266  0079                     ___awdiv@dividend:
   267                           
   268                           ; 2 bytes @ 0x9
   269  0079                     	ds	2
   270  007B                     ??___awdiv:
   271                           
   272                           ; 1 bytes @ 0xB
   273  007B                     	ds	1
   274  007C                     ??_LCD:
   275                           
   276                           ; 1 bytes @ 0xC
   277  007C                     	ds	1
   278  007D                     LCD@a:
   279                           
   280                           ; 1 bytes @ 0xD
   281  007D                     	ds	1
   282  007E                     ??_display:
   283  007E                     ??_main:	
   284                           ; 1 bytes @ 0xE
   285                           
   286                           
   287                           	psect	cstackBANK0
   288  0020                     __pcstackBANK0:	
   289                           ; 1 bytes @ 0xE
   290                           
   291  0020                     ___awdiv@counter:
   292                           
   293                           ; 1 bytes @ 0x0
   294  0020                     	ds	1
   295  0021                     ___awdiv@sign:
   296                           
   297                           ; 1 bytes @ 0x1
   298  0021                     	ds	1
   299  0022                     ___awdiv@quotient:
   300                           
   301                           ; 2 bytes @ 0x2
   302  0022                     	ds	2
   303  0024                     ?_LCD:
   304  0024                     LCD@h:	
   305                           ; 1 bytes @ 0x4
   306                           
   307                           
   308                           ; 2 bytes @ 0x4
   309  0024                     	ds	2
   310  0026                     ?_display:
   311  0026                     display@b:	
   312                           ; 1 bytes @ 0x6
   313                           
   314                           
   315                           ; 2 bytes @ 0x6
   316  0026                     	ds	2
   317  0028                     _display$661:
   318                           
   319                           ; 2 bytes @ 0x8
   320  0028                     	ds	2
   321  002A                     _display$660:
   322                           
   323                           ; 2 bytes @ 0xA
   324  002A                     	ds	2
   325                           
   326                           	psect	maintext
   327  063D                     __pmaintext:	
   328 ;;
   329 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   330 ;;
   331 ;; *************** function _main *****************
   332 ;; Defined at:
   333 ;;		line 15 in file "4 BIT NUMBER PRINT.c"
   334 ;; Parameters:    Size  Location     Type
   335 ;;		None
   336 ;; Auto vars:     Size  Location     Type
   337 ;;		None
   338 ;; Return value:  Size  Location     Type
   339 ;;                  1    wreg      void 
   340 ;; Registers used:
   341 ;;		wreg, status,2, status,0, pclath, cstack
   342 ;; Tracked objects:
   343 ;;		On entry : B00/0
   344 ;;		On exit  : 0/0
   345 ;;		Unchanged: 0/0
   346 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   347 ;;      Params:         0       0       0       0       0
   348 ;;      Locals:         0       0       0       0       0
   349 ;;      Temps:          0       0       0       0       0
   350 ;;      Totals:         0       0       0       0       0
   351 ;;Total ram usage:        0 bytes
   352 ;; Hardware stack levels required when called: 3
   353 ;; This function calls:
   354 ;;		_LCD
   355 ;;		_display
   356 ;; This function is called by:
   357 ;;		Startup code after reset
   358 ;; This function uses a non-reentrant model
   359 ;;
   360                           
   361                           
   362                           ;psect for function _main
   363  063D                     _main:
   364  063D                     l843:	
   365                           ;incstack = 0
   366                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   367                           
   368  063D  1683               	bsf	3,5	;RP0=1, select bank1
   369  063E  1303               	bcf	3,6	;RP1=0, select bank1
   370  063F  0187               	clrf	7	;volatile
   371  0640  0188               	clrf	8	;volatile
   372  0641                     l845:
   373  0641  1283               	bcf	3,5	;RP0=0, select bank0
   374  0642  1303               	bcf	3,6	;RP1=0, select bank0
   375  0643  0807               	movf	7,w	;volatile
   376  0644                     l847:
   377  0644  0188               	clrf	8	;volatile
   378  0645                     l849:
   379  0645  3000               	movlw	0
   380  0646  00A4               	movwf	LCD@h
   381  0647  00A5               	movwf	LCD@h+1
   382  0648  3002               	movlw	2
   383  0649  120A  118A  2614  120A  118A  	fcall	_LCD
   384  064E                     l851:
   385  064E  3000               	movlw	0
   386  064F  1283               	bcf	3,5	;RP0=0, select bank0
   387  0650  1303               	bcf	3,6	;RP1=0, select bank0
   388  0651  00A4               	movwf	LCD@h
   389  0652  00A5               	movwf	LCD@h+1
   390  0653  3028               	movlw	40
   391  0654  120A  118A  2614  120A  118A  	fcall	_LCD
   392  0659                     l853:
   393  0659  3000               	movlw	0
   394  065A  1283               	bcf	3,5	;RP0=0, select bank0
   395  065B  1303               	bcf	3,6	;RP1=0, select bank0
   396  065C  00A4               	movwf	LCD@h
   397  065D  00A5               	movwf	LCD@h+1
   398  065E  300E               	movlw	14
   399  065F  120A  118A  2614  120A  118A  	fcall	_LCD
   400  0664                     l855:
   401  0664  30D7               	movlw	215
   402  0665  1283               	bcf	3,5	;RP0=0, select bank0
   403  0666  1303               	bcf	3,6	;RP1=0, select bank0
   404  0667  00A6               	movwf	display@b
   405  0668  300D               	movlw	13
   406  0669  00A7               	movwf	display@b+1
   407  066A  120A  118A  2735  120A  118A  	fcall	_display
   408  066F  2E64               	goto	l855
   409  0670  120A  118A  2800   	ljmp	start
   410  0673                     __end_of_main:
   411                           
   412                           	psect	text1
   413  0735                     __ptext1:	
   414 ;; *************** function _display *****************
   415 ;; Defined at:
   416 ;;		line 45 in file "4 BIT NUMBER PRINT.c"
   417 ;; Parameters:    Size  Location     Type
   418 ;;  b               2    6[BANK0 ] int 
   419 ;; Auto vars:     Size  Location     Type
   420 ;;		None
   421 ;; Return value:  Size  Location     Type
   422 ;;                  1    wreg      void 
   423 ;; Registers used:
   424 ;;		wreg, status,2, status,0, pclath, cstack
   425 ;; Tracked objects:
   426 ;;		On entry : 0/0
   427 ;;		On exit  : 0/0
   428 ;;		Unchanged: 0/0
   429 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   430 ;;      Params:         0       2       0       0       0
   431 ;;      Locals:         0       4       0       0       0
   432 ;;      Temps:          0       0       0       0       0
   433 ;;      Totals:         0       6       0       0       0
   434 ;;Total ram usage:        6 bytes
   435 ;; Hardware stack levels used: 1
   436 ;; Hardware stack levels required when called: 2
   437 ;; This function calls:
   438 ;;		_LCD
   439 ;;		___awdiv
   440 ;;		___awmod
   441 ;; This function is called by:
   442 ;;		_main
   443 ;; This function uses a non-reentrant model
   444 ;;
   445                           
   446                           
   447                           ;psect for function _display
   448  0735                     _display:
   449  0735                     l841:	
   450                           ;incstack = 0
   451                           ; Regs used in _display: [wreg+status,2+status,0+pclath+cstack]
   452                           
   453  0735  3000               	movlw	0
   454  0736  1283               	bcf	3,5	;RP0=0, select bank0
   455  0737  1303               	bcf	3,6	;RP1=0, select bank0
   456  0738  00A4               	movwf	LCD@h
   457  0739  00A5               	movwf	LCD@h+1
   458  073A  3080               	movlw	128
   459  073B  120A  118A  2614  120A  118A  	fcall	_LCD
   460  0740  3001               	movlw	1
   461  0741  1283               	bcf	3,5	;RP0=0, select bank0
   462  0742  1303               	bcf	3,6	;RP1=0, select bank0
   463  0743  00A4               	movwf	LCD@h
   464  0744  3000               	movlw	0
   465  0745  00A5               	movwf	LCD@h+1
   466  0746  30E8               	movlw	232
   467  0747  00F7               	movwf	___awdiv@divisor
   468  0748  3003               	movlw	3
   469  0749  00F8               	movwf	___awdiv@divisor+1
   470  074A  0827               	movf	display@b+1,w
   471  074B  00FA               	movwf	___awdiv@dividend+1
   472  074C  0826               	movf	display@b,w
   473  074D  00F9               	movwf	___awdiv@dividend
   474  074E  120A  118A  26CC  120A  118A  	fcall	___awdiv
   475  0753  0877               	movf	?___awdiv,w
   476  0754  3E30               	addlw	48
   477  0755  120A  118A  2614  120A  118A  	fcall	_LCD
   478  075A  3001               	movlw	1
   479  075B  1283               	bcf	3,5	;RP0=0, select bank0
   480  075C  1303               	bcf	3,6	;RP1=0, select bank0
   481  075D  00A4               	movwf	LCD@h
   482  075E  3000               	movlw	0
   483  075F  00A5               	movwf	LCD@h+1
   484  0760  3064               	movlw	100
   485  0761  00F7               	movwf	___awdiv@divisor
   486  0762  3000               	movlw	0
   487  0763  00F8               	movwf	___awdiv@divisor+1
   488  0764  0827               	movf	display@b+1,w
   489  0765  00F3               	movwf	___awmod@dividend+1
   490  0766  0826               	movf	display@b,w
   491  0767  00F2               	movwf	___awmod@dividend
   492  0768  30E8               	movlw	232
   493  0769  00F0               	movwf	___awmod@divisor
   494  076A  3003               	movlw	3
   495  076B  00F1               	movwf	___awmod@divisor+1
   496  076C  120A  118A  2673  120A  118A  	fcall	___awmod
   497  0771  0871               	movf	?___awmod+1,w
   498  0772  00FA               	movwf	___awdiv@dividend+1
   499  0773  0870               	movf	?___awmod,w
   500  0774  00F9               	movwf	___awdiv@dividend
   501  0775  120A  118A  26CC  120A  118A  	fcall	___awdiv
   502  077A  0877               	movf	?___awdiv,w
   503  077B  3E30               	addlw	48
   504  077C  120A  118A  2614  120A  118A  	fcall	_LCD
   505  0781  1283               	bcf	3,5	;RP0=0, select bank0
   506  0782  1303               	bcf	3,6	;RP1=0, select bank0
   507  0783  0827               	movf	display@b+1,w
   508  0784  00F3               	movwf	___awmod@dividend+1
   509  0785  0826               	movf	display@b,w
   510  0786  00F2               	movwf	___awmod@dividend
   511  0787  30E8               	movlw	232
   512  0788  00F0               	movwf	___awmod@divisor
   513  0789  3003               	movlw	3
   514  078A  00F1               	movwf	___awmod@divisor+1
   515  078B  120A  118A  2673  120A  118A  	fcall	___awmod
   516  0790  0871               	movf	?___awmod+1,w
   517  0791  1283               	bcf	3,5	;RP0=0, select bank0
   518  0792  1303               	bcf	3,6	;RP1=0, select bank0
   519  0793  00AB               	movwf	_display$660+1
   520  0794  0870               	movf	?___awmod,w
   521  0795  00AA               	movwf	_display$660
   522  0796  3001               	movlw	1
   523  0797  00A4               	movwf	LCD@h
   524  0798  3000               	movlw	0
   525  0799  00A5               	movwf	LCD@h+1
   526  079A  300A               	movlw	10
   527  079B  00F7               	movwf	___awdiv@divisor
   528  079C  3000               	movlw	0
   529  079D  00F8               	movwf	___awdiv@divisor+1
   530  079E  082B               	movf	_display$660+1,w
   531  079F  00F3               	movwf	___awmod@dividend+1
   532  07A0  082A               	movf	_display$660,w
   533  07A1  00F2               	movwf	___awmod@dividend
   534  07A2  3064               	movlw	100
   535  07A3  00F0               	movwf	___awmod@divisor
   536  07A4  3000               	movlw	0
   537  07A5  00F1               	movwf	___awmod@divisor+1
   538  07A6  120A  118A  2673  120A  118A  	fcall	___awmod
   539  07AB  0871               	movf	?___awmod+1,w
   540  07AC  00FA               	movwf	___awdiv@dividend+1
   541  07AD  0870               	movf	?___awmod,w
   542  07AE  00F9               	movwf	___awdiv@dividend
   543  07AF  120A  118A  26CC  120A  118A  	fcall	___awdiv
   544  07B4  0877               	movf	?___awdiv,w
   545  07B5  3E30               	addlw	48
   546  07B6  120A  118A  2614  120A  118A  	fcall	_LCD
   547  07BB  1283               	bcf	3,5	;RP0=0, select bank0
   548  07BC  1303               	bcf	3,6	;RP1=0, select bank0
   549  07BD  0827               	movf	display@b+1,w
   550  07BE  00F3               	movwf	___awmod@dividend+1
   551  07BF  0826               	movf	display@b,w
   552  07C0  00F2               	movwf	___awmod@dividend
   553  07C1  30E8               	movlw	232
   554  07C2  00F0               	movwf	___awmod@divisor
   555  07C3  3003               	movlw	3
   556  07C4  00F1               	movwf	___awmod@divisor+1
   557  07C5  120A  118A  2673  120A  118A  	fcall	___awmod
   558  07CA  0871               	movf	?___awmod+1,w
   559  07CB  1283               	bcf	3,5	;RP0=0, select bank0
   560  07CC  1303               	bcf	3,6	;RP1=0, select bank0
   561  07CD  00AB               	movwf	_display$660+1
   562  07CE  0870               	movf	?___awmod,w
   563  07CF  00AA               	movwf	_display$660
   564  07D0  082B               	movf	_display$660+1,w
   565  07D1  00F3               	movwf	___awmod@dividend+1
   566  07D2  082A               	movf	_display$660,w
   567  07D3  00F2               	movwf	___awmod@dividend
   568  07D4  3064               	movlw	100
   569  07D5  00F0               	movwf	___awmod@divisor
   570  07D6  3000               	movlw	0
   571  07D7  00F1               	movwf	___awmod@divisor+1
   572  07D8  120A  118A  2673  120A  118A  	fcall	___awmod
   573  07DD  0871               	movf	?___awmod+1,w
   574  07DE  1283               	bcf	3,5	;RP0=0, select bank0
   575  07DF  1303               	bcf	3,6	;RP1=0, select bank0
   576  07E0  00A9               	movwf	_display$661+1
   577  07E1  0870               	movf	?___awmod,w
   578  07E2  00A8               	movwf	_display$661
   579  07E3  3001               	movlw	1
   580  07E4  00A4               	movwf	LCD@h
   581  07E5  3000               	movlw	0
   582  07E6  00A5               	movwf	LCD@h+1
   583  07E7  300A               	movlw	10
   584  07E8  00F0               	movwf	___awmod@divisor
   585  07E9  3000               	movlw	0
   586  07EA  00F1               	movwf	___awmod@divisor+1
   587  07EB  0829               	movf	_display$661+1,w
   588  07EC  00F3               	movwf	___awmod@dividend+1
   589  07ED  0828               	movf	_display$661,w
   590  07EE  00F2               	movwf	___awmod@dividend
   591  07EF  120A  118A  2673  120A  118A  	fcall	___awmod
   592  07F4  0870               	movf	?___awmod,w
   593  07F5  3E30               	addlw	48
   594  07F6  120A  118A  2614  120A  118A  	fcall	_LCD
   595  07FB                     l37:
   596  07FB  0008               	return
   597  07FC                     __end_of_display:
   598                           
   599                           	psect	text2
   600  0673                     __ptext2:	
   601 ;; *************** function ___awmod *****************
   602 ;; Defined at:
   603 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awmod.c"
   604 ;; Parameters:    Size  Location     Type
   605 ;;  divisor         2    0[COMMON] int 
   606 ;;  dividend        2    2[COMMON] int 
   607 ;; Auto vars:     Size  Location     Type
   608 ;;  sign            1    6[COMMON] unsigned char 
   609 ;;  counter         1    5[COMMON] unsigned char 
   610 ;; Return value:  Size  Location     Type
   611 ;;                  2    0[COMMON] int 
   612 ;; Registers used:
   613 ;;		wreg, status,2, status,0
   614 ;; Tracked objects:
   615 ;;		On entry : 0/0
   616 ;;		On exit  : 0/0
   617 ;;		Unchanged: 0/0
   618 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   619 ;;      Params:         4       0       0       0       0
   620 ;;      Locals:         2       0       0       0       0
   621 ;;      Temps:          1       0       0       0       0
   622 ;;      Totals:         7       0       0       0       0
   623 ;;Total ram usage:        7 bytes
   624 ;; Hardware stack levels used: 1
   625 ;; This function calls:
   626 ;;		Nothing
   627 ;; This function is called by:
   628 ;;		_display
   629 ;; This function uses a non-reentrant model
   630 ;;
   631                           
   632                           
   633                           ;psect for function ___awmod
   634  0673                     ___awmod:
   635  0673                     l803:	
   636                           ;incstack = 0
   637                           ; Regs used in ___awmod: [wreg+status,2+status,0]
   638                           
   639  0673  01F6               	clrf	___awmod@sign
   640  0674                     l805:
   641  0674  1FF3               	btfss	___awmod@dividend+1,7
   642  0675  2E77               	goto	u361
   643  0676  2E78               	goto	u360
   644  0677                     u361:
   645  0677  2E7F               	goto	l811
   646  0678                     u360:
   647  0678                     l807:
   648  0678  09F2               	comf	___awmod@dividend,f
   649  0679  09F3               	comf	___awmod@dividend+1,f
   650  067A  0AF2               	incf	___awmod@dividend,f
   651  067B  1903               	skipnz
   652  067C  0AF3               	incf	___awmod@dividend+1,f
   653  067D                     l809:
   654  067D  01F6               	clrf	___awmod@sign
   655  067E  0AF6               	incf	___awmod@sign,f
   656  067F                     l811:
   657  067F  1FF1               	btfss	___awmod@divisor+1,7
   658  0680  2E82               	goto	u371
   659  0681  2E83               	goto	u370
   660  0682                     u371:
   661  0682  2E88               	goto	l815
   662  0683                     u370:
   663  0683                     l813:
   664  0683  09F0               	comf	___awmod@divisor,f
   665  0684  09F1               	comf	___awmod@divisor+1,f
   666  0685  0AF0               	incf	___awmod@divisor,f
   667  0686  1903               	skipnz
   668  0687  0AF1               	incf	___awmod@divisor+1,f
   669  0688                     l815:
   670  0688  0870               	movf	___awmod@divisor,w
   671  0689  0471               	iorwf	___awmod@divisor+1,w
   672  068A  1903               	btfsc	3,2
   673  068B  2E8D               	goto	u381
   674  068C  2E8E               	goto	u380
   675  068D                     u381:
   676  068D  2EBD               	goto	l833
   677  068E                     u380:
   678  068E                     l817:
   679  068E  01F5               	clrf	___awmod@counter
   680  068F  0AF5               	incf	___awmod@counter,f
   681  0690  2E9C               	goto	l823
   682  0691                     l819:
   683  0691  3001               	movlw	1
   684  0692                     u395:
   685  0692  1003               	clrc
   686  0693  0DF0               	rlf	___awmod@divisor,f
   687  0694  0DF1               	rlf	___awmod@divisor+1,f
   688  0695  3EFF               	addlw	-1
   689  0696  1D03               	skipz
   690  0697  2E92               	goto	u395
   691  0698                     l821:
   692  0698  3001               	movlw	1
   693  0699  00F4               	movwf	??___awmod
   694  069A  0874               	movf	??___awmod,w
   695  069B  07F5               	addwf	___awmod@counter,f
   696  069C                     l823:
   697  069C  1FF1               	btfss	___awmod@divisor+1,7
   698  069D  2E9F               	goto	u401
   699  069E  2EA0               	goto	u400
   700  069F                     u401:
   701  069F  2E91               	goto	l819
   702  06A0                     u400:
   703  06A0                     l825:
   704  06A0  0871               	movf	___awmod@divisor+1,w
   705  06A1  0273               	subwf	___awmod@dividend+1,w
   706  06A2  1D03               	skipz
   707  06A3  2EA6               	goto	u415
   708  06A4  0870               	movf	___awmod@divisor,w
   709  06A5  0272               	subwf	___awmod@dividend,w
   710  06A6                     u415:
   711  06A6  1C03               	skipc
   712  06A7  2EA9               	goto	u411
   713  06A8  2EAA               	goto	u410
   714  06A9                     u411:
   715  06A9  2EB0               	goto	l829
   716  06AA                     u410:
   717  06AA                     l827:
   718  06AA  0870               	movf	___awmod@divisor,w
   719  06AB  02F2               	subwf	___awmod@dividend,f
   720  06AC  0871               	movf	___awmod@divisor+1,w
   721  06AD  1C03               	skipc
   722  06AE  03F3               	decf	___awmod@dividend+1,f
   723  06AF  02F3               	subwf	___awmod@dividend+1,f
   724  06B0                     l829:
   725  06B0  3001               	movlw	1
   726  06B1                     u425:
   727  06B1  1003               	clrc
   728  06B2  0CF1               	rrf	___awmod@divisor+1,f
   729  06B3  0CF0               	rrf	___awmod@divisor,f
   730  06B4  3EFF               	addlw	-1
   731  06B5  1D03               	skipz
   732  06B6  2EB1               	goto	u425
   733  06B7                     l831:
   734  06B7  3001               	movlw	1
   735  06B8  02F5               	subwf	___awmod@counter,f
   736  06B9  1D03               	btfss	3,2
   737  06BA  2EBC               	goto	u431
   738  06BB  2EBD               	goto	u430
   739  06BC                     u431:
   740  06BC  2EA0               	goto	l825
   741  06BD                     u430:
   742  06BD                     l833:
   743  06BD  0876               	movf	___awmod@sign,w
   744  06BE  1903               	btfsc	3,2
   745  06BF  2EC1               	goto	u441
   746  06C0  2EC2               	goto	u440
   747  06C1                     u441:
   748  06C1  2EC7               	goto	l837
   749  06C2                     u440:
   750  06C2                     l835:
   751  06C2  09F2               	comf	___awmod@dividend,f
   752  06C3  09F3               	comf	___awmod@dividend+1,f
   753  06C4  0AF2               	incf	___awmod@dividend,f
   754  06C5  1903               	skipnz
   755  06C6  0AF3               	incf	___awmod@dividend+1,f
   756  06C7                     l837:
   757  06C7  0873               	movf	___awmod@dividend+1,w
   758  06C8  00F1               	movwf	?___awmod+1
   759  06C9  0872               	movf	___awmod@dividend,w
   760  06CA  00F0               	movwf	?___awmod
   761  06CB                     l289:
   762  06CB  0008               	return
   763  06CC                     __end_of___awmod:
   764                           
   765                           	psect	text3
   766  06CC                     __ptext3:	
   767 ;; *************** function ___awdiv *****************
   768 ;; Defined at:
   769 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awdiv.c"
   770 ;; Parameters:    Size  Location     Type
   771 ;;  divisor         2    7[COMMON] int 
   772 ;;  dividend        2    9[COMMON] int 
   773 ;; Auto vars:     Size  Location     Type
   774 ;;  quotient        2    2[BANK0 ] int 
   775 ;;  sign            1    1[BANK0 ] unsigned char 
   776 ;;  counter         1    0[BANK0 ] unsigned char 
   777 ;; Return value:  Size  Location     Type
   778 ;;                  2    7[COMMON] int 
   779 ;; Registers used:
   780 ;;		wreg, status,2, status,0
   781 ;; Tracked objects:
   782 ;;		On entry : 0/0
   783 ;;		On exit  : 0/0
   784 ;;		Unchanged: 0/0
   785 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   786 ;;      Params:         4       0       0       0       0
   787 ;;      Locals:         0       4       0       0       0
   788 ;;      Temps:          1       0       0       0       0
   789 ;;      Totals:         5       4       0       0       0
   790 ;;Total ram usage:        9 bytes
   791 ;; Hardware stack levels used: 1
   792 ;; This function calls:
   793 ;;		Nothing
   794 ;; This function is called by:
   795 ;;		_display
   796 ;; This function uses a non-reentrant model
   797 ;;
   798                           
   799                           
   800                           ;psect for function ___awdiv
   801  06CC                     ___awdiv:
   802  06CC                     l759:	
   803                           ;incstack = 0
   804                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
   805                           
   806  06CC  1283               	bcf	3,5	;RP0=0, select bank0
   807  06CD  1303               	bcf	3,6	;RP1=0, select bank0
   808  06CE  01A1               	clrf	___awdiv@sign
   809  06CF                     l761:
   810  06CF  1FF8               	btfss	___awdiv@divisor+1,7
   811  06D0  2ED2               	goto	u261
   812  06D1  2ED3               	goto	u260
   813  06D2                     u261:
   814  06D2  2EDA               	goto	l767
   815  06D3                     u260:
   816  06D3                     l763:
   817  06D3  09F7               	comf	___awdiv@divisor,f
   818  06D4  09F8               	comf	___awdiv@divisor+1,f
   819  06D5  0AF7               	incf	___awdiv@divisor,f
   820  06D6  1903               	skipnz
   821  06D7  0AF8               	incf	___awdiv@divisor+1,f
   822  06D8                     l765:
   823  06D8  01A1               	clrf	___awdiv@sign
   824  06D9  0AA1               	incf	___awdiv@sign,f
   825  06DA                     l767:
   826  06DA  1FFA               	btfss	___awdiv@dividend+1,7
   827  06DB  2EDD               	goto	u271
   828  06DC  2EDE               	goto	u270
   829  06DD                     u271:
   830  06DD  2EE7               	goto	l773
   831  06DE                     u270:
   832  06DE                     l769:
   833  06DE  09F9               	comf	___awdiv@dividend,f
   834  06DF  09FA               	comf	___awdiv@dividend+1,f
   835  06E0  0AF9               	incf	___awdiv@dividend,f
   836  06E1  1903               	skipnz
   837  06E2  0AFA               	incf	___awdiv@dividend+1,f
   838  06E3                     l771:
   839  06E3  3001               	movlw	1
   840  06E4  00FB               	movwf	??___awdiv
   841  06E5  087B               	movf	??___awdiv,w
   842  06E6  06A1               	xorwf	___awdiv@sign,f
   843  06E7                     l773:
   844  06E7  01A2               	clrf	___awdiv@quotient
   845  06E8  01A3               	clrf	___awdiv@quotient+1
   846  06E9                     l775:
   847  06E9  0877               	movf	___awdiv@divisor,w
   848  06EA  0478               	iorwf	___awdiv@divisor+1,w
   849  06EB  1903               	btfsc	3,2
   850  06EC  2EEE               	goto	u281
   851  06ED  2EEF               	goto	u280
   852  06EE                     u281:
   853  06EE  2F26               	goto	l795
   854  06EF                     u280:
   855  06EF                     l777:
   856  06EF  01A0               	clrf	___awdiv@counter
   857  06F0  0AA0               	incf	___awdiv@counter,f
   858  06F1  2EFD               	goto	l783
   859  06F2                     l779:
   860  06F2  3001               	movlw	1
   861  06F3                     u295:
   862  06F3  1003               	clrc
   863  06F4  0DF7               	rlf	___awdiv@divisor,f
   864  06F5  0DF8               	rlf	___awdiv@divisor+1,f
   865  06F6  3EFF               	addlw	-1
   866  06F7  1D03               	skipz
   867  06F8  2EF3               	goto	u295
   868  06F9                     l781:
   869  06F9  3001               	movlw	1
   870  06FA  00FB               	movwf	??___awdiv
   871  06FB  087B               	movf	??___awdiv,w
   872  06FC  07A0               	addwf	___awdiv@counter,f
   873  06FD                     l783:
   874  06FD  1FF8               	btfss	___awdiv@divisor+1,7
   875  06FE  2F00               	goto	u301
   876  06FF  2F01               	goto	u300
   877  0700                     u301:
   878  0700  2EF2               	goto	l779
   879  0701                     u300:
   880  0701                     l785:
   881  0701  3001               	movlw	1
   882  0702                     u315:
   883  0702  1003               	clrc
   884  0703  0DA2               	rlf	___awdiv@quotient,f
   885  0704  0DA3               	rlf	___awdiv@quotient+1,f
   886  0705  3EFF               	addlw	-1
   887  0706  1D03               	skipz
   888  0707  2F02               	goto	u315
   889  0708  0878               	movf	___awdiv@divisor+1,w
   890  0709  027A               	subwf	___awdiv@dividend+1,w
   891  070A  1D03               	skipz
   892  070B  2F0E               	goto	u325
   893  070C  0877               	movf	___awdiv@divisor,w
   894  070D  0279               	subwf	___awdiv@dividend,w
   895  070E                     u325:
   896  070E  1C03               	skipc
   897  070F  2F11               	goto	u321
   898  0710  2F12               	goto	u320
   899  0711                     u321:
   900  0711  2F19               	goto	l791
   901  0712                     u320:
   902  0712                     l787:
   903  0712  0877               	movf	___awdiv@divisor,w
   904  0713  02F9               	subwf	___awdiv@dividend,f
   905  0714  0878               	movf	___awdiv@divisor+1,w
   906  0715  1C03               	skipc
   907  0716  03FA               	decf	___awdiv@dividend+1,f
   908  0717  02FA               	subwf	___awdiv@dividend+1,f
   909  0718                     l789:
   910  0718  1422               	bsf	___awdiv@quotient,0
   911  0719                     l791:
   912  0719  3001               	movlw	1
   913  071A                     u335:
   914  071A  1003               	clrc
   915  071B  0CF8               	rrf	___awdiv@divisor+1,f
   916  071C  0CF7               	rrf	___awdiv@divisor,f
   917  071D  3EFF               	addlw	-1
   918  071E  1D03               	skipz
   919  071F  2F1A               	goto	u335
   920  0720                     l793:
   921  0720  3001               	movlw	1
   922  0721  02A0               	subwf	___awdiv@counter,f
   923  0722  1D03               	btfss	3,2
   924  0723  2F25               	goto	u341
   925  0724  2F26               	goto	u340
   926  0725                     u341:
   927  0725  2F01               	goto	l785
   928  0726                     u340:
   929  0726                     l795:
   930  0726  0821               	movf	___awdiv@sign,w
   931  0727  1903               	btfsc	3,2
   932  0728  2F2A               	goto	u351
   933  0729  2F2B               	goto	u350
   934  072A                     u351:
   935  072A  2F30               	goto	l799
   936  072B                     u350:
   937  072B                     l797:
   938  072B  09A2               	comf	___awdiv@quotient,f
   939  072C  09A3               	comf	___awdiv@quotient+1,f
   940  072D  0AA2               	incf	___awdiv@quotient,f
   941  072E  1903               	skipnz
   942  072F  0AA3               	incf	___awdiv@quotient+1,f
   943  0730                     l799:
   944  0730  0823               	movf	___awdiv@quotient+1,w
   945  0731  00F8               	movwf	?___awdiv+1
   946  0732  0822               	movf	___awdiv@quotient,w
   947  0733  00F7               	movwf	?___awdiv
   948  0734                     l276:
   949  0734  0008               	return
   950  0735                     __end_of___awdiv:
   951                           
   952                           	psect	text4
   953  0614                     __ptext4:	
   954 ;; *************** function _LCD *****************
   955 ;; Defined at:
   956 ;;		line 36 in file "4 BIT NUMBER PRINT.c"
   957 ;; Parameters:    Size  Location     Type
   958 ;;  a               1    wreg     unsigned char 
   959 ;;  h               2    4[BANK0 ] int 
   960 ;; Auto vars:     Size  Location     Type
   961 ;;  a               1   13[COMMON] unsigned char 
   962 ;; Return value:  Size  Location     Type
   963 ;;                  1    wreg      void 
   964 ;; Registers used:
   965 ;;		wreg, status,2, status,0, pclath, cstack
   966 ;; Tracked objects:
   967 ;;		On entry : 0/0
   968 ;;		On exit  : 0/0
   969 ;;		Unchanged: 0/0
   970 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   971 ;;      Params:         0       2       0       0       0
   972 ;;      Locals:         1       0       0       0       0
   973 ;;      Temps:          1       0       0       0       0
   974 ;;      Totals:         2       2       0       0       0
   975 ;;Total ram usage:        4 bytes
   976 ;; Hardware stack levels used: 1
   977 ;; Hardware stack levels required when called: 1
   978 ;; This function calls:
   979 ;;		_pulse
   980 ;; This function is called by:
   981 ;;		_main
   982 ;;		_display
   983 ;; This function uses a non-reentrant model
   984 ;;
   985                           
   986                           
   987                           ;psect for function _LCD
   988  0614                     _LCD:
   989                           
   990                           ;incstack = 0
   991                           ; Regs used in _LCD: [wreg+status,2+status,0+pclath+cstack]
   992                           ;LCD@a stored from wreg
   993  0614  00FD               	movwf	LCD@a
   994  0615                     l749:
   995  0615  1283               	bcf	3,5	;RP0=0, select bank0
   996  0616  1303               	bcf	3,6	;RP1=0, select bank0
   997  0617  1824               	btfsc	LCD@h,0
   998  0618  2E1A               	goto	u231
   999  0619  2E1E               	goto	u230
  1000  061A                     u231:
  1001  061A  1283               	bcf	3,5	;RP0=0, select bank0
  1002  061B  1303               	bcf	3,6	;RP1=0, select bank0
  1003  061C  1407               	bsf	7,0	;volatile
  1004  061D  2E21               	goto	u244
  1005  061E                     u230:
  1006  061E  1283               	bcf	3,5	;RP0=0, select bank0
  1007  061F  1303               	bcf	3,6	;RP1=0, select bank0
  1008  0620  1007               	bcf	7,0	;volatile
  1009  0621                     u244:
  1010  0621  1087               	bcf	7,1	;volatile
  1011  0622                     l751:
  1012  0622  087D               	movf	LCD@a,w
  1013  0623  00FC               	movwf	??_LCD
  1014  0624  3004               	movlw	4
  1015  0625                     u255:
  1016  0625  1003               	clrc
  1017  0626  0CFC               	rrf	??_LCD,f
  1018  0627  3EFF               	addlw	-1
  1019  0628  1D03               	skipz
  1020  0629  2E25               	goto	u255
  1021  062A  087C               	movf	??_LCD,w
  1022  062B  390F               	andlw	15
  1023  062C  0088               	movwf	8	;volatile
  1024  062D                     l753:
  1025  062D  120A  118A  25FB  120A  118A  	fcall	_pulse
  1026  0632                     l755:
  1027  0632  087D               	movf	LCD@a,w
  1028  0633  390F               	andlw	15
  1029  0634  1283               	bcf	3,5	;RP0=0, select bank0
  1030  0635  1303               	bcf	3,6	;RP1=0, select bank0
  1031  0636  0088               	movwf	8	;volatile
  1032  0637                     l757:
  1033  0637  120A  118A  25FB  120A  118A  	fcall	_pulse
  1034  063C                     l34:
  1035  063C  0008               	return
  1036  063D                     __end_of_LCD:
  1037                           
  1038                           	psect	text5
  1039  05FB                     __ptext5:	
  1040 ;; *************** function _pulse *****************
  1041 ;; Defined at:
  1042 ;;		line 29 in file "4 BIT NUMBER PRINT.c"
  1043 ;; Parameters:    Size  Location     Type
  1044 ;;		None
  1045 ;; Auto vars:     Size  Location     Type
  1046 ;;		None
  1047 ;; Return value:  Size  Location     Type
  1048 ;;                  1    wreg      void 
  1049 ;; Registers used:
  1050 ;;		wreg
  1051 ;; Tracked objects:
  1052 ;;		On entry : 0/0
  1053 ;;		On exit  : 0/0
  1054 ;;		Unchanged: 0/0
  1055 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1056 ;;      Params:         0       0       0       0       0
  1057 ;;      Locals:         0       0       0       0       0
  1058 ;;      Temps:          2       0       0       0       0
  1059 ;;      Totals:         2       0       0       0       0
  1060 ;;Total ram usage:        2 bytes
  1061 ;; Hardware stack levels used: 1
  1062 ;; This function calls:
  1063 ;;		Nothing
  1064 ;; This function is called by:
  1065 ;;		_LCD
  1066 ;; This function uses a non-reentrant model
  1067 ;;
  1068                           
  1069                           
  1070                           ;psect for function _pulse
  1071  05FB                     _pulse:
  1072  05FB                     l743:	
  1073                           ;incstack = 0
  1074                           ; Regs used in _pulse: [wreg]
  1075                           
  1076  05FB  1283               	bcf	3,5	;RP0=0, select bank0
  1077  05FC  1303               	bcf	3,6	;RP1=0, select bank0
  1078  05FD  1507               	bsf	7,2	;volatile
  1079  05FE                     l745:
  1080  05FE  3041               	movlw	65
  1081  05FF  00F1               	movwf	??_pulse+1
  1082  0600  30EE               	movlw	238
  1083  0601  00F0               	movwf	??_pulse
  1084  0602                     u457:
  1085  0602  0BF0               	decfsz	??_pulse,f
  1086  0603  2E02               	goto	u457
  1087  0604  0BF1               	decfsz	??_pulse+1,f
  1088  0605  2E02               	goto	u457
  1089  0606  0000               	nop
  1090  0607                     l747:
  1091  0607  1283               	bcf	3,5	;RP0=0, select bank0
  1092  0608  1303               	bcf	3,6	;RP1=0, select bank0
  1093  0609  1107               	bcf	7,2	;volatile
  1094  060A  3041               	movlw	65
  1095  060B  00F1               	movwf	??_pulse+1
  1096  060C  30EE               	movlw	238
  1097  060D  00F0               	movwf	??_pulse
  1098  060E                     u467:
  1099  060E  0BF0               	decfsz	??_pulse,f
  1100  060F  2E0E               	goto	u467
  1101  0610  0BF1               	decfsz	??_pulse+1,f
  1102  0611  2E0E               	goto	u467
  1103  0612  0000               	nop
  1104  0613                     l31:
  1105  0613  0008               	return
  1106  0614                     __end_of_pulse:
  1107  007E                     btemp	set	126	;btemp
  1108  007E                     wtemp0	set	126

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     12      12
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_LCD
    _display->_LCD
    ___awdiv->___awmod
    _LCD->___awdiv

Critical Paths under _main in BANK0

    _main->_display
    _display->_LCD
    _LCD->___awdiv

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    3545
                                _LCD
                            _display
 ---------------------------------------------------------------------------------
 (1) _display                                              6     4      2    2871
                                              6 BANK0      6     4      2
                                _LCD
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4    1208
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     756
                                              7 COMMON     5     1      4
                                              0 BANK0      4     4      0
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _LCD                                                  4     2      2     674
                                             12 COMMON     2     2      0
                                              4 BANK0      2     0      2
                            ___awdiv (ARG)
                            ___awmod (ARG)
                              _pulse
 ---------------------------------------------------------------------------------
 (3) _pulse                                                2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD
     ___awdiv (ARG)
       ___awmod (ARG)
     ___awmod (ARG)
     _pulse (ARG)
   _display
     _LCD
     ___awdiv
     ___awmod

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      C       C       5       15.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Mon Mar 13 15:52:20 2023

                     l31 0613                       l34 063C                       l37 07FB  
           ___awdiv@sign 0021                      l276 0734                      l289 06CB  
                    l811 067F                      l803 0673                      l821 0698  
                    l813 0683                      l805 0674                      l743 05FB  
                    l751 0622                      l831 06B7                      l823 069C  
                    l815 0688                      l807 0678                      l745 05FE  
                    l753 062D                      l761 06CF                      l825 06A0  
                    l817 068E                      l833 06BD                      l809 067D  
                    l841 0735                      l747 0607                      l755 0632  
                    l771 06E3                      l763 06D3                      l835 06C2  
                    l827 06AA                      l819 0691                      l851 064E  
                    l843 063D                      l757 0637                      l749 0615  
                    l781 06F9                      l773 06E7                      l765 06D8  
                    l837 06C7                      l829 06B0                      l853 0659  
                    l845 0641                      l791 0719                      l783 06FD  
                    l775 06E9                      l767 06DA                      l759 06CC  
                    l855 0664                      l847 0644                      l793 0720  
                    l785 0701                      l777 06EF                      l769 06DE  
                    l849 0645                      l787 0712                      l779 06F2  
                    l795 0726                      l797 072B                      l789 0718  
                    l799 0730                      _LCD 0614                      _RC0 0038  
                    _RC1 0039                      _RC2 003A                      u300 0701  
                    u301 0700                      u230 061E                      u231 061A  
                    u320 0712                      u400 06A0                      u321 0711  
                    u401 069F                      u410 06AA                      u315 0702  
                    u411 06A9                      u244 0621                      u340 0726  
                    u260 06D3                      u341 0725                      u325 070E  
                    u261 06D2                      u350 072B                      u270 06DE  
                    u430 06BD                      u255 0625                      u351 072A  
                    u335 071A                      u271 06DD                      u431 06BC  
                    u415 06A6                      u280 06EF                      u440 06C2  
                    u360 0678                      u281 06EE                      u441 06C1  
                    u425 06B1                      u361 0677                      u370 0683  
                    u371 0682                      u380 068E                      u381 068D  
                    u295 06F3                      u457 0602                      u467 060E  
                    u395 0692             ___awmod@sign 0076                     LCD@a 007D  
                   LCD@h 0024                     ?_LCD 0024                     _main 063D  
                   btemp 007E                     start 0000                    ??_LCD 007C  
                  ?_main 0070          __end_of___awdiv 0735          __end_of___awmod 06CC  
        ___awdiv@divisor 0077          ___awdiv@counter 0020                    _PORTC 0007  
                  _PORTD 0008                    _TRISC 0087                    _TRISD 0088  
        __end_of_display 07FC                    _pulse 05FB                    status 0003  
                  wtemp0 007E          __initialization 07FC             __end_of_main 0673  
                 ??_main 007E         ___awdiv@dividend 0079                   ?_pulse 0070  
              ??___awdiv 007B                ??___awmod 0074         ___awdiv@quotient 0022  
        ___awmod@divisor 0070          ___awmod@counter 0075                ??_display 007E  
__end_of__initialization 07FC           __pcstackCOMMON 0070            __end_of_pulse 0614  
                ??_pulse 0070               __pmaintext 063D                  ___awdiv 06CC  
                ___awmod 0673                  __ptext1 0735                  __ptext2 0673  
                __ptext3 06CC                  __ptext4 0614                  __ptext5 05FB  
                _display 0735             __size_of_LCD 0029         ___awmod@dividend 0072  
   end_of_initialization 07FC      start_initialization 07FC              __end_of_LCD 063D  
              ___latbits 0002            __pcstackBANK0 0020                 ?___awdiv 0077  
               ?___awmod 0070                 ?_display 0026           __size_of_pulse 0019  
            _display$660 002A              _display$661 0028         __size_of___awdiv 0069  
       __size_of___awmod 0059         __size_of_display 00C7            __size_of_main 0036  
               display@b 0026  
