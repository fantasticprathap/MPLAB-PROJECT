

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Thu Mar 16 11:15:25 2023

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	inittext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	dabs	1,0x7E,2
    12  0000                     
    13                           ; Version 2.20
    14                           ; Generated 12/02/2020 GMT
    15                           ; 
    16                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    17                           ; All rights reserved.
    18                           ; 
    19                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    20                           ; 
    21                           ; Redistribution and use in source and binary forms, with or without modification, are
    22                           ; permitted provided that the following conditions are met:
    23                           ; 
    24                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    25                           ;        conditions and the following disclaimer.
    26                           ; 
    27                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    28                           ;        of conditions and the following disclaimer in the documentation and/or other
    29                           ;        materials provided with the distribution.
    30                           ; 
    31                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    32                           ;        software without specific prior written permission.
    33                           ; 
    34                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    35                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    36                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    37                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    38                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    39                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    40                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    41                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    42                           ; 
    43                           ; 
    44                           ; Code-generator required, PIC16F887 Definitions
    45                           ; 
    46                           ; SFR Addresses
    47  0000                     	;# 
    48  0001                     	;# 
    49  0002                     	;# 
    50  0003                     	;# 
    51  0004                     	;# 
    52  0005                     	;# 
    53  0006                     	;# 
    54  0007                     	;# 
    55  0008                     	;# 
    56  0009                     	;# 
    57  000A                     	;# 
    58  000B                     	;# 
    59  000C                     	;# 
    60  000D                     	;# 
    61  000E                     	;# 
    62  000E                     	;# 
    63  000F                     	;# 
    64  0010                     	;# 
    65  0011                     	;# 
    66  0012                     	;# 
    67  0013                     	;# 
    68  0014                     	;# 
    69  0015                     	;# 
    70  0015                     	;# 
    71  0016                     	;# 
    72  0017                     	;# 
    73  0018                     	;# 
    74  0019                     	;# 
    75  001A                     	;# 
    76  001B                     	;# 
    77  001B                     	;# 
    78  001C                     	;# 
    79  001D                     	;# 
    80  001E                     	;# 
    81  001F                     	;# 
    82  0081                     	;# 
    83  0085                     	;# 
    84  0086                     	;# 
    85  0087                     	;# 
    86  0088                     	;# 
    87  0089                     	;# 
    88  008C                     	;# 
    89  008D                     	;# 
    90  008E                     	;# 
    91  008F                     	;# 
    92  0090                     	;# 
    93  0091                     	;# 
    94  0092                     	;# 
    95  0093                     	;# 
    96  0093                     	;# 
    97  0093                     	;# 
    98  0094                     	;# 
    99  0095                     	;# 
   100  0096                     	;# 
   101  0097                     	;# 
   102  0098                     	;# 
   103  0099                     	;# 
   104  009A                     	;# 
   105  009B                     	;# 
   106  009C                     	;# 
   107  009D                     	;# 
   108  009E                     	;# 
   109  009F                     	;# 
   110  0105                     	;# 
   111  0107                     	;# 
   112  0108                     	;# 
   113  0109                     	;# 
   114  010C                     	;# 
   115  010C                     	;# 
   116  010D                     	;# 
   117  010E                     	;# 
   118  010F                     	;# 
   119  0185                     	;# 
   120  0187                     	;# 
   121  0188                     	;# 
   122  0189                     	;# 
   123  018C                     	;# 
   124  018D                     	;# 
   125  0000                     	;# 
   126  0001                     	;# 
   127  0002                     	;# 
   128  0003                     	;# 
   129  0004                     	;# 
   130  0005                     	;# 
   131  0006                     	;# 
   132  0007                     	;# 
   133  0008                     	;# 
   134  0009                     	;# 
   135  000A                     	;# 
   136  000B                     	;# 
   137  000C                     	;# 
   138  000D                     	;# 
   139  000E                     	;# 
   140  000E                     	;# 
   141  000F                     	;# 
   142  0010                     	;# 
   143  0011                     	;# 
   144  0012                     	;# 
   145  0013                     	;# 
   146  0014                     	;# 
   147  0015                     	;# 
   148  0015                     	;# 
   149  0016                     	;# 
   150  0017                     	;# 
   151  0018                     	;# 
   152  0019                     	;# 
   153  001A                     	;# 
   154  001B                     	;# 
   155  001B                     	;# 
   156  001C                     	;# 
   157  001D                     	;# 
   158  001E                     	;# 
   159  001F                     	;# 
   160  0081                     	;# 
   161  0085                     	;# 
   162  0086                     	;# 
   163  0087                     	;# 
   164  0088                     	;# 
   165  0089                     	;# 
   166  008C                     	;# 
   167  008D                     	;# 
   168  008E                     	;# 
   169  008F                     	;# 
   170  0090                     	;# 
   171  0091                     	;# 
   172  0092                     	;# 
   173  0093                     	;# 
   174  0093                     	;# 
   175  0093                     	;# 
   176  0094                     	;# 
   177  0095                     	;# 
   178  0096                     	;# 
   179  0097                     	;# 
   180  0098                     	;# 
   181  0099                     	;# 
   182  009A                     	;# 
   183  009B                     	;# 
   184  009C                     	;# 
   185  009D                     	;# 
   186  009E                     	;# 
   187  009F                     	;# 
   188  0105                     	;# 
   189  0107                     	;# 
   190  0108                     	;# 
   191  0109                     	;# 
   192  010C                     	;# 
   193  010C                     	;# 
   194  010D                     	;# 
   195  010E                     	;# 
   196  010F                     	;# 
   197  0185                     	;# 
   198  0187                     	;# 
   199  0188                     	;# 
   200  0189                     	;# 
   201  018C                     	;# 
   202  018D                     	;# 
   203                           
   204                           	psect	idataBANK0
   205  0727                     __pidataBANK0:
   206                           
   207                           ;initializer for main@F1265
   208  0727  343F               	retlw	63
   209  0728  3400               	retlw	0
   210  0729  3406               	retlw	6
   211  072A  3400               	retlw	0
   212  072B  345B               	retlw	91
   213  072C  3400               	retlw	0
   214  072D  344F               	retlw	79
   215  072E  3400               	retlw	0
   216  072F  3466               	retlw	102
   217  0730  3400               	retlw	0
   218  0731  346D               	retlw	109
   219  0732  3400               	retlw	0
   220  0733  347D               	retlw	125
   221  0734  3400               	retlw	0
   222  0735  3407               	retlw	7
   223  0736  3400               	retlw	0
   224  0737  347F               	retlw	127
   225  0738  3400               	retlw	0
   226  0739  3467               	retlw	103
   227  073A  3400               	retlw	0
   228  0008                     _PORTD	set	8
   229  0007                     _PORTC	set	7
   230  0039                     _RC1	set	57
   231  0038                     _RC0	set	56
   232  0088                     _TRISD	set	136
   233  0087                     _TRISC	set	135
   234                           
   235                           	psect	cinit
   236  07EE                     start_initialization:	
   237                           ; #config settings
   238                           
   239  07EE                     __initialization:
   240                           
   241                           ; Initialize objects allocated to BANK0
   242  07EE  1383               	bcf	3,7	;select IRP bank0
   243  07EF  304C               	movlw	low (__pdataBANK0+20)
   244  07F0  00FD               	movwf	btemp+-1
   245  07F1  3007               	movlw	high __pidataBANK0
   246  07F2  00FE               	movwf	btemp
   247  07F3  3027               	movlw	low __pidataBANK0
   248  07F4  00FF               	movwf	btemp+1
   249  07F5  3038               	movlw	low __pdataBANK0
   250  07F6  0084               	movwf	4
   251  07F7  120A  118A  2718  120A  118A  	fcall	init_ram0
   252  07FC                     end_of_initialization:	
   253                           ;End of C runtime variable initialization code
   254                           
   255  07FC                     __end_of__initialization:
   256  07FC  0183               	clrf	3
   257  07FD  120A  118A  2F3B   	ljmp	_main	;jump to C main() function
   258                           
   259                           	psect	dataBANK0
   260  0038                     __pdataBANK0:
   261  0038                     main@F1265:
   262  0038                     	ds	20
   263                           
   264                           	psect	inittext
   265  0714                     init_fetch0:	
   266                           ;	Called with low address in FSR and high address in W
   267                           
   268  0714  087E               	movf	btemp,w
   269  0715  008A               	movwf	10
   270  0716  087F               	movf	btemp+1,w
   271  0717  0082               	movwf	2
   272  0718                     init_ram0:	
   273                           ;Called with:
   274                           ;	high address of idata address in btemp 
   275                           ;	low address of idata address in btemp+1 
   276                           ;	low address of data in FSR
   277                           ;	high address + 1 of data in btemp-1
   278                           
   279  0718  120A  118A  2714  120A  118A  	fcall	init_fetch0
   280  071D  0080               	movwf	0
   281  071E  0A84               	incf	4,f
   282  071F  0804               	movf	4,w
   283  0720  067D               	xorwf	btemp+-1,w
   284  0721  1903               	btfsc	3,2
   285  0722  3400               	retlw	0
   286  0723  0AFF               	incf	btemp+1,f
   287  0724  1903               	btfsc	3,2
   288  0725  0AFE               	incf	btemp,f
   289  0726  2F18               	goto	init_ram0
   290                           
   291                           	psect	cstackCOMMON
   292  0070                     __pcstackCOMMON:
   293  0070                     ?_main:
   294  0070                     ??_main:	
   295                           ; 1 bytes @ 0x0
   296                           
   297                           
   298                           ; 1 bytes @ 0x0
   299  0070                     	ds	4
   300                           
   301                           	psect	cstackBANK0
   302  0020                     __pcstackBANK0:
   303  0020                     main@cc:
   304                           
   305                           ; 20 bytes @ 0x0
   306  0020                     	ds	20
   307  0034                     main@flag:
   308                           
   309                           ; 2 bytes @ 0x14
   310  0034                     	ds	2
   311  0036                     main@count:
   312                           
   313                           ; 2 bytes @ 0x16
   314  0036                     	ds	2
   315                           
   316                           	psect	maintext
   317  073B                     __pmaintext:	
   318 ;;
   319 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   320 ;;
   321 ;; *************** function _main *****************
   322 ;; Defined at:
   323 ;;		line 9 in file "USING INPUT TO PRINT NUMBER IN 7 SEG.c"
   324 ;; Parameters:    Size  Location     Type
   325 ;;		None
   326 ;; Auto vars:     Size  Location     Type
   327 ;;  cc             20    0[BANK0 ] int [10]
   328 ;;  count           2   22[BANK0 ] int 
   329 ;;  flag            2   20[BANK0 ] int 
   330 ;;  i               2    0        int 
   331 ;; Return value:  Size  Location     Type
   332 ;;                  1    wreg      void 
   333 ;; Registers used:
   334 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
   335 ;; Tracked objects:
   336 ;;		On entry : B00/0
   337 ;;		On exit  : 0/0
   338 ;;		Unchanged: 0/0
   339 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   340 ;;      Params:         0       0       0       0       0
   341 ;;      Locals:         0      24       0       0       0
   342 ;;      Temps:          4       0       0       0       0
   343 ;;      Totals:         4      24       0       0       0
   344 ;;Total ram usage:       28 bytes
   345 ;; This function calls:
   346 ;;		Nothing
   347 ;; This function is called by:
   348 ;;		Startup code after reset
   349 ;; This function uses a non-reentrant model
   350 ;;
   351                           
   352                           
   353                           ;psect for function _main
   354  073B                     _main:
   355  073B                     l670:	
   356                           ;incstack = 0
   357                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1]
   358                           
   359                           
   360                           ;USING INPUT TO PRINT NUMBER IN 7 SEG.c: 11:     TRISC=0X03;
   361  073B  3003               	movlw	3
   362  073C  1683               	bsf	3,5	;RP0=1, select bank1
   363  073D  1303               	bcf	3,6	;RP1=0, select bank1
   364  073E  0087               	movwf	7	;volatile
   365  073F                     l672:
   366                           
   367                           ;USING INPUT TO PRINT NUMBER IN 7 SEG.c: 12:     TRISD=0X00;
   368  073F  0188               	clrf	8	;volatile
   369  0740                     l674:
   370                           
   371                           ;USING INPUT TO PRINT NUMBER IN 7 SEG.c: 13:     PORTC=0X00;
   372  0740  1283               	bcf	3,5	;RP0=0, select bank0
   373  0741  1303               	bcf	3,6	;RP1=0, select bank0
   374  0742  0187               	clrf	7	;volatile
   375  0743                     l676:
   376                           
   377                           ;USING INPUT TO PRINT NUMBER IN 7 SEG.c: 14:     PORTD=0X00;
   378  0743  0188               	clrf	8	;volatile
   379  0744                     l678:
   380                           
   381                           ;USING INPUT TO PRINT NUMBER IN 7 SEG.c: 15:     int cc[ ]={ 0X3F,0X06,0X5B,0X4F,0X66,0X
      +                          6D,0X7D,0X07,0X7F,0X67 };
   382  0744  3020               	movlw	main@cc& (0+255)
   383  0745  0084               	movwf	4
   384  0746  3038               	movlw	low main@F1265
   385  0747  00F0               	movwf	??_main
   386  0748  0804               	movf	4,w
   387  0749  00F1               	movwf	??_main+1
   388  074A  3014               	movlw	20
   389  074B  00F2               	movwf	??_main+2
   390  074C                     u120:
   391  074C  0870               	movf	??_main,w
   392  074D  0084               	movwf	4
   393  074E  1383               	bcf	3,7	;select IRP bank0
   394  074F  0800               	movf	0,w
   395  0750  00F3               	movwf	??_main+3
   396  0751  0AF0               	incf	??_main,f
   397  0752  0871               	movf	??_main+1,w
   398  0753  0084               	movwf	4
   399  0754  0873               	movf	??_main+3,w
   400  0755  0080               	movwf	0
   401  0756  0AF1               	incf	??_main+1,f
   402  0757  0BF2               	decfsz	??_main+2,f
   403  0758  2F4C               	goto	u120
   404  0759                     l680:
   405                           
   406                           ;USING INPUT TO PRINT NUMBER IN 7 SEG.c: 16:     int count=0;
   407  0759  01B6               	clrf	main@count
   408  075A  01B7               	clrf	main@count+1
   409  075B                     l682:
   410  075B                     l684:
   411                           
   412                           ;USING INPUT TO PRINT NUMBER IN 7 SEG.c: 19:     {;USING INPUT TO PRINT NUMBER IN 7 SEG.
      +                          c: 20:         if ((RC0==1)&&(RC1==0)&&(flag==0))
   413  075B  1C07               	btfss	7,0	;volatile
   414  075C  2F5E               	goto	u131
   415  075D  2F5F               	goto	u130
   416  075E                     u131:
   417  075E  2F6D               	goto	l692
   418  075F                     u130:
   419  075F                     l686:
   420  075F  1887               	btfsc	7,1	;volatile
   421  0760  2F62               	goto	u141
   422  0761  2F63               	goto	u140
   423  0762                     u141:
   424  0762  2F6D               	goto	l692
   425  0763                     u140:
   426  0763                     l688:
   427  0763  0834               	movf	main@flag,w
   428  0764  0435               	iorwf	main@flag+1,w
   429  0765  1D03               	btfss	3,2
   430  0766  2F68               	goto	u151
   431  0767  2F69               	goto	u150
   432  0768                     u151:
   433  0768  2F6D               	goto	l692
   434  0769                     u150:
   435  0769                     l690:
   436                           
   437                           ;USING INPUT TO PRINT NUMBER IN 7 SEG.c: 21:         {;USING INPUT TO PRINT NUMBER IN 7 
      +                          SEG.c: 22:             flag=1;
   438  0769  3001               	movlw	1
   439  076A  00B4               	movwf	main@flag
   440  076B  3000               	movlw	0
   441  076C  00B5               	movwf	main@flag+1
   442  076D                     l692:
   443                           
   444                           ;USING INPUT TO PRINT NUMBER IN 7 SEG.c: 24:         if (flag==1)
   445  076D  0334               	decf	main@flag,w
   446  076E  0435               	iorwf	main@flag+1,w
   447  076F  1D03               	btfss	3,2
   448  0770  2F72               	goto	u161
   449  0771  2F73               	goto	u160
   450  0772                     u161:
   451  0772  2F7F               	goto	l696
   452  0773                     u160:
   453  0773                     l694:
   454                           
   455                           ;USING INPUT TO PRINT NUMBER IN 7 SEG.c: 25:         {;USING INPUT TO PRINT NUMBER IN 7 
      +                          SEG.c: 26:             count++;
   456  0773  3001               	movlw	1
   457  0774  07B6               	addwf	main@count,f
   458  0775  1803               	skipnc
   459  0776  0AB7               	incf	main@count+1,f
   460  0777  3000               	movlw	0
   461  0778  07B7               	addwf	main@count+1,f
   462                           
   463                           ;USING INPUT TO PRINT NUMBER IN 7 SEG.c: 27:             flag++;
   464  0779  3001               	movlw	1
   465  077A  07B4               	addwf	main@flag,f
   466  077B  1803               	skipnc
   467  077C  0AB5               	incf	main@flag+1,f
   468  077D  3000               	movlw	0
   469  077E  07B5               	addwf	main@flag+1,f
   470  077F                     l696:
   471                           
   472                           ;USING INPUT TO PRINT NUMBER IN 7 SEG.c: 29:         if ((RC0==0)&&(RC1==0))
   473  077F  1807               	btfsc	7,0	;volatile
   474  0780  2F82               	goto	u171
   475  0781  2F83               	goto	u170
   476  0782                     u171:
   477  0782  2F89               	goto	l702
   478  0783                     u170:
   479  0783                     l698:
   480  0783  1887               	btfsc	7,1	;volatile
   481  0784  2F86               	goto	u181
   482  0785  2F87               	goto	u180
   483  0786                     u181:
   484  0786  2F89               	goto	l702
   485  0787                     u180:
   486  0787                     l700:
   487                           
   488                           ;USING INPUT TO PRINT NUMBER IN 7 SEG.c: 30:         {;USING INPUT TO PRINT NUMBER IN 7 
      +                          SEG.c: 31:             flag=0;
   489  0787  01B4               	clrf	main@flag
   490  0788  01B5               	clrf	main@flag+1
   491  0789                     l702:
   492                           
   493                           ;USING INPUT TO PRINT NUMBER IN 7 SEG.c: 33:         if((count<11)&&(count>0))
   494  0789  0837               	movf	main@count+1,w
   495  078A  3A80               	xorlw	128
   496  078B  00FF               	movwf	btemp+1
   497  078C  3080               	movlw	128
   498  078D  027F               	subwf	btemp+1,w
   499  078E  1D03               	skipz
   500  078F  2F92               	goto	u195
   501  0790  300B               	movlw	11
   502  0791  0236               	subwf	main@count,w
   503  0792                     u195:
   504  0792  1803               	skipnc
   505  0793  2F95               	goto	u191
   506  0794  2F96               	goto	u190
   507  0795                     u191:
   508  0795  2FBF               	goto	l710
   509  0796                     u190:
   510  0796                     l704:
   511  0796  1283               	bcf	3,5	;RP0=0, select bank0
   512  0797  1303               	bcf	3,6	;RP1=0, select bank0
   513  0798  0837               	movf	main@count+1,w
   514  0799  3A80               	xorlw	128
   515  079A  00FF               	movwf	btemp+1
   516  079B  3080               	movlw	128
   517  079C  027F               	subwf	btemp+1,w
   518  079D  1D03               	skipz
   519  079E  2FA1               	goto	u205
   520  079F  3001               	movlw	1
   521  07A0  0236               	subwf	main@count,w
   522  07A1                     u205:
   523  07A1  1C03               	skipc
   524  07A2  2FA4               	goto	u201
   525  07A3  2FA5               	goto	u200
   526  07A4                     u201:
   527  07A4  2FBF               	goto	l710
   528  07A5                     u200:
   529  07A5                     l706:
   530                           
   531                           ;USING INPUT TO PRINT NUMBER IN 7 SEG.c: 34:         {;USING INPUT TO PRINT NUMBER IN 7 
      +                          SEG.c: 35:             PORTD|=cc[count-1];
   532  07A5  1283               	bcf	3,5	;RP0=0, select bank0
   533  07A6  1303               	bcf	3,6	;RP1=0, select bank0
   534  07A7  0836               	movf	main@count,w
   535  07A8  00F0               	movwf	??_main
   536  07A9  0770               	addwf	??_main,w
   537  07AA  3EFE               	addlw	254
   538  07AB  3E20               	addlw	(low (main@cc| 0))& (0+255)
   539  07AC  0084               	movwf	4
   540  07AD  1383               	bcf	3,7	;select IRP bank0
   541  07AE  0800               	movf	0,w
   542  07AF  00F1               	movwf	??_main+1
   543  07B0  0871               	movf	??_main+1,w
   544  07B1  0488               	iorwf	8,f	;volatile
   545  07B2                     l708:
   546                           
   547                           ;USING INPUT TO PRINT NUMBER IN 7 SEG.c: 36:             _delay((unsigned long)((2000)*(
      +                          400000/4000.0)));
   548  07B2  3002               	movlw	2
   549  07B3  00F2               	movwf	??_main+2
   550  07B4  3004               	movlw	4
   551  07B5  00F1               	movwf	??_main+1
   552  07B6  30BA               	movlw	186
   553  07B7  00F0               	movwf	??_main
   554  07B8                     u237:
   555  07B8  0BF0               	decfsz	??_main,f
   556  07B9  2FB8               	goto	u237
   557  07BA  0BF1               	decfsz	??_main+1,f
   558  07BB  2FB8               	goto	u237
   559  07BC  0BF2               	decfsz	??_main+2,f
   560  07BD  2FB8               	goto	u237
   561  07BE  0000               	nop
   562  07BF                     l710:
   563                           
   564                           ;USING INPUT TO PRINT NUMBER IN 7 SEG.c: 38:         if(count>=11)
   565  07BF  1283               	bcf	3,5	;RP0=0, select bank0
   566  07C0  1303               	bcf	3,6	;RP1=0, select bank0
   567  07C1  0837               	movf	main@count+1,w
   568  07C2  3A80               	xorlw	128
   569  07C3  00FF               	movwf	btemp+1
   570  07C4  3080               	movlw	128
   571  07C5  027F               	subwf	btemp+1,w
   572  07C6  1D03               	skipz
   573  07C7  2FCA               	goto	u215
   574  07C8  300B               	movlw	11
   575  07C9  0236               	subwf	main@count,w
   576  07CA                     u215:
   577  07CA  1C03               	skipc
   578  07CB  2FCD               	goto	u211
   579  07CC  2FCE               	goto	u210
   580  07CD                     u211:
   581  07CD  2FE1               	goto	l714
   582  07CE                     u210:
   583  07CE                     l712:
   584                           
   585                           ;USING INPUT TO PRINT NUMBER IN 7 SEG.c: 39:         {;USING INPUT TO PRINT NUMBER IN 7 
      +                          SEG.c: 40:             _delay((unsigned long)((2000)*(400000/4000.0)));
   586  07CE  3002               	movlw	2
   587  07CF  00F2               	movwf	??_main+2
   588  07D0  3004               	movlw	4
   589  07D1  00F1               	movwf	??_main+1
   590  07D2  30BA               	movlw	186
   591  07D3  00F0               	movwf	??_main
   592  07D4                     u247:
   593  07D4  0BF0               	decfsz	??_main,f
   594  07D5  2FD4               	goto	u247
   595  07D6  0BF1               	decfsz	??_main+1,f
   596  07D7  2FD4               	goto	u247
   597  07D8  0BF2               	decfsz	??_main+2,f
   598  07D9  2FD4               	goto	u247
   599  07DA  0000               	nop
   600                           
   601                           ;USING INPUT TO PRINT NUMBER IN 7 SEG.c: 41:             count=1;
   602  07DB  3001               	movlw	1
   603  07DC  1283               	bcf	3,5	;RP0=0, select bank0
   604  07DD  1303               	bcf	3,6	;RP1=0, select bank0
   605  07DE  00B6               	movwf	main@count
   606  07DF  3000               	movlw	0
   607  07E0  00B7               	movwf	main@count+1
   608  07E1                     l714:
   609                           
   610                           ;USING INPUT TO PRINT NUMBER IN 7 SEG.c: 43:         if(RC1==1)
   611  07E1  1283               	bcf	3,5	;RP0=0, select bank0
   612  07E2  1303               	bcf	3,6	;RP1=0, select bank0
   613  07E3  1C87               	btfss	7,1	;volatile
   614  07E4  2FE6               	goto	u221
   615  07E5  2FE7               	goto	u220
   616  07E6                     u221:
   617  07E6  2F5B               	goto	l684
   618  07E7                     u220:
   619  07E7                     l716:
   620                           
   621                           ;USING INPUT TO PRINT NUMBER IN 7 SEG.c: 44:         {;USING INPUT TO PRINT NUMBER IN 7 
      +                          SEG.c: 45:             count=0;
   622  07E7  01B6               	clrf	main@count
   623  07E8  01B7               	clrf	main@count+1
   624                           
   625                           ;USING INPUT TO PRINT NUMBER IN 7 SEG.c: 46:             PORTD=0X00;
   626  07E9  0188               	clrf	8	;volatile
   627  07EA  2F5B               	goto	l684
   628  07EB  120A  118A  2800   	ljmp	start
   629  07EE                     __end_of_main:
   630  007E                     btemp	set	126	;btemp
   631  007E                     wtemp0	set	126

Data Sizes:
    Strings     0
    Constant    0
    Data        20
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      4       4
    BANK0            80     24      44
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                30    30      0     164
                                              0 COMMON     4     4      0
                                              0 BANK0     24    24      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     18      2C       5       55.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      4       4       1       28.6%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      30      12        0.0%
ABS                  0      0      30       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Thu Mar 16 11:15:25 2023

                      pc 0002                       fsr 0004                      l700 0787  
                    l710 07BF                      l702 0789                      l712 07CE  
                    l704 0796                      l714 07E1                      l706 07A5  
                    l716 07E7                      l708 07B2                      l670 073B  
                    l680 0759                      l672 073F                      l690 0769  
                    l682 075B                      l674 0740                      l692 076D  
                    l684 075B                      l676 0743                      l694 0773  
                    l686 075F                      l678 0744                      l696 077F  
                    l688 0763                      l698 0783                      _RC0 0038  
                    _RC1 0039                      u200 07A5                      u120 074C  
                    u201 07A4                      u210 07CE                      u130 075F  
                    u211 07CD                      u131 075E                      u220 07E7  
                    u140 0763                      u221 07E6                      u205 07A1  
                    u141 0762                      u150 0769                      u215 07CA  
                    u151 0768                      u160 0773                      u161 0772  
                    u170 0783                      u171 0782                      u180 0787  
                    u237 07B8                      u181 0786                      u190 0796  
                    u247 07D4                      u191 0795                      u195 0792  
                    fsr0 0004                      indf 0000                     _main 073B  
                   btemp 007E                     start 0000                    ?_main 0070  
                  _PORTC 0007                    _PORTD 0008                    _TRISC 0087  
                  _TRISD 0088                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 07EE             __end_of_main 07EE  
                 ??_main 0070                   main@cc 0020  __end_of__initialization 07FC  
         __pcstackCOMMON 0070             __pidataBANK0 0727               __pmaintext 073B  
   end_of_initialization 07FC      start_initialization 07EE               init_fetch0 0714  
            __pdataBANK0 0038                ___latbits 0002            __pcstackBANK0 0020  
              main@F1265 0038                main@count 0036            __size_of_main 00B3  
               main@flag 0034                 init_ram0 0718  
