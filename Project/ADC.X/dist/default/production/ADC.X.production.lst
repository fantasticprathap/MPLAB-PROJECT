

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Tue Apr 04 15:22:03 2023

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    12                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	dabs	1,0x7E,2
    16  0000                     
    17                           ; Version 2.20
    18                           ; Generated 12/02/2020 GMT
    19                           ; 
    20                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC16F887 Definitions
    49                           ; 
    50                           ; SFR Addresses
    51  0000                     	;# 
    52  0001                     	;# 
    53  0002                     	;# 
    54  0003                     	;# 
    55  0004                     	;# 
    56  0005                     	;# 
    57  0006                     	;# 
    58  0007                     	;# 
    59  0008                     	;# 
    60  0009                     	;# 
    61  000A                     	;# 
    62  000B                     	;# 
    63  000C                     	;# 
    64  000D                     	;# 
    65  000E                     	;# 
    66  000E                     	;# 
    67  000F                     	;# 
    68  0010                     	;# 
    69  0011                     	;# 
    70  0012                     	;# 
    71  0013                     	;# 
    72  0014                     	;# 
    73  0015                     	;# 
    74  0015                     	;# 
    75  0016                     	;# 
    76  0017                     	;# 
    77  0018                     	;# 
    78  0019                     	;# 
    79  001A                     	;# 
    80  001B                     	;# 
    81  001B                     	;# 
    82  001C                     	;# 
    83  001D                     	;# 
    84  001E                     	;# 
    85  001F                     	;# 
    86  0081                     	;# 
    87  0085                     	;# 
    88  0086                     	;# 
    89  0087                     	;# 
    90  0088                     	;# 
    91  0089                     	;# 
    92  008C                     	;# 
    93  008D                     	;# 
    94  008E                     	;# 
    95  008F                     	;# 
    96  0090                     	;# 
    97  0091                     	;# 
    98  0092                     	;# 
    99  0093                     	;# 
   100  0093                     	;# 
   101  0093                     	;# 
   102  0094                     	;# 
   103  0095                     	;# 
   104  0096                     	;# 
   105  0097                     	;# 
   106  0098                     	;# 
   107  0099                     	;# 
   108  009A                     	;# 
   109  009B                     	;# 
   110  009C                     	;# 
   111  009D                     	;# 
   112  009E                     	;# 
   113  009F                     	;# 
   114  0105                     	;# 
   115  0107                     	;# 
   116  0108                     	;# 
   117  0109                     	;# 
   118  010C                     	;# 
   119  010C                     	;# 
   120  010D                     	;# 
   121  010E                     	;# 
   122  010F                     	;# 
   123  0185                     	;# 
   124  0187                     	;# 
   125  0188                     	;# 
   126  0189                     	;# 
   127  018C                     	;# 
   128  018D                     	;# 
   129  0000                     	;# 
   130  0001                     	;# 
   131  0002                     	;# 
   132  0003                     	;# 
   133  0004                     	;# 
   134  0005                     	;# 
   135  0006                     	;# 
   136  0007                     	;# 
   137  0008                     	;# 
   138  0009                     	;# 
   139  000A                     	;# 
   140  000B                     	;# 
   141  000C                     	;# 
   142  000D                     	;# 
   143  000E                     	;# 
   144  000E                     	;# 
   145  000F                     	;# 
   146  0010                     	;# 
   147  0011                     	;# 
   148  0012                     	;# 
   149  0013                     	;# 
   150  0014                     	;# 
   151  0015                     	;# 
   152  0015                     	;# 
   153  0016                     	;# 
   154  0017                     	;# 
   155  0018                     	;# 
   156  0019                     	;# 
   157  001A                     	;# 
   158  001B                     	;# 
   159  001B                     	;# 
   160  001C                     	;# 
   161  001D                     	;# 
   162  001E                     	;# 
   163  001F                     	;# 
   164  0081                     	;# 
   165  0085                     	;# 
   166  0086                     	;# 
   167  0087                     	;# 
   168  0088                     	;# 
   169  0089                     	;# 
   170  008C                     	;# 
   171  008D                     	;# 
   172  008E                     	;# 
   173  008F                     	;# 
   174  0090                     	;# 
   175  0091                     	;# 
   176  0092                     	;# 
   177  0093                     	;# 
   178  0093                     	;# 
   179  0093                     	;# 
   180  0094                     	;# 
   181  0095                     	;# 
   182  0096                     	;# 
   183  0097                     	;# 
   184  0098                     	;# 
   185  0099                     	;# 
   186  009A                     	;# 
   187  009B                     	;# 
   188  009C                     	;# 
   189  009D                     	;# 
   190  009E                     	;# 
   191  009F                     	;# 
   192  0105                     	;# 
   193  0107                     	;# 
   194  0108                     	;# 
   195  0109                     	;# 
   196  010C                     	;# 
   197  010C                     	;# 
   198  010D                     	;# 
   199  010E                     	;# 
   200  010F                     	;# 
   201  0185                     	;# 
   202  0187                     	;# 
   203  0188                     	;# 
   204  0189                     	;# 
   205  018C                     	;# 
   206  018D                     	;# 
   207  001E                     _ADRESH	set	30
   208  001F                     _ADCON0	set	31
   209  0009                     _PORTE	set	9
   210  0008                     _PORTD	set	8
   211  0005                     _PORTA	set	5
   212  00F9                     _GO	set	249
   213  0049                     _RE1	set	73
   214  004A                     _RE2	set	74
   215  009E                     _ADRESL	set	158
   216  009F                     _ADCON1	set	159
   217  0089                     _TRISE	set	137
   218  0088                     _TRISD	set	136
   219  0085                     _TRISA	set	133
   220  0189                     _ANSELH	set	393
   221  0188                     _ANSEL	set	392
   222                           
   223                           	psect	cinit
   224  07F4                     start_initialization:	
   225                           ; #config settings
   226                           
   227  07F4                     __initialization:
   228                           
   229                           ; Clear objects allocated to BANK0
   230  07F4  1283               	bcf	3,5	;RP0=0, select bank0
   231  07F5  1303               	bcf	3,6	;RP1=0, select bank0
   232  07F6  01AE               	clrf	__pbssBANK0& (0+127)
   233  07F7  01AF               	clrf	(__pbssBANK0+1)& (0+127)
   234  07F8  01B0               	clrf	(__pbssBANK0+2)& (0+127)
   235  07F9  01B1               	clrf	(__pbssBANK0+3)& (0+127)
   236  07FA  01B2               	clrf	(__pbssBANK0+4)& (0+127)
   237  07FB  01B3               	clrf	(__pbssBANK0+5)& (0+127)
   238  07FC                     end_of_initialization:	
   239                           ;End of C runtime variable initialization code
   240                           
   241  07FC                     __end_of__initialization:
   242  07FC  0183               	clrf	3
   243  07FD  120A  118A  2DBC   	ljmp	_main	;jump to C main() function
   244                           
   245                           	psect	bssBANK0
   246  002E                     __pbssBANK0:
   247  002E                     _DV:
   248  002E                     	ds	2
   249  0030                     _low:
   250  0030                     	ds	2
   251  0032                     _high:
   252  0032                     	ds	2
   253                           
   254                           	psect	cstackCOMMON
   255  0070                     __pcstackCOMMON:
   256  0070                     ?_adc:
   257  0070                     ?_main:	
   258                           ; 1 bytes @ 0x0
   259                           
   260  0070                     ?_pulse:	
   261                           ; 1 bytes @ 0x0
   262                           
   263  0070                     ??_pulse:	
   264                           ; 1 bytes @ 0x0
   265                           
   266  0070                     ?___awmod:	
   267                           ; 1 bytes @ 0x0
   268                           
   269  0070                     ___awmod@divisor:	
   270                           ; 2 bytes @ 0x0
   271                           
   272                           
   273                           ; 2 bytes @ 0x0
   274  0070                     	ds	1
   275  0071                     ?_LCD:
   276  0071                     LCD@g:	
   277                           ; 1 bytes @ 0x1
   278                           
   279                           
   280                           ; 2 bytes @ 0x1
   281  0071                     	ds	1
   282  0072                     ___awmod@dividend:
   283                           
   284                           ; 2 bytes @ 0x2
   285  0072                     	ds	1
   286  0073                     LCD@h:
   287                           
   288                           ; 2 bytes @ 0x3
   289  0073                     	ds	1
   290  0074                     ??___awmod:
   291                           
   292                           ; 1 bytes @ 0x4
   293  0074                     	ds	1
   294  0075                     ??_LCD:
   295  0075                     ___awmod@counter:	
   296                           ; 1 bytes @ 0x5
   297                           
   298                           
   299                           ; 1 bytes @ 0x5
   300  0075                     	ds	1
   301  0076                     ___awmod@sign:
   302                           
   303                           ; 1 bytes @ 0x6
   304  0076                     	ds	1
   305  0077                     ?___awdiv:
   306  0077                     ___awdiv@divisor:	
   307                           ; 2 bytes @ 0x7
   308                           
   309                           
   310                           ; 2 bytes @ 0x7
   311  0077                     	ds	2
   312  0079                     ___awdiv@dividend:
   313                           
   314                           ; 2 bytes @ 0x9
   315  0079                     	ds	2
   316  007B                     ??___awdiv:
   317                           
   318                           ; 1 bytes @ 0xB
   319  007B                     	ds	1
   320  007C                     ??_adc:
   321  007C                     ??_display:	
   322                           ; 1 bytes @ 0xC
   323                           
   324                           
   325                           ; 1 bytes @ 0xC
   326  007C                     	ds	2
   327  007E                     ??_main:
   328                           
   329                           	psect	cstackBANK0
   330  0020                     __pcstackBANK0:	
   331                           ; 1 bytes @ 0xE
   332                           
   333  0020                     ___awdiv@counter:
   334                           
   335                           ; 1 bytes @ 0x0
   336  0020                     	ds	1
   337  0021                     ___awdiv@sign:
   338                           
   339                           ; 1 bytes @ 0x1
   340  0021                     	ds	1
   341  0022                     ___awdiv@quotient:
   342                           
   343                           ; 2 bytes @ 0x2
   344  0022                     	ds	2
   345  0024                     ?_display:
   346  0024                     display@k:	
   347                           ; 1 bytes @ 0x4
   348                           
   349                           
   350                           ; 2 bytes @ 0x4
   351  0024                     	ds	2
   352  0026                     display@a:
   353                           
   354                           ; 2 bytes @ 0x6
   355  0026                     	ds	2
   356  0028                     display@b:
   357                           
   358                           ; 2 bytes @ 0x8
   359  0028                     	ds	2
   360  002A                     display@c:
   361                           
   362                           ; 2 bytes @ 0xA
   363  002A                     	ds	2
   364  002C                     display@d:
   365                           
   366                           ; 2 bytes @ 0xC
   367  002C                     	ds	2
   368                           
   369                           	psect	maintext
   370  05BC                     __pmaintext:	
   371 ;;
   372 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   373 ;;
   374 ;; *************** function _main *****************
   375 ;; Defined at:
   376 ;;		line 17 in file "ADC.c"
   377 ;; Parameters:    Size  Location     Type
   378 ;;		None
   379 ;; Auto vars:     Size  Location     Type
   380 ;;		None
   381 ;; Return value:  Size  Location     Type
   382 ;;                  1    wreg      void 
   383 ;; Registers used:
   384 ;;		wreg, status,2, status,0, pclath, cstack
   385 ;; Tracked objects:
   386 ;;		On entry : B00/0
   387 ;;		On exit  : 0/0
   388 ;;		Unchanged: 0/0
   389 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   390 ;;      Params:         0       0       0       0       0
   391 ;;      Locals:         0       0       0       0       0
   392 ;;      Temps:          0       0       0       0       0
   393 ;;      Totals:         0       0       0       0       0
   394 ;;Total ram usage:        0 bytes
   395 ;; Hardware stack levels required when called: 4
   396 ;; This function calls:
   397 ;;		_LCD
   398 ;;		_adc
   399 ;; This function is called by:
   400 ;;		Startup code after reset
   401 ;; This function uses a non-reentrant model
   402 ;;
   403                           
   404                           
   405                           ;psect for function _main
   406  05BC                     _main:
   407  05BC                     l934:	
   408                           ;incstack = 0
   409                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   410                           
   411                           
   412                           ;ADC.c: 19:     TRISA=0X01;
   413  05BC  3001               	movlw	1
   414  05BD  1683               	bsf	3,5	;RP0=1, select bank1
   415  05BE  1303               	bcf	3,6	;RP1=0, select bank1
   416  05BF  0085               	movwf	5	;volatile
   417  05C0                     l936:
   418                           
   419                           ;ADC.c: 20:     PORTA=0X00;
   420  05C0  1283               	bcf	3,5	;RP0=0, select bank0
   421  05C1  1303               	bcf	3,6	;RP1=0, select bank0
   422  05C2  0185               	clrf	5	;volatile
   423  05C3                     l938:
   424                           
   425                           ;ADC.c: 21:     TRISD=0X00;
   426  05C3  1683               	bsf	3,5	;RP0=1, select bank1
   427  05C4  1303               	bcf	3,6	;RP1=0, select bank1
   428  05C5  0188               	clrf	8	;volatile
   429  05C6                     l940:
   430                           
   431                           ;ADC.c: 22:     PORTD=0X00;
   432  05C6  1283               	bcf	3,5	;RP0=0, select bank0
   433  05C7  1303               	bcf	3,6	;RP1=0, select bank0
   434  05C8  0188               	clrf	8	;volatile
   435  05C9                     l942:
   436                           
   437                           ;ADC.c: 23:     TRISE=0X00;
   438  05C9  1683               	bsf	3,5	;RP0=1, select bank1
   439  05CA  1303               	bcf	3,6	;RP1=0, select bank1
   440  05CB  0189               	clrf	9	;volatile
   441  05CC                     l944:
   442                           
   443                           ;ADC.c: 24:     PORTE=0X00;
   444  05CC  1283               	bcf	3,5	;RP0=0, select bank0
   445  05CD  1303               	bcf	3,6	;RP1=0, select bank0
   446  05CE  0189               	clrf	9	;volatile
   447  05CF                     l946:
   448                           
   449                           ;ADC.c: 25:     ANSEL=0X00;
   450  05CF  1683               	bsf	3,5	;RP0=1, select bank3
   451  05D0  1703               	bsf	3,6	;RP1=1, select bank3
   452  05D1  0188               	clrf	8	;volatile
   453  05D2                     l948:
   454                           
   455                           ;ADC.c: 26:     ANSELH=0X00;
   456  05D2  0189               	clrf	9	;volatile
   457  05D3                     l950:
   458                           
   459                           ;ADC.c: 27:     ADCON1=0x80;
   460  05D3  3080               	movlw	128
   461  05D4  1683               	bsf	3,5	;RP0=1, select bank1
   462  05D5  1303               	bcf	3,6	;RP1=0, select bank1
   463  05D6  009F               	movwf	31	;volatile
   464  05D7                     l952:
   465                           
   466                           ;ADC.c: 28:     LCD(0X38,0);
   467  05D7  3038               	movlw	56
   468  05D8  00F1               	movwf	LCD@g
   469  05D9  3000               	movlw	0
   470  05DA  00F2               	movwf	LCD@g+1
   471  05DB  3000               	movlw	0
   472  05DC  00F3               	movwf	LCD@h
   473  05DD  00F4               	movwf	LCD@h+1
   474  05DE  120A  118A  25AA  120A  118A  	fcall	_LCD
   475  05E3                     l954:
   476                           
   477                           ;ADC.c: 29:     LCD(0X0E,0);
   478  05E3  300E               	movlw	14
   479  05E4  00F1               	movwf	LCD@g
   480  05E5  3000               	movlw	0
   481  05E6  00F2               	movwf	LCD@g+1
   482  05E7  3000               	movlw	0
   483  05E8  00F3               	movwf	LCD@h
   484  05E9  00F4               	movwf	LCD@h+1
   485  05EA  120A  118A  25AA  120A  118A  	fcall	_LCD
   486  05EF                     l956:
   487                           
   488                           ;ADC.c: 32:         adc();
   489  05EF  120A  118A  26B9  120A  118A  	fcall	_adc
   490  05F4                     l47:
   491  05F4  120A  118A  2800   	ljmp	start
   492  05F7                     __end_of_main:
   493                           
   494                           	psect	text1
   495  06B9                     __ptext1:	
   496 ;; *************** function _adc *****************
   497 ;; Defined at:
   498 ;;		line 61 in file "ADC.c"
   499 ;; Parameters:    Size  Location     Type
   500 ;;		None
   501 ;; Auto vars:     Size  Location     Type
   502 ;;		None
   503 ;; Return value:  Size  Location     Type
   504 ;;                  1    wreg      void 
   505 ;; Registers used:
   506 ;;		wreg, status,2, status,0, pclath, cstack
   507 ;; Tracked objects:
   508 ;;		On entry : 0/0
   509 ;;		On exit  : 0/0
   510 ;;		Unchanged: 0/0
   511 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   512 ;;      Params:         0       0       0       0       0
   513 ;;      Locals:         0       0       0       0       0
   514 ;;      Temps:          2       0       0       0       0
   515 ;;      Totals:         2       0       0       0       0
   516 ;;Total ram usage:        2 bytes
   517 ;; Hardware stack levels used: 1
   518 ;; Hardware stack levels required when called: 3
   519 ;; This function calls:
   520 ;;		_display
   521 ;; This function is called by:
   522 ;;		_main
   523 ;; This function uses a non-reentrant model
   524 ;;
   525                           
   526                           
   527                           ;psect for function _adc
   528  06B9                     _adc:
   529  06B9                     l904:	
   530                           ;incstack = 0
   531                           ; Regs used in _adc: [wreg+status,2+status,0+pclath+cstack]
   532                           
   533                           
   534                           ;ADC.c: 63: ADCON0=0X81;
   535  06B9  3081               	movlw	129
   536  06BA  1283               	bcf	3,5	;RP0=0, select bank0
   537  06BB  1303               	bcf	3,6	;RP1=0, select bank0
   538  06BC  009F               	movwf	31	;volatile
   539  06BD                     l906:
   540                           
   541                           ;ADC.c: 64: GO=1;
   542  06BD  149F               	bsf	31,1	;volatile
   543  06BE                     l59:	
   544                           ;ADC.c: 65: while(GO);
   545                           
   546  06BE  189F               	btfsc	31,1	;volatile
   547  06BF  2EC1               	goto	u481
   548  06C0  2EC2               	goto	u480
   549  06C1                     u481:
   550  06C1  2EBE               	goto	l59
   551  06C2                     u480:
   552  06C2                     l908:
   553                           
   554                           ;ADC.c: 66: high=ADRESH;
   555  06C2  081E               	movf	30,w	;volatile
   556  06C3  00FC               	movwf	??_adc
   557  06C4  01FD               	clrf	??_adc+1
   558  06C5  087C               	movf	??_adc,w
   559  06C6  00B2               	movwf	_high
   560  06C7  087D               	movf	??_adc+1,w
   561  06C8  00B3               	movwf	_high+1
   562                           
   563                           ;ADC.c: 67: low=ADRESL;
   564  06C9  1683               	bsf	3,5	;RP0=1, select bank1
   565  06CA  1303               	bcf	3,6	;RP1=0, select bank1
   566  06CB  081E               	movf	30,w	;volatile
   567  06CC  00FC               	movwf	??_adc
   568  06CD  01FD               	clrf	??_adc+1
   569  06CE  087C               	movf	??_adc,w
   570  06CF  1283               	bcf	3,5	;RP0=0, select bank0
   571  06D0  1303               	bcf	3,6	;RP1=0, select bank0
   572  06D1  00B0               	movwf	_low
   573  06D2  087D               	movf	??_adc+1,w
   574  06D3  00B1               	movwf	_low+1
   575  06D4                     l910:
   576                           
   577                           ;ADC.c: 68: if(high==0)
   578  06D4  0832               	movf	_high,w
   579  06D5  0433               	iorwf	_high+1,w
   580  06D6  1D03               	btfss	3,2
   581  06D7  2ED9               	goto	u491
   582  06D8  2EDA               	goto	u490
   583  06D9                     u491:
   584  06D9  2EE7               	goto	l916
   585  06DA                     u490:
   586  06DA                     l912:
   587                           
   588                           ;ADC.c: 69: {;ADC.c: 70: DV=low;
   589  06DA  0831               	movf	_low+1,w
   590  06DB  00AF               	movwf	_DV+1
   591  06DC  0830               	movf	_low,w
   592  06DD  00AE               	movwf	_DV
   593  06DE                     l914:
   594                           
   595                           ;ADC.c: 71: display(DV);
   596  06DE  082F               	movf	_DV+1,w
   597  06DF  00A5               	movwf	display@k+1
   598  06E0  082E               	movf	_DV,w
   599  06E1  00A4               	movwf	display@k
   600  06E2  120A  118A  2735  120A  118A  	fcall	_display
   601  06E7                     l916:
   602                           
   603                           ;ADC.c: 73: if(high==1)
   604  06E7  1283               	bcf	3,5	;RP0=0, select bank0
   605  06E8  1303               	bcf	3,6	;RP1=0, select bank0
   606  06E9  0332               	decf	_high,w
   607  06EA  0433               	iorwf	_high+1,w
   608  06EB  1D03               	btfss	3,2
   609  06EC  2EEE               	goto	u501
   610  06ED  2EEF               	goto	u500
   611  06EE                     u501:
   612  06EE  2F00               	goto	l922
   613  06EF                     u500:
   614  06EF                     l918:
   615                           
   616                           ;ADC.c: 74: {;ADC.c: 75:  DV=low+256;
   617  06EF  0830               	movf	_low,w
   618  06F0  3E00               	addlw	0
   619  06F1  00AE               	movwf	_DV
   620  06F2  0831               	movf	_low+1,w
   621  06F3  1803               	skipnc
   622  06F4  3E01               	addlw	1
   623  06F5  3E01               	addlw	1
   624  06F6  00AF               	movwf	_DV+1
   625  06F7                     l920:
   626                           
   627                           ;ADC.c: 76:  display(DV);
   628  06F7  082F               	movf	_DV+1,w
   629  06F8  00A5               	movwf	display@k+1
   630  06F9  082E               	movf	_DV,w
   631  06FA  00A4               	movwf	display@k
   632  06FB  120A  118A  2735  120A  118A  	fcall	_display
   633  0700                     l922:
   634                           
   635                           ;ADC.c: 78: if(high==2)
   636  0700  3002               	movlw	2
   637  0701  1283               	bcf	3,5	;RP0=0, select bank0
   638  0702  1303               	bcf	3,6	;RP1=0, select bank0
   639  0703  0632               	xorwf	_high,w
   640  0704  0433               	iorwf	_high+1,w
   641  0705  1D03               	btfss	3,2
   642  0706  2F08               	goto	u511
   643  0707  2F09               	goto	u510
   644  0708                     u511:
   645  0708  2F1A               	goto	l928
   646  0709                     u510:
   647  0709                     l924:
   648                           
   649                           ;ADC.c: 79: {;ADC.c: 80: DV=low+512;
   650  0709  0830               	movf	_low,w
   651  070A  3E00               	addlw	0
   652  070B  00AE               	movwf	_DV
   653  070C  0831               	movf	_low+1,w
   654  070D  1803               	skipnc
   655  070E  3E01               	addlw	1
   656  070F  3E02               	addlw	2
   657  0710  00AF               	movwf	_DV+1
   658  0711                     l926:
   659                           
   660                           ;ADC.c: 81: display(DV);
   661  0711  082F               	movf	_DV+1,w
   662  0712  00A5               	movwf	display@k+1
   663  0713  082E               	movf	_DV,w
   664  0714  00A4               	movwf	display@k
   665  0715  120A  118A  2735  120A  118A  	fcall	_display
   666  071A                     l928:
   667                           
   668                           ;ADC.c: 83: if( high==3)
   669  071A  3003               	movlw	3
   670  071B  1283               	bcf	3,5	;RP0=0, select bank0
   671  071C  1303               	bcf	3,6	;RP1=0, select bank0
   672  071D  0632               	xorwf	_high,w
   673  071E  0433               	iorwf	_high+1,w
   674  071F  1D03               	btfss	3,2
   675  0720  2F22               	goto	u521
   676  0721  2F23               	goto	u520
   677  0722                     u521:
   678  0722  2F34               	goto	l66
   679  0723                     u520:
   680  0723                     l930:
   681                           
   682                           ;ADC.c: 84: {;ADC.c: 85:  DV=low+768;
   683  0723  0830               	movf	_low,w
   684  0724  3E00               	addlw	0
   685  0725  00AE               	movwf	_DV
   686  0726  0831               	movf	_low+1,w
   687  0727  1803               	skipnc
   688  0728  3E01               	addlw	1
   689  0729  3E03               	addlw	3
   690  072A  00AF               	movwf	_DV+1
   691  072B                     l932:
   692                           
   693                           ;ADC.c: 86:  display(DV);
   694  072B  082F               	movf	_DV+1,w
   695  072C  00A5               	movwf	display@k+1
   696  072D  082E               	movf	_DV,w
   697  072E  00A4               	movwf	display@k
   698  072F  120A  118A  2735  120A  118A  	fcall	_display
   699  0734                     l66:
   700  0734  0008               	return
   701  0735                     __end_of_adc:
   702                           
   703                           	psect	text2
   704  0735                     __ptext2:	
   705 ;; *************** function _display *****************
   706 ;; Defined at:
   707 ;;		line 48 in file "ADC.c"
   708 ;; Parameters:    Size  Location     Type
   709 ;;  k               2    4[BANK0 ] int 
   710 ;; Auto vars:     Size  Location     Type
   711 ;;  d               2   12[BANK0 ] int 
   712 ;;  c               2   10[BANK0 ] int 
   713 ;;  b               2    8[BANK0 ] int 
   714 ;;  a               2    6[BANK0 ] int 
   715 ;; Return value:  Size  Location     Type
   716 ;;                  1    wreg      void 
   717 ;; Registers used:
   718 ;;		wreg, status,2, status,0, pclath, cstack
   719 ;; Tracked objects:
   720 ;;		On entry : 0/0
   721 ;;		On exit  : 0/0
   722 ;;		Unchanged: 0/0
   723 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   724 ;;      Params:         0       2       0       0       0
   725 ;;      Locals:         0       8       0       0       0
   726 ;;      Temps:          0       0       0       0       0
   727 ;;      Totals:         0      10       0       0       0
   728 ;;Total ram usage:       10 bytes
   729 ;; Hardware stack levels used: 1
   730 ;; Hardware stack levels required when called: 2
   731 ;; This function calls:
   732 ;;		_LCD
   733 ;;		___awdiv
   734 ;;		___awmod
   735 ;; This function is called by:
   736 ;;		_adc
   737 ;; This function uses a non-reentrant model
   738 ;;
   739                           
   740                           
   741                           ;psect for function _display
   742  0735                     _display:
   743  0735                     l902:	
   744                           ;incstack = 0
   745                           ; Regs used in _display: [wreg+status,2+status,0+pclath+cstack]
   746                           
   747                           
   748                           ;ADC.c: 48: void display(int k);ADC.c: 49: {;ADC.c: 50:     LCD(0X80,0);
   749  0735  3080               	movlw	128
   750  0736  00F1               	movwf	LCD@g
   751  0737  3000               	movlw	0
   752  0738  00F2               	movwf	LCD@g+1
   753  0739  3000               	movlw	0
   754  073A  00F3               	movwf	LCD@h
   755  073B  00F4               	movwf	LCD@h+1
   756  073C  120A  118A  25AA  120A  118A  	fcall	_LCD
   757                           
   758                           ;ADC.c: 51:     int a,b,c,d;;ADC.c: 52:     a=k/1000;
   759  0741  30E8               	movlw	232
   760  0742  00F7               	movwf	___awdiv@divisor
   761  0743  3003               	movlw	3
   762  0744  00F8               	movwf	___awdiv@divisor+1
   763  0745  1283               	bcf	3,5	;RP0=0, select bank0
   764  0746  1303               	bcf	3,6	;RP1=0, select bank0
   765  0747  0825               	movf	display@k+1,w
   766  0748  00FA               	movwf	___awdiv@dividend+1
   767  0749  0824               	movf	display@k,w
   768  074A  00F9               	movwf	___awdiv@dividend
   769  074B  120A  118A  2650  120A  118A  	fcall	___awdiv
   770  0750  0878               	movf	?___awdiv+1,w
   771  0751  1283               	bcf	3,5	;RP0=0, select bank0
   772  0752  1303               	bcf	3,6	;RP1=0, select bank0
   773  0753  00A7               	movwf	display@a+1
   774  0754  0877               	movf	?___awdiv,w
   775  0755  00A6               	movwf	display@a
   776                           
   777                           ;ADC.c: 53:     b=(k%1000)/100;
   778  0756  3064               	movlw	100
   779  0757  00F7               	movwf	___awdiv@divisor
   780  0758  3000               	movlw	0
   781  0759  00F8               	movwf	___awdiv@divisor+1
   782  075A  0825               	movf	display@k+1,w
   783  075B  00F3               	movwf	___awmod@dividend+1
   784  075C  0824               	movf	display@k,w
   785  075D  00F2               	movwf	___awmod@dividend
   786  075E  30E8               	movlw	232
   787  075F  00F0               	movwf	___awmod@divisor
   788  0760  3003               	movlw	3
   789  0761  00F1               	movwf	___awmod@divisor+1
   790  0762  120A  118A  25F7  120A  118A  	fcall	___awmod
   791  0767  0871               	movf	?___awmod+1,w
   792  0768  00FA               	movwf	___awdiv@dividend+1
   793  0769  0870               	movf	?___awmod,w
   794  076A  00F9               	movwf	___awdiv@dividend
   795  076B  120A  118A  2650  120A  118A  	fcall	___awdiv
   796  0770  0878               	movf	?___awdiv+1,w
   797  0771  1283               	bcf	3,5	;RP0=0, select bank0
   798  0772  1303               	bcf	3,6	;RP1=0, select bank0
   799  0773  00A9               	movwf	display@b+1
   800  0774  0877               	movf	?___awdiv,w
   801  0775  00A8               	movwf	display@b
   802                           
   803                           ;ADC.c: 54:     c=(k%100)/10;
   804  0776  300A               	movlw	10
   805  0777  00F7               	movwf	___awdiv@divisor
   806  0778  3000               	movlw	0
   807  0779  00F8               	movwf	___awdiv@divisor+1
   808  077A  0825               	movf	display@k+1,w
   809  077B  00F3               	movwf	___awmod@dividend+1
   810  077C  0824               	movf	display@k,w
   811  077D  00F2               	movwf	___awmod@dividend
   812  077E  3064               	movlw	100
   813  077F  00F0               	movwf	___awmod@divisor
   814  0780  3000               	movlw	0
   815  0781  00F1               	movwf	___awmod@divisor+1
   816  0782  120A  118A  25F7  120A  118A  	fcall	___awmod
   817  0787  0871               	movf	?___awmod+1,w
   818  0788  00FA               	movwf	___awdiv@dividend+1
   819  0789  0870               	movf	?___awmod,w
   820  078A  00F9               	movwf	___awdiv@dividend
   821  078B  120A  118A  2650  120A  118A  	fcall	___awdiv
   822  0790  0878               	movf	?___awdiv+1,w
   823  0791  1283               	bcf	3,5	;RP0=0, select bank0
   824  0792  1303               	bcf	3,6	;RP1=0, select bank0
   825  0793  00AB               	movwf	display@c+1
   826  0794  0877               	movf	?___awdiv,w
   827  0795  00AA               	movwf	display@c
   828                           
   829                           ;ADC.c: 55:     d=k%10;
   830  0796  300A               	movlw	10
   831  0797  00F0               	movwf	___awmod@divisor
   832  0798  3000               	movlw	0
   833  0799  00F1               	movwf	___awmod@divisor+1
   834  079A  0825               	movf	display@k+1,w
   835  079B  00F3               	movwf	___awmod@dividend+1
   836  079C  0824               	movf	display@k,w
   837  079D  00F2               	movwf	___awmod@dividend
   838  079E  120A  118A  25F7  120A  118A  	fcall	___awmod
   839  07A3  0871               	movf	?___awmod+1,w
   840  07A4  1283               	bcf	3,5	;RP0=0, select bank0
   841  07A5  1303               	bcf	3,6	;RP1=0, select bank0
   842  07A6  00AD               	movwf	display@d+1
   843  07A7  0870               	movf	?___awmod,w
   844  07A8  00AC               	movwf	display@d
   845                           
   846                           ;ADC.c: 56:     LCD(0x30+a,1);
   847  07A9  0826               	movf	display@a,w
   848  07AA  3E30               	addlw	48
   849  07AB  00F1               	movwf	LCD@g
   850  07AC  0827               	movf	display@a+1,w
   851  07AD  1803               	skipnc
   852  07AE  3E01               	addlw	1
   853  07AF  3E00               	addlw	0
   854  07B0  00F2               	movwf	LCD@g+1
   855  07B1  3001               	movlw	1
   856  07B2  00F3               	movwf	LCD@h
   857  07B3  3000               	movlw	0
   858  07B4  00F4               	movwf	LCD@h+1
   859  07B5  120A  118A  25AA  120A  118A  	fcall	_LCD
   860                           
   861                           ;ADC.c: 57:     LCD(0x30+b,1);
   862  07BA  1283               	bcf	3,5	;RP0=0, select bank0
   863  07BB  1303               	bcf	3,6	;RP1=0, select bank0
   864  07BC  0828               	movf	display@b,w
   865  07BD  3E30               	addlw	48
   866  07BE  00F1               	movwf	LCD@g
   867  07BF  0829               	movf	display@b+1,w
   868  07C0  1803               	skipnc
   869  07C1  3E01               	addlw	1
   870  07C2  3E00               	addlw	0
   871  07C3  00F2               	movwf	LCD@g+1
   872  07C4  3001               	movlw	1
   873  07C5  00F3               	movwf	LCD@h
   874  07C6  3000               	movlw	0
   875  07C7  00F4               	movwf	LCD@h+1
   876  07C8  120A  118A  25AA  120A  118A  	fcall	_LCD
   877                           
   878                           ;ADC.c: 58:     LCD(0x30+c,1);
   879  07CD  1283               	bcf	3,5	;RP0=0, select bank0
   880  07CE  1303               	bcf	3,6	;RP1=0, select bank0
   881  07CF  082A               	movf	display@c,w
   882  07D0  3E30               	addlw	48
   883  07D1  00F1               	movwf	LCD@g
   884  07D2  082B               	movf	display@c+1,w
   885  07D3  1803               	skipnc
   886  07D4  3E01               	addlw	1
   887  07D5  3E00               	addlw	0
   888  07D6  00F2               	movwf	LCD@g+1
   889  07D7  3001               	movlw	1
   890  07D8  00F3               	movwf	LCD@h
   891  07D9  3000               	movlw	0
   892  07DA  00F4               	movwf	LCD@h+1
   893  07DB  120A  118A  25AA  120A  118A  	fcall	_LCD
   894                           
   895                           ;ADC.c: 59:     LCD(0x30+d,1);
   896  07E0  1283               	bcf	3,5	;RP0=0, select bank0
   897  07E1  1303               	bcf	3,6	;RP1=0, select bank0
   898  07E2  082C               	movf	display@d,w
   899  07E3  3E30               	addlw	48
   900  07E4  00F1               	movwf	LCD@g
   901  07E5  082D               	movf	display@d+1,w
   902  07E6  1803               	skipnc
   903  07E7  3E01               	addlw	1
   904  07E8  3E00               	addlw	0
   905  07E9  00F2               	movwf	LCD@g+1
   906  07EA  3001               	movlw	1
   907  07EB  00F3               	movwf	LCD@h
   908  07EC  3000               	movlw	0
   909  07ED  00F4               	movwf	LCD@h+1
   910  07EE  120A  118A  25AA  120A  118A  	fcall	_LCD
   911  07F3                     l56:
   912  07F3  0008               	return
   913  07F4                     __end_of_display:
   914                           
   915                           	psect	text3
   916  05F7                     __ptext3:	
   917 ;; *************** function ___awmod *****************
   918 ;; Defined at:
   919 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awmod.c"
   920 ;; Parameters:    Size  Location     Type
   921 ;;  divisor         2    0[COMMON] int 
   922 ;;  dividend        2    2[COMMON] int 
   923 ;; Auto vars:     Size  Location     Type
   924 ;;  sign            1    6[COMMON] unsigned char 
   925 ;;  counter         1    5[COMMON] unsigned char 
   926 ;; Return value:  Size  Location     Type
   927 ;;                  2    0[COMMON] int 
   928 ;; Registers used:
   929 ;;		wreg, status,2, status,0
   930 ;; Tracked objects:
   931 ;;		On entry : 0/0
   932 ;;		On exit  : 0/0
   933 ;;		Unchanged: 0/0
   934 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   935 ;;      Params:         4       0       0       0       0
   936 ;;      Locals:         2       0       0       0       0
   937 ;;      Temps:          1       0       0       0       0
   938 ;;      Totals:         7       0       0       0       0
   939 ;;Total ram usage:        7 bytes
   940 ;; Hardware stack levels used: 1
   941 ;; This function calls:
   942 ;;		Nothing
   943 ;; This function is called by:
   944 ;;		_display
   945 ;; This function uses a non-reentrant model
   946 ;;
   947                           
   948                           
   949                           ;psect for function ___awmod
   950  05F7                     ___awmod:
   951  05F7                     l864:	
   952                           ;incstack = 0
   953                           ; Regs used in ___awmod: [wreg+status,2+status,0]
   954                           
   955  05F7  01F6               	clrf	___awmod@sign
   956  05F8                     l866:
   957  05F8  1FF3               	btfss	___awmod@dividend+1,7
   958  05F9  2DFB               	goto	u391
   959  05FA  2DFC               	goto	u390
   960  05FB                     u391:
   961  05FB  2E03               	goto	l872
   962  05FC                     u390:
   963  05FC                     l868:
   964  05FC  09F2               	comf	___awmod@dividend,f
   965  05FD  09F3               	comf	___awmod@dividend+1,f
   966  05FE  0AF2               	incf	___awmod@dividend,f
   967  05FF  1903               	skipnz
   968  0600  0AF3               	incf	___awmod@dividend+1,f
   969  0601                     l870:
   970  0601  01F6               	clrf	___awmod@sign
   971  0602  0AF6               	incf	___awmod@sign,f
   972  0603                     l872:
   973  0603  1FF1               	btfss	___awmod@divisor+1,7
   974  0604  2E06               	goto	u401
   975  0605  2E07               	goto	u400
   976  0606                     u401:
   977  0606  2E0C               	goto	l876
   978  0607                     u400:
   979  0607                     l874:
   980  0607  09F0               	comf	___awmod@divisor,f
   981  0608  09F1               	comf	___awmod@divisor+1,f
   982  0609  0AF0               	incf	___awmod@divisor,f
   983  060A  1903               	skipnz
   984  060B  0AF1               	incf	___awmod@divisor+1,f
   985  060C                     l876:
   986  060C  0870               	movf	___awmod@divisor,w
   987  060D  0471               	iorwf	___awmod@divisor+1,w
   988  060E  1903               	btfsc	3,2
   989  060F  2E11               	goto	u411
   990  0610  2E12               	goto	u410
   991  0611                     u411:
   992  0611  2E41               	goto	l894
   993  0612                     u410:
   994  0612                     l878:
   995  0612  01F5               	clrf	___awmod@counter
   996  0613  0AF5               	incf	___awmod@counter,f
   997  0614  2E20               	goto	l884
   998  0615                     l880:
   999  0615  3001               	movlw	1
  1000  0616                     u425:
  1001  0616  1003               	clrc
  1002  0617  0DF0               	rlf	___awmod@divisor,f
  1003  0618  0DF1               	rlf	___awmod@divisor+1,f
  1004  0619  3EFF               	addlw	-1
  1005  061A  1D03               	skipz
  1006  061B  2E16               	goto	u425
  1007  061C                     l882:
  1008  061C  3001               	movlw	1
  1009  061D  00F4               	movwf	??___awmod
  1010  061E  0874               	movf	??___awmod,w
  1011  061F  07F5               	addwf	___awmod@counter,f
  1012  0620                     l884:
  1013  0620  1FF1               	btfss	___awmod@divisor+1,7
  1014  0621  2E23               	goto	u431
  1015  0622  2E24               	goto	u430
  1016  0623                     u431:
  1017  0623  2E15               	goto	l880
  1018  0624                     u430:
  1019  0624                     l886:
  1020  0624  0871               	movf	___awmod@divisor+1,w
  1021  0625  0273               	subwf	___awmod@dividend+1,w
  1022  0626  1D03               	skipz
  1023  0627  2E2A               	goto	u445
  1024  0628  0870               	movf	___awmod@divisor,w
  1025  0629  0272               	subwf	___awmod@dividend,w
  1026  062A                     u445:
  1027  062A  1C03               	skipc
  1028  062B  2E2D               	goto	u441
  1029  062C  2E2E               	goto	u440
  1030  062D                     u441:
  1031  062D  2E34               	goto	l890
  1032  062E                     u440:
  1033  062E                     l888:
  1034  062E  0870               	movf	___awmod@divisor,w
  1035  062F  02F2               	subwf	___awmod@dividend,f
  1036  0630  0871               	movf	___awmod@divisor+1,w
  1037  0631  1C03               	skipc
  1038  0632  03F3               	decf	___awmod@dividend+1,f
  1039  0633  02F3               	subwf	___awmod@dividend+1,f
  1040  0634                     l890:
  1041  0634  3001               	movlw	1
  1042  0635                     u455:
  1043  0635  1003               	clrc
  1044  0636  0CF1               	rrf	___awmod@divisor+1,f
  1045  0637  0CF0               	rrf	___awmod@divisor,f
  1046  0638  3EFF               	addlw	-1
  1047  0639  1D03               	skipz
  1048  063A  2E35               	goto	u455
  1049  063B                     l892:
  1050  063B  3001               	movlw	1
  1051  063C  02F5               	subwf	___awmod@counter,f
  1052  063D  1D03               	btfss	3,2
  1053  063E  2E40               	goto	u461
  1054  063F  2E41               	goto	u460
  1055  0640                     u461:
  1056  0640  2E24               	goto	l886
  1057  0641                     u460:
  1058  0641                     l894:
  1059  0641  0876               	movf	___awmod@sign,w
  1060  0642  1903               	btfsc	3,2
  1061  0643  2E45               	goto	u471
  1062  0644  2E46               	goto	u470
  1063  0645                     u471:
  1064  0645  2E4B               	goto	l898
  1065  0646                     u470:
  1066  0646                     l896:
  1067  0646  09F2               	comf	___awmod@dividend,f
  1068  0647  09F3               	comf	___awmod@dividend+1,f
  1069  0648  0AF2               	incf	___awmod@dividend,f
  1070  0649  1903               	skipnz
  1071  064A  0AF3               	incf	___awmod@dividend+1,f
  1072  064B                     l898:
  1073  064B  0873               	movf	___awmod@dividend+1,w
  1074  064C  00F1               	movwf	?___awmod+1
  1075  064D  0872               	movf	___awmod@dividend,w
  1076  064E  00F0               	movwf	?___awmod
  1077  064F                     l318:
  1078  064F  0008               	return
  1079  0650                     __end_of___awmod:
  1080                           
  1081                           	psect	text4
  1082  0650                     __ptext4:	
  1083 ;; *************** function ___awdiv *****************
  1084 ;; Defined at:
  1085 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awdiv.c"
  1086 ;; Parameters:    Size  Location     Type
  1087 ;;  divisor         2    7[COMMON] int 
  1088 ;;  dividend        2    9[COMMON] int 
  1089 ;; Auto vars:     Size  Location     Type
  1090 ;;  quotient        2    2[BANK0 ] int 
  1091 ;;  sign            1    1[BANK0 ] unsigned char 
  1092 ;;  counter         1    0[BANK0 ] unsigned char 
  1093 ;; Return value:  Size  Location     Type
  1094 ;;                  2    7[COMMON] int 
  1095 ;; Registers used:
  1096 ;;		wreg, status,2, status,0
  1097 ;; Tracked objects:
  1098 ;;		On entry : 0/0
  1099 ;;		On exit  : 0/0
  1100 ;;		Unchanged: 0/0
  1101 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1102 ;;      Params:         4       0       0       0       0
  1103 ;;      Locals:         0       4       0       0       0
  1104 ;;      Temps:          1       0       0       0       0
  1105 ;;      Totals:         5       4       0       0       0
  1106 ;;Total ram usage:        9 bytes
  1107 ;; Hardware stack levels used: 1
  1108 ;; This function calls:
  1109 ;;		Nothing
  1110 ;; This function is called by:
  1111 ;;		_display
  1112 ;; This function uses a non-reentrant model
  1113 ;;
  1114                           
  1115                           
  1116                           ;psect for function ___awdiv
  1117  0650                     ___awdiv:
  1118  0650                     l820:	
  1119                           ;incstack = 0
  1120                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1121                           
  1122  0650  1283               	bcf	3,5	;RP0=0, select bank0
  1123  0651  1303               	bcf	3,6	;RP1=0, select bank0
  1124  0652  01A1               	clrf	___awdiv@sign
  1125  0653                     l822:
  1126  0653  1FF8               	btfss	___awdiv@divisor+1,7
  1127  0654  2E56               	goto	u291
  1128  0655  2E57               	goto	u290
  1129  0656                     u291:
  1130  0656  2E5E               	goto	l828
  1131  0657                     u290:
  1132  0657                     l824:
  1133  0657  09F7               	comf	___awdiv@divisor,f
  1134  0658  09F8               	comf	___awdiv@divisor+1,f
  1135  0659  0AF7               	incf	___awdiv@divisor,f
  1136  065A  1903               	skipnz
  1137  065B  0AF8               	incf	___awdiv@divisor+1,f
  1138  065C                     l826:
  1139  065C  01A1               	clrf	___awdiv@sign
  1140  065D  0AA1               	incf	___awdiv@sign,f
  1141  065E                     l828:
  1142  065E  1FFA               	btfss	___awdiv@dividend+1,7
  1143  065F  2E61               	goto	u301
  1144  0660  2E62               	goto	u300
  1145  0661                     u301:
  1146  0661  2E6B               	goto	l834
  1147  0662                     u300:
  1148  0662                     l830:
  1149  0662  09F9               	comf	___awdiv@dividend,f
  1150  0663  09FA               	comf	___awdiv@dividend+1,f
  1151  0664  0AF9               	incf	___awdiv@dividend,f
  1152  0665  1903               	skipnz
  1153  0666  0AFA               	incf	___awdiv@dividend+1,f
  1154  0667                     l832:
  1155  0667  3001               	movlw	1
  1156  0668  00FB               	movwf	??___awdiv
  1157  0669  087B               	movf	??___awdiv,w
  1158  066A  06A1               	xorwf	___awdiv@sign,f
  1159  066B                     l834:
  1160  066B  01A2               	clrf	___awdiv@quotient
  1161  066C  01A3               	clrf	___awdiv@quotient+1
  1162  066D                     l836:
  1163  066D  0877               	movf	___awdiv@divisor,w
  1164  066E  0478               	iorwf	___awdiv@divisor+1,w
  1165  066F  1903               	btfsc	3,2
  1166  0670  2E72               	goto	u311
  1167  0671  2E73               	goto	u310
  1168  0672                     u311:
  1169  0672  2EAA               	goto	l856
  1170  0673                     u310:
  1171  0673                     l838:
  1172  0673  01A0               	clrf	___awdiv@counter
  1173  0674  0AA0               	incf	___awdiv@counter,f
  1174  0675  2E81               	goto	l844
  1175  0676                     l840:
  1176  0676  3001               	movlw	1
  1177  0677                     u325:
  1178  0677  1003               	clrc
  1179  0678  0DF7               	rlf	___awdiv@divisor,f
  1180  0679  0DF8               	rlf	___awdiv@divisor+1,f
  1181  067A  3EFF               	addlw	-1
  1182  067B  1D03               	skipz
  1183  067C  2E77               	goto	u325
  1184  067D                     l842:
  1185  067D  3001               	movlw	1
  1186  067E  00FB               	movwf	??___awdiv
  1187  067F  087B               	movf	??___awdiv,w
  1188  0680  07A0               	addwf	___awdiv@counter,f
  1189  0681                     l844:
  1190  0681  1FF8               	btfss	___awdiv@divisor+1,7
  1191  0682  2E84               	goto	u331
  1192  0683  2E85               	goto	u330
  1193  0684                     u331:
  1194  0684  2E76               	goto	l840
  1195  0685                     u330:
  1196  0685                     l846:
  1197  0685  3001               	movlw	1
  1198  0686                     u345:
  1199  0686  1003               	clrc
  1200  0687  0DA2               	rlf	___awdiv@quotient,f
  1201  0688  0DA3               	rlf	___awdiv@quotient+1,f
  1202  0689  3EFF               	addlw	-1
  1203  068A  1D03               	skipz
  1204  068B  2E86               	goto	u345
  1205  068C  0878               	movf	___awdiv@divisor+1,w
  1206  068D  027A               	subwf	___awdiv@dividend+1,w
  1207  068E  1D03               	skipz
  1208  068F  2E92               	goto	u355
  1209  0690  0877               	movf	___awdiv@divisor,w
  1210  0691  0279               	subwf	___awdiv@dividend,w
  1211  0692                     u355:
  1212  0692  1C03               	skipc
  1213  0693  2E95               	goto	u351
  1214  0694  2E96               	goto	u350
  1215  0695                     u351:
  1216  0695  2E9D               	goto	l852
  1217  0696                     u350:
  1218  0696                     l848:
  1219  0696  0877               	movf	___awdiv@divisor,w
  1220  0697  02F9               	subwf	___awdiv@dividend,f
  1221  0698  0878               	movf	___awdiv@divisor+1,w
  1222  0699  1C03               	skipc
  1223  069A  03FA               	decf	___awdiv@dividend+1,f
  1224  069B  02FA               	subwf	___awdiv@dividend+1,f
  1225  069C                     l850:
  1226  069C  1422               	bsf	___awdiv@quotient,0
  1227  069D                     l852:
  1228  069D  3001               	movlw	1
  1229  069E                     u365:
  1230  069E  1003               	clrc
  1231  069F  0CF8               	rrf	___awdiv@divisor+1,f
  1232  06A0  0CF7               	rrf	___awdiv@divisor,f
  1233  06A1  3EFF               	addlw	-1
  1234  06A2  1D03               	skipz
  1235  06A3  2E9E               	goto	u365
  1236  06A4                     l854:
  1237  06A4  3001               	movlw	1
  1238  06A5  02A0               	subwf	___awdiv@counter,f
  1239  06A6  1D03               	btfss	3,2
  1240  06A7  2EA9               	goto	u371
  1241  06A8  2EAA               	goto	u370
  1242  06A9                     u371:
  1243  06A9  2E85               	goto	l846
  1244  06AA                     u370:
  1245  06AA                     l856:
  1246  06AA  0821               	movf	___awdiv@sign,w
  1247  06AB  1903               	btfsc	3,2
  1248  06AC  2EAE               	goto	u381
  1249  06AD  2EAF               	goto	u380
  1250  06AE                     u381:
  1251  06AE  2EB4               	goto	l860
  1252  06AF                     u380:
  1253  06AF                     l858:
  1254  06AF  09A2               	comf	___awdiv@quotient,f
  1255  06B0  09A3               	comf	___awdiv@quotient+1,f
  1256  06B1  0AA2               	incf	___awdiv@quotient,f
  1257  06B2  1903               	skipnz
  1258  06B3  0AA3               	incf	___awdiv@quotient+1,f
  1259  06B4                     l860:
  1260  06B4  0823               	movf	___awdiv@quotient+1,w
  1261  06B5  00F8               	movwf	?___awdiv+1
  1262  06B6  0822               	movf	___awdiv@quotient,w
  1263  06B7  00F7               	movwf	?___awdiv
  1264  06B8                     l305:
  1265  06B8  0008               	return
  1266  06B9                     __end_of___awdiv:
  1267                           
  1268                           	psect	text5
  1269  05AA                     __ptext5:	
  1270 ;; *************** function _LCD *****************
  1271 ;; Defined at:
  1272 ;;		line 42 in file "ADC.c"
  1273 ;; Parameters:    Size  Location     Type
  1274 ;;  g               2    1[COMMON] int 
  1275 ;;  h               2    3[COMMON] int 
  1276 ;; Auto vars:     Size  Location     Type
  1277 ;;		None
  1278 ;; Return value:  Size  Location     Type
  1279 ;;                  1    wreg      void 
  1280 ;; Registers used:
  1281 ;;		wreg, status,2, status,0, pclath, cstack
  1282 ;; Tracked objects:
  1283 ;;		On entry : 0/0
  1284 ;;		On exit  : 0/0
  1285 ;;		Unchanged: 0/0
  1286 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1287 ;;      Params:         4       0       0       0       0
  1288 ;;      Locals:         0       0       0       0       0
  1289 ;;      Temps:          0       0       0       0       0
  1290 ;;      Totals:         4       0       0       0       0
  1291 ;;Total ram usage:        4 bytes
  1292 ;; Hardware stack levels used: 1
  1293 ;; Hardware stack levels required when called: 1
  1294 ;; This function calls:
  1295 ;;		_pulse
  1296 ;; This function is called by:
  1297 ;;		_main
  1298 ;;		_display
  1299 ;; This function uses a non-reentrant model
  1300 ;;
  1301                           
  1302                           
  1303                           ;psect for function _LCD
  1304  05AA                     _LCD:
  1305  05AA                     l814:	
  1306                           ;incstack = 0
  1307                           ; Regs used in _LCD: [wreg+status,2+status,0+pclath+cstack]
  1308                           
  1309                           
  1310                           ;ADC.c: 42: void LCD(int g,int h);ADC.c: 43: {;ADC.c: 44:     RE1=h;
  1311  05AA  1873               	btfsc	LCD@h,0
  1312  05AB  2DAD               	goto	u271
  1313  05AC  2DB1               	goto	u270
  1314  05AD                     u271:
  1315  05AD  1283               	bcf	3,5	;RP0=0, select bank0
  1316  05AE  1303               	bcf	3,6	;RP1=0, select bank0
  1317  05AF  1489               	bsf	9,1	;volatile
  1318  05B0  2DB4               	goto	u284
  1319  05B1                     u270:
  1320  05B1  1283               	bcf	3,5	;RP0=0, select bank0
  1321  05B2  1303               	bcf	3,6	;RP1=0, select bank0
  1322  05B3  1089               	bcf	9,1	;volatile
  1323  05B4                     u284:
  1324  05B4                     l816:
  1325                           
  1326                           ;ADC.c: 45:     PORTD=g;
  1327  05B4  0871               	movf	LCD@g,w
  1328  05B5  0088               	movwf	8	;volatile
  1329  05B6                     l818:
  1330                           
  1331                           ;ADC.c: 46:     pulse();
  1332  05B6  120A  118A  2599  120A  118A  	fcall	_pulse
  1333  05BB                     l53:
  1334  05BB  0008               	return
  1335  05BC                     __end_of_LCD:
  1336                           
  1337                           	psect	text6
  1338  0599                     __ptext6:	
  1339 ;; *************** function _pulse *****************
  1340 ;; Defined at:
  1341 ;;		line 35 in file "ADC.c"
  1342 ;; Parameters:    Size  Location     Type
  1343 ;;		None
  1344 ;; Auto vars:     Size  Location     Type
  1345 ;;		None
  1346 ;; Return value:  Size  Location     Type
  1347 ;;                  1    wreg      void 
  1348 ;; Registers used:
  1349 ;;		wreg
  1350 ;; Tracked objects:
  1351 ;;		On entry : 0/0
  1352 ;;		On exit  : 0/0
  1353 ;;		Unchanged: 0/0
  1354 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1355 ;;      Params:         0       0       0       0       0
  1356 ;;      Locals:         0       0       0       0       0
  1357 ;;      Temps:          1       0       0       0       0
  1358 ;;      Totals:         1       0       0       0       0
  1359 ;;Total ram usage:        1 bytes
  1360 ;; Hardware stack levels used: 1
  1361 ;; This function calls:
  1362 ;;		Nothing
  1363 ;; This function is called by:
  1364 ;;		_LCD
  1365 ;; This function uses a non-reentrant model
  1366 ;;
  1367                           
  1368                           
  1369                           ;psect for function _pulse
  1370  0599                     _pulse:
  1371  0599                     l808:	
  1372                           ;incstack = 0
  1373                           ; Regs used in _pulse: [wreg]
  1374                           
  1375                           
  1376                           ;ADC.c: 37:     RE2=1;
  1377  0599  1283               	bcf	3,5	;RP0=0, select bank0
  1378  059A  1303               	bcf	3,6	;RP1=0, select bank0
  1379  059B  1509               	bsf	9,2	;volatile
  1380  059C                     l810:
  1381                           
  1382                           ;ADC.c: 38:     _delay((unsigned long)((50)*(4000000/4000000.0)));
  1383  059C  3010               	movlw	16
  1384  059D  00F0               	movwf	??_pulse
  1385  059E                     u537:
  1386  059E  0BF0               	decfsz	??_pulse,f
  1387  059F  2D9E               	goto	u537
  1388  05A0  0000               	nop
  1389  05A1                     l812:
  1390                           
  1391                           ;ADC.c: 39:     RE2=0;
  1392  05A1  1283               	bcf	3,5	;RP0=0, select bank0
  1393  05A2  1303               	bcf	3,6	;RP1=0, select bank0
  1394  05A3  1109               	bcf	9,2	;volatile
  1395                           
  1396                           ;ADC.c: 40:     _delay((unsigned long)((50)*(4000000/4000000.0)));
  1397  05A4  3010               	movlw	16
  1398  05A5  00F0               	movwf	??_pulse
  1399  05A6                     u547:
  1400  05A6  0BF0               	decfsz	??_pulse,f
  1401  05A7  2DA6               	goto	u547
  1402  05A8  0000               	nop
  1403  05A9                     l50:
  1404  05A9  0008               	return
  1405  05AA                     __end_of_pulse:
  1406  007E                     btemp	set	126	;btemp
  1407  007E                     wtemp0	set	126

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         6
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     14      20
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_adc
    _display->___awdiv
    ___awdiv->___awmod
    _LCD->_pulse

Critical Paths under _main in BANK0

    _adc->_display
    _display->___awdiv

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    4208
                                _LCD
                                _adc
 ---------------------------------------------------------------------------------
 (1) _adc                                                  2     2      0    3100
                                             12 COMMON     2     2      0
                            _display
 ---------------------------------------------------------------------------------
 (2) _display                                             10     8      2    3100
                                              4 BANK0     10     8      2
                                _LCD
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4     752
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4     756
                                              7 COMMON     5     1      4
                                              0 BANK0      4     4      0
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (3) _LCD                                                  4     0      4    1108
                                              1 COMMON     4     0      4
                              _pulse
 ---------------------------------------------------------------------------------
 (4) _pulse                                                1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD
     _pulse
   _adc
     _display
       _LCD
       ___awdiv
         ___awmod (ARG)
       ___awmod

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      22       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      E      14       5       25.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      22      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Tue Apr 04 15:22:03 2023

                     l50 05A9                       l53 05BB                       l47 05F4  
                     l56 07F3                       l66 0734                       l59 06BE  
                     _GO 00F9                       _DV 002E             ___awdiv@sign 0021  
                    l305 06B8                      l318 064F                      l810 059C  
                    l812 05A1                      l820 0650                      l814 05AA  
                    l830 0662                      l822 0653                      l902 0735  
                    l910 06D4                      l808 0599                      l816 05B4  
                    l840 0676                      l832 0667                      l824 0657  
                    l920 06F7                      l912 06DA                      l904 06B9  
                    l818 05B6                      l850 069C                      l842 067D  
                    l834 066B                      l826 065C                      l930 0723  
                    l922 0700                      l914 06DE                      l906 06BD  
                    l860 06B4                      l852 069D                      l844 0681  
                    l836 066D                      l828 065E                      l932 072B  
                    l924 0709                      l916 06E7                      l908 06C2  
                    l940 05C6                      l854 06A4                      l846 0685  
                    l838 0673                      l870 0601                      l926 0711  
                    l918 06EF                      l950 05D3                      l942 05C9  
                    l934 05BC                      l848 0696                      l856 06AA  
                    l880 0615                      l872 0603                      l864 05F7  
                    l928 071A                      l952 05D7                      l944 05CC  
                    l936 05C0                      l858 06AF                      l890 0634  
                    l882 061C                      l874 0607                      l866 05F8  
                    l954 05E3                      l946 05CF                      l938 05C3  
                    l892 063B                      l884 0620                      l876 060C  
                    l868 05FC                      l956 05EF                      l948 05D2  
                    l886 0624                      l878 0612                      l894 0641  
                    l896 0646                      l888 062E                      l898 064B  
                    _LCD 05AA                      _RE1 0049                      _RE2 004A  
                    u300 0662                      u301 0661                      u310 0673  
                    u311 0672                      u400 0607                      u401 0606  
                    u330 0685                      u410 0612                      u331 0684  
                    u411 0611                      u500 06EF                      u325 0677  
                    u501 06EE                      u270 05B1                      u350 0696  
                    u430 0624                      u510 0709                      u271 05AD  
                    u351 0695                      u431 0623                      u511 0708  
                    u440 062E                      u520 0723                      u345 0686  
                    u441 062D                      u425 0616                      u521 0722  
                    u370 06AA                      u290 0657                      u371 06A9  
                    u355 0692                      u291 0656                      u284 05B4  
                    u380 06AF                      u460 0641                      u381 06AE  
                    u365 069E                      u461 0640                      u445 062A  
                    u470 0646                      u390 05FC                      u471 0645  
                    u455 0635                      u391 05FB                      u480 06C2  
                    u537 059E                      u481 06C1                      u490 06DA  
                    u547 05A6                      u491 06D9                      _adc 06B9  
                    _low 0030             ___awmod@sign 0076                     LCD@g 0071  
                   LCD@h 0073                     ?_LCD 0071                     ?_adc 0070  
                   _high 0032                     _main 05BC                     btemp 007E  
                   start 0000                    ??_LCD 0075                    ??_adc 007C  
                  ?_main 0070          __end_of___awdiv 06B9          __end_of___awmod 0650  
                  _ANSEL 0188          ___awdiv@divisor 0077          ___awdiv@counter 0020  
                  _PORTA 0005                    _PORTD 0008                    _PORTE 0009  
                  _TRISA 0085                    _TRISD 0088                    _TRISE 0089  
        __end_of_display 07F4                    _pulse 0599                    status 0003  
                  wtemp0 007E          __initialization 07F4             __end_of_main 05F7  
                 ??_main 007E                   _ADCON0 001F                   _ADCON1 009F  
                 _ADRESH 001E                   _ADRESL 009E         ___awdiv@dividend 0079  
                 ?_pulse 0070                   _ANSELH 0189                ??___awdiv 007B  
              ??___awmod 0074         ___awdiv@quotient 0022          ___awmod@divisor 0070  
        ___awmod@counter 0075                ??_display 007C  __end_of__initialization 07FC  
         __pcstackCOMMON 0070            __end_of_pulse 05AA                  ??_pulse 0070  
             __pbssBANK0 002E               __pmaintext 05BC                  ___awdiv 0650  
                ___awmod 05F7                  __ptext1 06B9                  __ptext2 0735  
                __ptext3 05F7                  __ptext4 0650                  __ptext5 05AA  
                __ptext6 0599                  _display 0735             __size_of_LCD 0012  
           __size_of_adc 007C         ___awmod@dividend 0072     end_of_initialization 07FC  
    start_initialization 07F4              __end_of_LCD 05BC              __end_of_adc 0735  
              ___latbits 0002            __pcstackBANK0 0020                 ?___awdiv 0077  
               ?___awmod 0070                 ?_display 0024           __size_of_pulse 0011  
       __size_of___awdiv 0069         __size_of___awmod 0059         __size_of_display 00BF  
          __size_of_main 003B                 display@a 0026                 display@b 0028  
               display@c 002A                 display@d 002C                 display@k 0024  
