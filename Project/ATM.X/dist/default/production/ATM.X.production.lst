

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Fri Mar 24 12:37:08 2023

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	inittext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	dabs	1,0x7E,2
    20  0000                     
    21                           ; Version 2.20
    22                           ; Generated 12/02/2020 GMT
    23                           ; 
    24                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    25                           ; All rights reserved.
    26                           ; 
    27                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    28                           ; 
    29                           ; Redistribution and use in source and binary forms, with or without modification, are
    30                           ; permitted provided that the following conditions are met:
    31                           ; 
    32                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    33                           ;        conditions and the following disclaimer.
    34                           ; 
    35                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    36                           ;        of conditions and the following disclaimer in the documentation and/or other
    37                           ;        materials provided with the distribution.
    38                           ; 
    39                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    40                           ;        software without specific prior written permission.
    41                           ; 
    42                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    43                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    44                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    45                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    46                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    47                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    48                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    49                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    50                           ; 
    51                           ; 
    52                           ; Code-generator required, PIC16F887 Definitions
    53                           ; 
    54                           ; SFR Addresses
    55  0000                     	;# 
    56  0001                     	;# 
    57  0002                     	;# 
    58  0003                     	;# 
    59  0004                     	;# 
    60  0005                     	;# 
    61  0006                     	;# 
    62  0007                     	;# 
    63  0008                     	;# 
    64  0009                     	;# 
    65  000A                     	;# 
    66  000B                     	;# 
    67  000C                     	;# 
    68  000D                     	;# 
    69  000E                     	;# 
    70  000E                     	;# 
    71  000F                     	;# 
    72  0010                     	;# 
    73  0011                     	;# 
    74  0012                     	;# 
    75  0013                     	;# 
    76  0014                     	;# 
    77  0015                     	;# 
    78  0015                     	;# 
    79  0016                     	;# 
    80  0017                     	;# 
    81  0018                     	;# 
    82  0019                     	;# 
    83  001A                     	;# 
    84  001B                     	;# 
    85  001B                     	;# 
    86  001C                     	;# 
    87  001D                     	;# 
    88  001E                     	;# 
    89  001F                     	;# 
    90  0081                     	;# 
    91  0085                     	;# 
    92  0086                     	;# 
    93  0087                     	;# 
    94  0088                     	;# 
    95  0089                     	;# 
    96  008C                     	;# 
    97  008D                     	;# 
    98  008E                     	;# 
    99  008F                     	;# 
   100  0090                     	;# 
   101  0091                     	;# 
   102  0092                     	;# 
   103  0093                     	;# 
   104  0093                     	;# 
   105  0093                     	;# 
   106  0094                     	;# 
   107  0095                     	;# 
   108  0096                     	;# 
   109  0097                     	;# 
   110  0098                     	;# 
   111  0099                     	;# 
   112  009A                     	;# 
   113  009B                     	;# 
   114  009C                     	;# 
   115  009D                     	;# 
   116  009E                     	;# 
   117  009F                     	;# 
   118  0105                     	;# 
   119  0107                     	;# 
   120  0108                     	;# 
   121  0109                     	;# 
   122  010C                     	;# 
   123  010C                     	;# 
   124  010D                     	;# 
   125  010E                     	;# 
   126  010F                     	;# 
   127  0185                     	;# 
   128  0187                     	;# 
   129  0188                     	;# 
   130  0189                     	;# 
   131  018C                     	;# 
   132  018D                     	;# 
   133  0000                     	;# 
   134  0001                     	;# 
   135  0002                     	;# 
   136  0003                     	;# 
   137  0004                     	;# 
   138  0005                     	;# 
   139  0006                     	;# 
   140  0007                     	;# 
   141  0008                     	;# 
   142  0009                     	;# 
   143  000A                     	;# 
   144  000B                     	;# 
   145  000C                     	;# 
   146  000D                     	;# 
   147  000E                     	;# 
   148  000E                     	;# 
   149  000F                     	;# 
   150  0010                     	;# 
   151  0011                     	;# 
   152  0012                     	;# 
   153  0013                     	;# 
   154  0014                     	;# 
   155  0015                     	;# 
   156  0015                     	;# 
   157  0016                     	;# 
   158  0017                     	;# 
   159  0018                     	;# 
   160  0019                     	;# 
   161  001A                     	;# 
   162  001B                     	;# 
   163  001B                     	;# 
   164  001C                     	;# 
   165  001D                     	;# 
   166  001E                     	;# 
   167  001F                     	;# 
   168  0081                     	;# 
   169  0085                     	;# 
   170  0086                     	;# 
   171  0087                     	;# 
   172  0088                     	;# 
   173  0089                     	;# 
   174  008C                     	;# 
   175  008D                     	;# 
   176  008E                     	;# 
   177  008F                     	;# 
   178  0090                     	;# 
   179  0091                     	;# 
   180  0092                     	;# 
   181  0093                     	;# 
   182  0093                     	;# 
   183  0093                     	;# 
   184  0094                     	;# 
   185  0095                     	;# 
   186  0096                     	;# 
   187  0097                     	;# 
   188  0098                     	;# 
   189  0099                     	;# 
   190  009A                     	;# 
   191  009B                     	;# 
   192  009C                     	;# 
   193  009D                     	;# 
   194  009E                     	;# 
   195  009F                     	;# 
   196  0105                     	;# 
   197  0107                     	;# 
   198  0108                     	;# 
   199  0109                     	;# 
   200  010C                     	;# 
   201  010C                     	;# 
   202  010D                     	;# 
   203  010E                     	;# 
   204  010F                     	;# 
   205  0185                     	;# 
   206  0187                     	;# 
   207  0188                     	;# 
   208  0189                     	;# 
   209  018C                     	;# 
   210  018D                     	;# 
   211                           
   212                           	psect	idataBANK0
   213  0578                     __pidataBANK0:
   214                           
   215                           ;initializer for _num
   216  0578  3430               	retlw	48
   217  0579  3400               	retlw	0
   218  057A  3431               	retlw	49
   219  057B  3400               	retlw	0
   220  057C  3432               	retlw	50
   221  057D  3400               	retlw	0
   222  057E  3433               	retlw	51
   223  057F  3400               	retlw	0
   224  0580  3434               	retlw	52
   225  0581  3400               	retlw	0
   226  0582  3435               	retlw	53
   227  0583  3400               	retlw	0
   228  0584  3436               	retlw	54
   229  0585  3400               	retlw	0
   230  0586  3437               	retlw	55
   231  0587  3400               	retlw	0
   232  0588  3438               	retlw	56
   233  0589  3400               	retlw	0
   234  058A  3439               	retlw	57
   235  058B  3400               	retlw	0
   236  058C  342A               	retlw	42
   237  058D  3400               	retlw	0
   238  058E  3423               	retlw	35
   239  058F  3400               	retlw	0
   240  0008                     _PORTD	set	8
   241  0007                     _PORTC	set	7
   242  0005                     _PORTA	set	5
   243  0046                     _RD6	set	70
   244  0045                     _RD5	set	69
   245  0044                     _RD4	set	68
   246  0043                     _RD3	set	67
   247  0042                     _RD2	set	66
   248  0041                     _RD1	set	65
   249  0040                     _RD0	set	64
   250  0029                     _RA1	set	41
   251  002A                     _RA2	set	42
   252  0028                     _RA0	set	40
   253  0088                     _TRISD	set	136
   254  0087                     _TRISC	set	135
   255  0085                     _TRISA	set	133
   256  0189                     _ANSELH	set	393
   257  0188                     _ANSEL	set	392
   258                           
   259                           	psect	strings
   260  0003                     __pstrings:
   261  0003                     stringtab:
   262  0003                     __stringtab:
   263  0003                     stringcode:	
   264                           ;	String table - string pointers are 1 byte each
   265                           
   266  0003                     stringdir:
   267  0003  3000               	movlw	high stringdir
   268  0004  008A               	movwf	10
   269  0005  0804               	movf	4,w
   270  0006  0A84               	incf	4,f
   271  0007  0782               	addwf	2,f
   272  0008                     __stringbase:
   273  0008  3400               	retlw	0
   274  0009                     __end_of__stringtab:
   275  0009                     STR_5:
   276  0009  3457               	retlw	87	;'W'
   277  000A  3452               	retlw	82	;'R'
   278  000B  344F               	retlw	79	;'O'
   279  000C  344E               	retlw	78	;'N'
   280  000D  3447               	retlw	71	;'G'
   281  000E  3420               	retlw	32	;' '
   282  000F  3450               	retlw	80	;'P'
   283  0010  3441               	retlw	65	;'A'
   284  0011  3453               	retlw	83	;'S'
   285  0012  3453               	retlw	83	;'S'
   286  0013  3457               	retlw	87	;'W'
   287  0014  344F               	retlw	79	;'O'
   288  0015  3452               	retlw	82	;'R'
   289  0016  3444               	retlw	68	;'D'
   290  0017  3400               	retlw	0
   291  0018                     STR_2:
   292  0018  3445               	retlw	69	;'E'
   293  0019  344E               	retlw	78	;'N'
   294  001A  3454               	retlw	84	;'T'
   295  001B  3445               	retlw	69	;'E'
   296  001C  3452               	retlw	82	;'R'
   297  001D  3420               	retlw	32	;' '
   298  001E  3450               	retlw	80	;'P'
   299  001F  3441               	retlw	65	;'A'
   300  0020  3453               	retlw	83	;'S'
   301  0021  3453               	retlw	83	;'S'
   302  0022  3457               	retlw	87	;'W'
   303  0023  344F               	retlw	79	;'O'
   304  0024  3452               	retlw	82	;'R'
   305  0025  3444               	retlw	68	;'D'
   306  0026  3400               	retlw	0
   307  0027                     STR_6:
   308  0027  3457               	retlw	87	;'W'
   309  0028  3452               	retlw	82	;'R'
   310  0029  344F               	retlw	79	;'O'
   311  002A  344E               	retlw	78	;'N'
   312  002B  3447               	retlw	71	;'G'
   313  002C  3420               	retlw	32	;' '
   314  002D  344E               	retlw	78	;'N'
   315  002E  3441               	retlw	65	;'A'
   316  002F  344D               	retlw	77	;'M'
   317  0030  3445               	retlw	69	;'E'
   318  0031  3400               	retlw	0
   319  0032                     STR_1:
   320  0032  3455               	retlw	85	;'U'
   321  0033  3453               	retlw	83	;'S'
   322  0034  3445               	retlw	69	;'E'
   323  0035  3452               	retlw	82	;'R'
   324  0036  3420               	retlw	32	;' '
   325  0037  344E               	retlw	78	;'N'
   326  0038  3441               	retlw	65	;'A'
   327  0039  344D               	retlw	77	;'M'
   328  003A  3445               	retlw	69	;'E'
   329  003B  3400               	retlw	0
   330  003C                     STR_3:
   331  003C  3457               	retlw	87	;'W'
   332  003D  3445               	retlw	69	;'E'
   333  003E  344C               	retlw	76	;'L'
   334  003F  3443               	retlw	67	;'C'
   335  0040  344F               	retlw	79	;'O'
   336  0041  344D               	retlw	77	;'M'
   337  0042  3445               	retlw	69	;'E'
   338  0043  3400               	retlw	0
   339  0044                     STR_4:
   340  0044  3450               	retlw	80	;'P'
   341  0045  3452               	retlw	82	;'R'
   342  0046  3441               	retlw	65	;'A'
   343  0047  3454               	retlw	84	;'T'
   344  0048  3448               	retlw	72	;'H'
   345  0049  3441               	retlw	65	;'A'
   346  004A  3450               	retlw	80	;'P'
   347  004B  3400               	retlw	0
   348                           
   349                           	psect	cinit
   350  07E8                     start_initialization:	
   351                           ; #config settings
   352                           
   353  07E8                     __initialization:
   354                           
   355                           ; Initialize objects allocated to BANK0
   356  07E8  1383               	bcf	3,7	;select IRP bank0
   357  07E9  3038               	movlw	low (__pdataBANK0+24)
   358  07EA  00FD               	movwf	btemp+-1
   359  07EB  3005               	movlw	high __pidataBANK0
   360  07EC  00FE               	movwf	btemp
   361  07ED  3078               	movlw	low __pidataBANK0
   362  07EE  00FF               	movwf	btemp+1
   363  07EF  3020               	movlw	low __pdataBANK0
   364  07F0  0084               	movwf	4
   365  07F1  120A  118A  2555  120A  118A  	fcall	init_ram0
   366                           
   367                           ; Clear objects allocated to BANK0
   368  07F6  01B8               	clrf	__pbssBANK0& (0+127)
   369  07F7  01B9               	clrf	(__pbssBANK0+1)& (0+127)
   370  07F8  01BA               	clrf	(__pbssBANK0+2)& (0+127)
   371  07F9  01BB               	clrf	(__pbssBANK0+3)& (0+127)
   372  07FA  01BC               	clrf	(__pbssBANK0+4)& (0+127)
   373  07FB  01BD               	clrf	(__pbssBANK0+5)& (0+127)
   374  07FC                     end_of_initialization:	
   375                           ;End of C runtime variable initialization code
   376                           
   377  07FC                     __end_of__initialization:
   378  07FC  0183               	clrf	3
   379  07FD  120A  118A  2E56   	ljmp	_main	;jump to C main() function
   380                           
   381                           	psect	bssBANK0
   382  0038                     __pbssBANK0:
   383  0038                     _g:
   384  0038                     	ds	2
   385  003A                     _T:
   386  003A                     	ds	2
   387  003C                     _flag:
   388  003C                     	ds	2
   389                           
   390                           	psect	dataBANK0
   391  0020                     __pdataBANK0:
   392  0020                     _num:
   393  0020                     	ds	24
   394                           
   395                           	psect	inittext
   396  0551                     init_fetch0:	
   397                           ;	Called with low address in FSR and high address in W
   398                           
   399  0551  087E               	movf	btemp,w
   400  0552  008A               	movwf	10
   401  0553  087F               	movf	btemp+1,w
   402  0554  0082               	movwf	2
   403  0555                     init_ram0:	
   404                           ;Called with:
   405                           ;	high address of idata address in btemp 
   406                           ;	low address of idata address in btemp+1 
   407                           ;	low address of data in FSR
   408                           ;	high address + 1 of data in btemp-1
   409                           
   410  0555  120A  118A  2551  120A  118A  	fcall	init_fetch0
   411  055A  0080               	movwf	0
   412  055B  0A84               	incf	4,f
   413  055C  0804               	movf	4,w
   414  055D  067D               	xorwf	btemp+-1,w
   415  055E  1903               	btfsc	3,2
   416  055F  3400               	retlw	0
   417  0560  0AFF               	incf	btemp+1,f
   418  0561  1903               	btfsc	3,2
   419  0562  0AFE               	incf	btemp,f
   420  0563  2D55               	goto	init_ram0
   421                           
   422                           	psect	cstackCOMMON
   423  0070                     __pcstackCOMMON:
   424  0070                     ?_LCD_s:
   425  0070                     ?_key:	
   426                           ; 1 bytes @ 0x0
   427                           
   428  0070                     ?_main:	
   429                           ; 1 bytes @ 0x0
   430                           
   431  0070                     ?_pulse:	
   432                           ; 1 bytes @ 0x0
   433                           
   434  0070                     ??_pulse:	
   435                           ; 1 bytes @ 0x0
   436                           
   437  0070                     ?___wmul:	
   438                           ; 1 bytes @ 0x0
   439                           
   440  0070                     ___wmul@multiplier:	
   441                           ; 2 bytes @ 0x0
   442                           
   443                           
   444                           ; 2 bytes @ 0x0
   445  0070                     	ds	2
   446  0072                     ?_LCD:
   447  0072                     ??_LCD_s:	
   448                           ; 1 bytes @ 0x2
   449                           
   450  0072                     LCD@h:	
   451                           ; 1 bytes @ 0x2
   452                           
   453  0072                     ___wmul@multiplicand:	
   454                           ; 1 bytes @ 0x2
   455                           
   456                           
   457                           ; 2 bytes @ 0x2
   458  0072                     	ds	1
   459  0073                     ??_LCD:
   460  0073                     LCD@g:	
   461                           ; 1 bytes @ 0x3
   462                           
   463  0073                     LCD_s@g:	
   464                           ; 1 bytes @ 0x3
   465                           
   466                           
   467                           ; 1 bytes @ 0x3
   468  0073                     	ds	1
   469  0074                     ??___wmul:
   470  0074                     ___wmul@product:	
   471                           ; 1 bytes @ 0x4
   472                           
   473                           
   474                           ; 2 bytes @ 0x4
   475  0074                     	ds	2
   476  0076                     ?_keypad:
   477  0076                     keypad@a:	
   478                           ; 2 bytes @ 0x6
   479                           
   480                           
   481                           ; 2 bytes @ 0x6
   482  0076                     	ds	2
   483  0078                     keypad@b:
   484                           
   485                           ; 2 bytes @ 0x8
   486  0078                     	ds	2
   487  007A                     keypad@c:
   488                           
   489                           ; 2 bytes @ 0xA
   490  007A                     	ds	2
   491  007C                     keypad@d:
   492                           
   493                           ; 2 bytes @ 0xC
   494  007C                     	ds	2
   495  007E                     ??_key:
   496  007E                     ??_main:	
   497                           ; 1 bytes @ 0xE
   498                           
   499                           
   500                           	psect	cstackBANK0
   501  003E                     __pcstackBANK0:	
   502                           ; 1 bytes @ 0xE
   503                           
   504  003E                     ??_keypad:
   505                           
   506                           ; 1 bytes @ 0x0
   507  003E                     	ds	1
   508                           
   509                           	psect	maintext
   510  0656                     __pmaintext:	
   511 ;;
   512 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   513 ;;
   514 ;; *************** function _main *****************
   515 ;; Defined at:
   516 ;;		line 21 in file "ATM LCD.c"
   517 ;; Parameters:    Size  Location     Type
   518 ;;		None
   519 ;; Auto vars:     Size  Location     Type
   520 ;;		None
   521 ;; Return value:  Size  Location     Type
   522 ;;                  1    wreg      void 
   523 ;; Registers used:
   524 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   525 ;; Tracked objects:
   526 ;;		On entry : B00/0
   527 ;;		On exit  : 0/0
   528 ;;		Unchanged: 0/0
   529 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   530 ;;      Params:         0       0       0       0       0
   531 ;;      Locals:         0       0       0       0       0
   532 ;;      Temps:          0       0       0       0       0
   533 ;;      Totals:         0       0       0       0       0
   534 ;;Total ram usage:        0 bytes
   535 ;; Hardware stack levels required when called: 4
   536 ;; This function calls:
   537 ;;		_LCD
   538 ;;		_LCD_s
   539 ;;		_key
   540 ;; This function is called by:
   541 ;;		Startup code after reset
   542 ;; This function uses a non-reentrant model
   543 ;;
   544                           
   545                           
   546                           ;psect for function _main
   547  0656                     _main:
   548  0656                     l930:	
   549                           ;incstack = 0
   550                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   551                           
   552                           
   553                           ;ATM LCD.c: 23:     TRISA=0X00;
   554  0656  1683               	bsf	3,5	;RP0=1, select bank1
   555  0657  1303               	bcf	3,6	;RP1=0, select bank1
   556  0658  0185               	clrf	5	;volatile
   557                           
   558                           ;ATM LCD.c: 24:     PORTA=0X00;
   559  0659  1283               	bcf	3,5	;RP0=0, select bank0
   560  065A  1303               	bcf	3,6	;RP1=0, select bank0
   561  065B  0185               	clrf	5	;volatile
   562                           
   563                           ;ATM LCD.c: 25:     TRISC=0X00;
   564  065C  1683               	bsf	3,5	;RP0=1, select bank1
   565  065D  1303               	bcf	3,6	;RP1=0, select bank1
   566  065E  0187               	clrf	7	;volatile
   567                           
   568                           ;ATM LCD.c: 26:     PORTC=0X00;
   569  065F  1283               	bcf	3,5	;RP0=0, select bank0
   570  0660  1303               	bcf	3,6	;RP1=0, select bank0
   571  0661  0187               	clrf	7	;volatile
   572  0662                     l932:
   573                           
   574                           ;ATM LCD.c: 27:     TRISD=0X78;
   575  0662  3078               	movlw	120
   576  0663  1683               	bsf	3,5	;RP0=1, select bank1
   577  0664  1303               	bcf	3,6	;RP1=0, select bank1
   578  0665  0088               	movwf	8	;volatile
   579  0666                     l934:
   580                           
   581                           ;ATM LCD.c: 28:     PORTD=0X00;
   582  0666  1283               	bcf	3,5	;RP0=0, select bank0
   583  0667  1303               	bcf	3,6	;RP1=0, select bank0
   584  0668  0188               	clrf	8	;volatile
   585  0669                     l936:
   586                           
   587                           ;ATM LCD.c: 29:     ANSEL=0X00;
   588  0669  1683               	bsf	3,5	;RP0=1, select bank3
   589  066A  1703               	bsf	3,6	;RP1=1, select bank3
   590  066B  0188               	clrf	8	;volatile
   591  066C                     l938:
   592                           
   593                           ;ATM LCD.c: 30:     ANSELH=0X00;
   594  066C  0189               	clrf	9	;volatile
   595  066D                     l940:
   596                           
   597                           ;ATM LCD.c: 31:     LCD(0x38,0);
   598  066D  01F2               	clrf	LCD@h
   599  066E  3038               	movlw	56
   600  066F  120A  118A  2564  120A  118A  	fcall	_LCD
   601  0674                     l942:
   602                           
   603                           ;ATM LCD.c: 32:     LCD(0x0e,0);
   604  0674  01F2               	clrf	LCD@h
   605  0675  300E               	movlw	14
   606  0676  120A  118A  2564  120A  118A  	fcall	_LCD
   607  067B                     l944:
   608                           
   609                           ;ATM LCD.c: 33:     LCD(0x80,0);
   610  067B  01F2               	clrf	LCD@h
   611  067C  3080               	movlw	128
   612  067D  120A  118A  2564  120A  118A  	fcall	_LCD
   613  0682                     l946:
   614                           
   615                           ;ATM LCD.c: 36:     {;ATM LCD.c: 37:         LCD(0x01,0);
   616  0682  01F2               	clrf	LCD@h
   617  0683  3001               	movlw	1
   618  0684  120A  118A  2564  120A  118A  	fcall	_LCD
   619  0689                     l948:
   620                           
   621                           ;ATM LCD.c: 38:         LCD_s("USER NAME");
   622  0689  302A               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   623  068A  120A  118A  25CE  120A  118A  	fcall	_LCD_s
   624  068F                     l950:
   625                           
   626                           ;ATM LCD.c: 39:         key();
   627  068F  120A  118A  25F4  120A  118A  	fcall	_key
   628  0694                     l952:
   629                           
   630                           ;ATM LCD.c: 40:         if(T==555)
   631  0694  302B               	movlw	43
   632  0695  1283               	bcf	3,5	;RP0=0, select bank0
   633  0696  1303               	bcf	3,6	;RP1=0, select bank0
   634  0697  063A               	xorwf	_T,w
   635  0698  3002               	movlw	2
   636  0699  1903               	skipnz
   637  069A  063B               	xorwf	_T+1,w
   638  069B  1D03               	btfss	3,2
   639  069C  2E9E               	goto	u471
   640  069D  2E9F               	goto	u470
   641  069E                     u471:
   642  069E  2EEB               	goto	l976
   643  069F                     u470:
   644  069F                     l954:
   645                           
   646                           ;ATM LCD.c: 41:         {;ATM LCD.c: 42:             LCD(0x01,0);
   647  069F  01F2               	clrf	LCD@h
   648  06A0  3001               	movlw	1
   649  06A1  120A  118A  2564  120A  118A  	fcall	_LCD
   650  06A6                     l956:
   651                           
   652                           ;ATM LCD.c: 43:             LCD_s("ENTER PASSWORD");
   653  06A6  3010               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   654  06A7  120A  118A  25CE  120A  118A  	fcall	_LCD_s
   655  06AC                     l958:
   656                           
   657                           ;ATM LCD.c: 44:             T=0;
   658  06AC  1283               	bcf	3,5	;RP0=0, select bank0
   659  06AD  1303               	bcf	3,6	;RP1=0, select bank0
   660  06AE  01BA               	clrf	_T
   661  06AF  01BB               	clrf	_T+1
   662  06B0                     l960:
   663                           
   664                           ;ATM LCD.c: 45:             key();
   665  06B0  120A  118A  25F4  120A  118A  	fcall	_key
   666  06B5                     l962:
   667                           
   668                           ;ATM LCD.c: 46:             if(T==123)
   669  06B5  307B               	movlw	123
   670  06B6  1283               	bcf	3,5	;RP0=0, select bank0
   671  06B7  1303               	bcf	3,6	;RP1=0, select bank0
   672  06B8  063A               	xorwf	_T,w
   673  06B9  043B               	iorwf	_T+1,w
   674  06BA  1D03               	btfss	3,2
   675  06BB  2EBD               	goto	u481
   676  06BC  2EBE               	goto	u480
   677  06BD                     u481:
   678  06BD  2ED9               	goto	l970
   679  06BE                     u480:
   680  06BE                     l964:
   681                           
   682                           ;ATM LCD.c: 49:                 {;ATM LCD.c: 50:                     LCD(0x01,0);
   683  06BE  01F2               	clrf	LCD@h
   684  06BF  3001               	movlw	1
   685  06C0  120A  118A  2564  120A  118A  	fcall	_LCD
   686  06C5                     l966:
   687                           
   688                           ;ATM LCD.c: 51:                     LCD_s("WELCOME");
   689  06C5  3034               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
   690  06C6  120A  118A  25CE  120A  118A  	fcall	_LCD_s
   691  06CB                     l968:
   692                           
   693                           ;ATM LCD.c: 52:                     LCD(0xc5,0);
   694  06CB  01F2               	clrf	LCD@h
   695  06CC  30C5               	movlw	197
   696  06CD  120A  118A  2564  120A  118A  	fcall	_LCD
   697                           
   698                           ;ATM LCD.c: 53:                     LCD_s("PRATHAP");
   699  06D2  303C               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
   700  06D3  120A  118A  25CE  120A  118A  	fcall	_LCD_s
   701  06D8  2EBE               	goto	l964
   702  06D9                     l970:
   703                           
   704                           ;ATM LCD.c: 57:         {;ATM LCD.c: 58:             LCD(0x01,0);
   705  06D9  01F2               	clrf	LCD@h
   706  06DA  3001               	movlw	1
   707  06DB  120A  118A  2564  120A  118A  	fcall	_LCD
   708  06E0                     l972:
   709                           
   710                           ;ATM LCD.c: 59:             LCD_s("WRONG PASSWORD");
   711  06E0  3001               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
   712  06E1  120A  118A  25CE  120A  118A  	fcall	_LCD_s
   713  06E6                     l974:
   714                           
   715                           ;ATM LCD.c: 60:             T=0;
   716  06E6  1283               	bcf	3,5	;RP0=0, select bank0
   717  06E7  1303               	bcf	3,6	;RP1=0, select bank0
   718  06E8  01BA               	clrf	_T
   719  06E9  01BB               	clrf	_T+1
   720  06EA  2E82               	goto	l946
   721  06EB                     l976:
   722                           
   723                           ;ATM LCD.c: 64:         {;ATM LCD.c: 65:             LCD(0x01,0);
   724  06EB  01F2               	clrf	LCD@h
   725  06EC  3001               	movlw	1
   726  06ED  120A  118A  2564  120A  118A  	fcall	_LCD
   727  06F2                     l978:
   728                           
   729                           ;ATM LCD.c: 66:             LCD_s("WRONG NAME");
   730  06F2  301F               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
   731  06F3  120A  118A  25CE  120A  118A  	fcall	_LCD_s
   732  06F8  2EE6               	goto	l974
   733  06F9  120A  118A  2800   	ljmp	start
   734  06FC                     __end_of_main:
   735                           
   736                           	psect	text1
   737  05F4                     __ptext1:	
   738 ;; *************** function _key *****************
   739 ;; Defined at:
   740 ;;		line 95 in file "ATM LCD.c"
   741 ;; Parameters:    Size  Location     Type
   742 ;;		None
   743 ;; Auto vars:     Size  Location     Type
   744 ;;		None
   745 ;; Return value:  Size  Location     Type
   746 ;;                  1    wreg      void 
   747 ;; Registers used:
   748 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   749 ;; Tracked objects:
   750 ;;		On entry : 0/0
   751 ;;		On exit  : 0/0
   752 ;;		Unchanged: 0/0
   753 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   754 ;;      Params:         0       0       0       0       0
   755 ;;      Locals:         0       0       0       0       0
   756 ;;      Temps:          0       0       0       0       0
   757 ;;      Totals:         0       0       0       0       0
   758 ;;Total ram usage:        0 bytes
   759 ;; Hardware stack levels used: 1
   760 ;; Hardware stack levels required when called: 3
   761 ;; This function calls:
   762 ;;		_LCD
   763 ;;		_keypad
   764 ;; This function is called by:
   765 ;;		_main
   766 ;; This function uses a non-reentrant model
   767 ;;
   768                           
   769                           
   770                           ;psect for function _key
   771  05F4                     _key:
   772  05F4                     l910:	
   773                           ;incstack = 0
   774                           ; Regs used in _key: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   775                           
   776                           
   777                           ;ATM LCD.c: 97:     g=5;
   778  05F4  3005               	movlw	5
   779  05F5  1283               	bcf	3,5	;RP0=0, select bank0
   780  05F6  1303               	bcf	3,6	;RP1=0, select bank0
   781  05F7  00B8               	movwf	_g
   782  05F8  3000               	movlw	0
   783  05F9  00B9               	movwf	_g+1
   784  05FA                     l912:
   785                           
   786                           ;ATM LCD.c: 98:     LCD(0xc0,0);
   787  05FA  01F2               	clrf	LCD@h
   788  05FB  30C0               	movlw	192
   789  05FC  120A  118A  2564  120A  118A  	fcall	_LCD
   790                           
   791                           ;ATM LCD.c: 99:     while(g)
   792  0601  2E4D               	goto	l928
   793  0602                     l85:
   794                           
   795                           ;ATM LCD.c: 100:     {;ATM LCD.c: 101:       RD0=0;RD1=0;RD2=1;
   796  0602  1008               	bcf	8,0	;volatile
   797  0603  1088               	bcf	8,1	;volatile
   798  0604  1508               	bsf	8,2	;volatile
   799  0605                     l914:
   800                           
   801                           ;ATM LCD.c: 102:       keypad(1,4,7,10);
   802  0605  3001               	movlw	1
   803  0606  00F6               	movwf	keypad@a
   804  0607  3000               	movlw	0
   805  0608  00F7               	movwf	keypad@a+1
   806  0609  3004               	movlw	4
   807  060A  00F8               	movwf	keypad@b
   808  060B  3000               	movlw	0
   809  060C  00F9               	movwf	keypad@b+1
   810  060D  3007               	movlw	7
   811  060E  00FA               	movwf	keypad@c
   812  060F  3000               	movlw	0
   813  0610  00FB               	movwf	keypad@c+1
   814  0611  300A               	movlw	10
   815  0612  00FC               	movwf	keypad@d
   816  0613  3000               	movlw	0
   817  0614  00FD               	movwf	keypad@d+1
   818  0615  120A  118A  26FC  120A  118A  	fcall	_keypad
   819  061A                     l916:
   820                           
   821                           ;ATM LCD.c: 103:       RD0=0;RD2=0;RD1=1;
   822  061A  1283               	bcf	3,5	;RP0=0, select bank0
   823  061B  1303               	bcf	3,6	;RP1=0, select bank0
   824  061C  1008               	bcf	8,0	;volatile
   825  061D                     l918:
   826  061D  1108               	bcf	8,2	;volatile
   827  061E                     l920:
   828  061E  1488               	bsf	8,1	;volatile
   829                           
   830                           ;ATM LCD.c: 104:       keypad(2,5,8,0);
   831  061F  3002               	movlw	2
   832  0620  00F6               	movwf	keypad@a
   833  0621  3000               	movlw	0
   834  0622  00F7               	movwf	keypad@a+1
   835  0623  3005               	movlw	5
   836  0624  00F8               	movwf	keypad@b
   837  0625  3000               	movlw	0
   838  0626  00F9               	movwf	keypad@b+1
   839  0627  3008               	movlw	8
   840  0628  00FA               	movwf	keypad@c
   841  0629  3000               	movlw	0
   842  062A  00FB               	movwf	keypad@c+1
   843  062B  3000               	movlw	0
   844  062C  00FC               	movwf	keypad@d
   845  062D  00FD               	movwf	keypad@d+1
   846  062E  120A  118A  26FC  120A  118A  	fcall	_keypad
   847  0633                     l922:
   848                           
   849                           ;ATM LCD.c: 105:       RD2=0;RD1=0;RD0=1;
   850  0633  1283               	bcf	3,5	;RP0=0, select bank0
   851  0634  1303               	bcf	3,6	;RP1=0, select bank0
   852  0635  1108               	bcf	8,2	;volatile
   853  0636                     l924:
   854  0636  1088               	bcf	8,1	;volatile
   855  0637                     l926:
   856  0637  1408               	bsf	8,0	;volatile
   857                           
   858                           ;ATM LCD.c: 106:       keypad(3,6,9,11);
   859  0638  3003               	movlw	3
   860  0639  00F6               	movwf	keypad@a
   861  063A  3000               	movlw	0
   862  063B  00F7               	movwf	keypad@a+1
   863  063C  3006               	movlw	6
   864  063D  00F8               	movwf	keypad@b
   865  063E  3000               	movlw	0
   866  063F  00F9               	movwf	keypad@b+1
   867  0640  3009               	movlw	9
   868  0641  00FA               	movwf	keypad@c
   869  0642  3000               	movlw	0
   870  0643  00FB               	movwf	keypad@c+1
   871  0644  300B               	movlw	11
   872  0645  00FC               	movwf	keypad@d
   873  0646  3000               	movlw	0
   874  0647  00FD               	movwf	keypad@d+1
   875  0648  120A  118A  26FC  120A  118A  	fcall	_keypad
   876  064D                     l928:
   877                           
   878                           ;ATM LCD.c: 99:     while(g)
   879  064D  1283               	bcf	3,5	;RP0=0, select bank0
   880  064E  1303               	bcf	3,6	;RP1=0, select bank0
   881  064F  0838               	movf	_g,w
   882  0650  0439               	iorwf	_g+1,w
   883  0651  1D03               	btfss	3,2
   884  0652  2E54               	goto	u461
   885  0653  2E55               	goto	u460
   886  0654                     u461:
   887  0654  2E02               	goto	l85
   888  0655                     u460:
   889  0655                     l87:
   890  0655  0008               	return
   891  0656                     __end_of_key:
   892                           
   893                           	psect	text2
   894  06FC                     __ptext2:	
   895 ;; *************** function _keypad *****************
   896 ;; Defined at:
   897 ;;		line 109 in file "ATM LCD.c"
   898 ;; Parameters:    Size  Location     Type
   899 ;;  a               2    6[COMMON] int 
   900 ;;  b               2    8[COMMON] int 
   901 ;;  c               2   10[COMMON] int 
   902 ;;  d               2   12[COMMON] int 
   903 ;; Auto vars:     Size  Location     Type
   904 ;;		None
   905 ;; Return value:  Size  Location     Type
   906 ;;                  2    6[COMMON] int 
   907 ;; Registers used:
   908 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   909 ;; Tracked objects:
   910 ;;		On entry : 0/0
   911 ;;		On exit  : 0/0
   912 ;;		Unchanged: 0/0
   913 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   914 ;;      Params:         8       0       0       0       0
   915 ;;      Locals:         0       0       0       0       0
   916 ;;      Temps:          0       1       0       0       0
   917 ;;      Totals:         8       1       0       0       0
   918 ;;Total ram usage:        9 bytes
   919 ;; Hardware stack levels used: 1
   920 ;; Hardware stack levels required when called: 2
   921 ;; This function calls:
   922 ;;		_LCD
   923 ;;		___wmul
   924 ;; This function is called by:
   925 ;;		_key
   926 ;; This function uses a non-reentrant model
   927 ;;
   928                           
   929                           
   930                           ;psect for function _keypad
   931  06FC                     _keypad:
   932  06FC                     l870:	
   933                           ;incstack = 0
   934                           ; Regs used in _keypad: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   935                           
   936                           
   937                           ;ATM LCD.c: 109: int keypad(int a,int b,int c,int d);ATM LCD.c: 110: {;ATM LCD.c: 112:  
      +                             if(RD3==1)
   938  06FC  1283               	bcf	3,5	;RP0=0, select bank0
   939  06FD  1303               	bcf	3,6	;RP1=0, select bank0
   940  06FE  1D88               	btfss	8,3	;volatile
   941  06FF  2F01               	goto	u311
   942  0700  2F02               	goto	u310
   943  0701                     u311:
   944  0701  2F2D               	goto	l90
   945  0702                     u310:
   946  0702                     l872:
   947                           
   948                           ;ATM LCD.c: 113:     {;ATM LCD.c: 114:         LCD(num[a],1);
   949  0702  01F2               	clrf	LCD@h
   950  0703  0AF2               	incf	LCD@h,f
   951  0704  0876               	movf	keypad@a,w
   952  0705  00BE               	movwf	??_keypad
   953  0706  073E               	addwf	??_keypad,w
   954  0707  3E20               	addlw	(low (_num| 0))& (0+255)
   955  0708  0084               	movwf	4
   956  0709  1383               	bcf	3,7	;select IRP bank0
   957  070A  0800               	movf	0,w
   958  070B  120A  118A  2564  120A  118A  	fcall	_LCD
   959  0710                     l874:
   960                           
   961                           ;ATM LCD.c: 115:         T=(T*10)+a;
   962  0710  1283               	bcf	3,5	;RP0=0, select bank0
   963  0711  1303               	bcf	3,6	;RP1=0, select bank0
   964  0712  083B               	movf	_T+1,w
   965  0713  00F1               	movwf	___wmul@multiplier+1
   966  0714  083A               	movf	_T,w
   967  0715  00F0               	movwf	___wmul@multiplier
   968  0716  300A               	movlw	10
   969  0717  00F2               	movwf	___wmul@multiplicand
   970  0718  3000               	movlw	0
   971  0719  00F3               	movwf	___wmul@multiplicand+1
   972  071A  120A  118A  25A9  120A  118A  	fcall	___wmul
   973  071F  0876               	movf	keypad@a,w
   974  0720  0770               	addwf	?___wmul,w
   975  0721  1283               	bcf	3,5	;RP0=0, select bank0
   976  0722  1303               	bcf	3,6	;RP1=0, select bank0
   977  0723  00BA               	movwf	_T
   978  0724  0877               	movf	keypad@a+1,w
   979  0725  1803               	skipnc
   980  0726  0A77               	incf	keypad@a+1,w
   981  0727  0771               	addwf	?___wmul+1,w
   982  0728  00BB               	movwf	_T+1
   983  0729                     l91:	
   984                           ;ATM LCD.c: 116:         while(RD3==1);
   985                           
   986  0729  1988               	btfsc	8,3	;volatile
   987  072A  2F2C               	goto	u321
   988  072B  2F2D               	goto	u320
   989  072C                     u321:
   990  072C  2F29               	goto	l91
   991  072D                     u320:
   992  072D                     l90:	
   993                           ;ATM LCD.c: 117:     }
   994                           
   995                           
   996                           ;ATM LCD.c: 118:     if(RD4==1)
   997  072D  1E08               	btfss	8,4	;volatile
   998  072E  2F30               	goto	u331
   999  072F  2F31               	goto	u330
  1000  0730                     u331:
  1001  0730  2F5C               	goto	l94
  1002  0731                     u330:
  1003  0731                     l876:
  1004                           
  1005                           ;ATM LCD.c: 119:     {;ATM LCD.c: 120:         LCD(num[b],1);
  1006  0731  01F2               	clrf	LCD@h
  1007  0732  0AF2               	incf	LCD@h,f
  1008  0733  0878               	movf	keypad@b,w
  1009  0734  00BE               	movwf	??_keypad
  1010  0735  073E               	addwf	??_keypad,w
  1011  0736  3E20               	addlw	(low (_num| 0))& (0+255)
  1012  0737  0084               	movwf	4
  1013  0738  1383               	bcf	3,7	;select IRP bank0
  1014  0739  0800               	movf	0,w
  1015  073A  120A  118A  2564  120A  118A  	fcall	_LCD
  1016  073F                     l878:
  1017                           
  1018                           ;ATM LCD.c: 121:         T=(T*10)+b;
  1019  073F  1283               	bcf	3,5	;RP0=0, select bank0
  1020  0740  1303               	bcf	3,6	;RP1=0, select bank0
  1021  0741  083B               	movf	_T+1,w
  1022  0742  00F1               	movwf	___wmul@multiplier+1
  1023  0743  083A               	movf	_T,w
  1024  0744  00F0               	movwf	___wmul@multiplier
  1025  0745  300A               	movlw	10
  1026  0746  00F2               	movwf	___wmul@multiplicand
  1027  0747  3000               	movlw	0
  1028  0748  00F3               	movwf	___wmul@multiplicand+1
  1029  0749  120A  118A  25A9  120A  118A  	fcall	___wmul
  1030  074E  0878               	movf	keypad@b,w
  1031  074F  0770               	addwf	?___wmul,w
  1032  0750  1283               	bcf	3,5	;RP0=0, select bank0
  1033  0751  1303               	bcf	3,6	;RP1=0, select bank0
  1034  0752  00BA               	movwf	_T
  1035  0753  0879               	movf	keypad@b+1,w
  1036  0754  1803               	skipnc
  1037  0755  0A79               	incf	keypad@b+1,w
  1038  0756  0771               	addwf	?___wmul+1,w
  1039  0757  00BB               	movwf	_T+1
  1040  0758                     l95:	
  1041                           ;ATM LCD.c: 122:         while(RD4==1);
  1042                           
  1043  0758  1A08               	btfsc	8,4	;volatile
  1044  0759  2F5B               	goto	u341
  1045  075A  2F5C               	goto	u340
  1046  075B                     u341:
  1047  075B  2F58               	goto	l95
  1048  075C                     u340:
  1049  075C                     l94:	
  1050                           ;ATM LCD.c: 123:     }
  1051                           
  1052                           
  1053                           ;ATM LCD.c: 124:     if(RD5==1)
  1054  075C  1E88               	btfss	8,5	;volatile
  1055  075D  2F5F               	goto	u351
  1056  075E  2F60               	goto	u350
  1057  075F                     u351:
  1058  075F  2F8B               	goto	l98
  1059  0760                     u350:
  1060  0760                     l880:
  1061                           
  1062                           ;ATM LCD.c: 125:     {;ATM LCD.c: 126:         LCD(num[c],1);
  1063  0760  01F2               	clrf	LCD@h
  1064  0761  0AF2               	incf	LCD@h,f
  1065  0762  087A               	movf	keypad@c,w
  1066  0763  00BE               	movwf	??_keypad
  1067  0764  073E               	addwf	??_keypad,w
  1068  0765  3E20               	addlw	(low (_num| 0))& (0+255)
  1069  0766  0084               	movwf	4
  1070  0767  1383               	bcf	3,7	;select IRP bank0
  1071  0768  0800               	movf	0,w
  1072  0769  120A  118A  2564  120A  118A  	fcall	_LCD
  1073  076E                     l882:
  1074                           
  1075                           ;ATM LCD.c: 127:         T=(T*10)+c;
  1076  076E  1283               	bcf	3,5	;RP0=0, select bank0
  1077  076F  1303               	bcf	3,6	;RP1=0, select bank0
  1078  0770  083B               	movf	_T+1,w
  1079  0771  00F1               	movwf	___wmul@multiplier+1
  1080  0772  083A               	movf	_T,w
  1081  0773  00F0               	movwf	___wmul@multiplier
  1082  0774  300A               	movlw	10
  1083  0775  00F2               	movwf	___wmul@multiplicand
  1084  0776  3000               	movlw	0
  1085  0777  00F3               	movwf	___wmul@multiplicand+1
  1086  0778  120A  118A  25A9  120A  118A  	fcall	___wmul
  1087  077D  087A               	movf	keypad@c,w
  1088  077E  0770               	addwf	?___wmul,w
  1089  077F  1283               	bcf	3,5	;RP0=0, select bank0
  1090  0780  1303               	bcf	3,6	;RP1=0, select bank0
  1091  0781  00BA               	movwf	_T
  1092  0782  087B               	movf	keypad@c+1,w
  1093  0783  1803               	skipnc
  1094  0784  0A7B               	incf	keypad@c+1,w
  1095  0785  0771               	addwf	?___wmul+1,w
  1096  0786  00BB               	movwf	_T+1
  1097  0787                     l99:	
  1098                           ;ATM LCD.c: 128:         while(RD5==1);
  1099                           
  1100  0787  1A88               	btfsc	8,5	;volatile
  1101  0788  2F8A               	goto	u361
  1102  0789  2F8B               	goto	u360
  1103  078A                     u361:
  1104  078A  2F87               	goto	l99
  1105  078B                     u360:
  1106  078B                     l98:	
  1107                           ;ATM LCD.c: 129:     }
  1108                           
  1109                           
  1110                           ;ATM LCD.c: 130:     if((RD6==1)&&(d==0))
  1111  078B  1F08               	btfss	8,6	;volatile
  1112  078C  2F8E               	goto	u371
  1113  078D  2F8F               	goto	u370
  1114  078E                     u371:
  1115  078E  2FC6               	goto	l102
  1116  078F                     u370:
  1117  078F                     l884:
  1118  078F  087C               	movf	keypad@d,w
  1119  0790  047D               	iorwf	keypad@d+1,w
  1120  0791  1D03               	btfss	3,2
  1121  0792  2F94               	goto	u381
  1122  0793  2F95               	goto	u380
  1123  0794                     u381:
  1124  0794  2FC6               	goto	l102
  1125  0795                     u380:
  1126  0795                     l886:
  1127                           
  1128                           ;ATM LCD.c: 131:     {;ATM LCD.c: 132:         LCD(num[d],1);
  1129  0795  01F2               	clrf	LCD@h
  1130  0796  0AF2               	incf	LCD@h,f
  1131  0797  087C               	movf	keypad@d,w
  1132  0798  00BE               	movwf	??_keypad
  1133  0799  073E               	addwf	??_keypad,w
  1134  079A  3E20               	addlw	(low (_num| 0))& (0+255)
  1135  079B  0084               	movwf	4
  1136  079C  1383               	bcf	3,7	;select IRP bank0
  1137  079D  0800               	movf	0,w
  1138  079E  120A  118A  2564  120A  118A  	fcall	_LCD
  1139  07A3                     l888:
  1140                           
  1141                           ;ATM LCD.c: 133:         T=(T*10)+d;
  1142  07A3  1283               	bcf	3,5	;RP0=0, select bank0
  1143  07A4  1303               	bcf	3,6	;RP1=0, select bank0
  1144  07A5  083B               	movf	_T+1,w
  1145  07A6  00F1               	movwf	___wmul@multiplier+1
  1146  07A7  083A               	movf	_T,w
  1147  07A8  00F0               	movwf	___wmul@multiplier
  1148  07A9  300A               	movlw	10
  1149  07AA  00F2               	movwf	___wmul@multiplicand
  1150  07AB  3000               	movlw	0
  1151  07AC  00F3               	movwf	___wmul@multiplicand+1
  1152  07AD  120A  118A  25A9  120A  118A  	fcall	___wmul
  1153  07B2  087C               	movf	keypad@d,w
  1154  07B3  0770               	addwf	?___wmul,w
  1155  07B4  1283               	bcf	3,5	;RP0=0, select bank0
  1156  07B5  1303               	bcf	3,6	;RP1=0, select bank0
  1157  07B6  00BA               	movwf	_T
  1158  07B7  087D               	movf	keypad@d+1,w
  1159  07B8  1803               	skipnc
  1160  07B9  0A7D               	incf	keypad@d+1,w
  1161  07BA  0771               	addwf	?___wmul+1,w
  1162  07BB  00BB               	movwf	_T+1
  1163  07BC                     l103:	
  1164                           ;ATM LCD.c: 134:         while((RD6==1)&&(d==0));
  1165                           
  1166  07BC  1F08               	btfss	8,6	;volatile
  1167  07BD  2FBF               	goto	u391
  1168  07BE  2FC0               	goto	u390
  1169  07BF                     u391:
  1170  07BF  2FC6               	goto	l102
  1171  07C0                     u390:
  1172  07C0                     l890:
  1173  07C0  087C               	movf	keypad@d,w
  1174  07C1  047D               	iorwf	keypad@d+1,w
  1175  07C2  1903               	btfsc	3,2
  1176  07C3  2FC5               	goto	u401
  1177  07C4  2FC6               	goto	u400
  1178  07C5                     u401:
  1179  07C5  2FBC               	goto	l103
  1180  07C6                     u400:
  1181  07C6                     l102:	
  1182                           ;ATM LCD.c: 135:     }
  1183                           
  1184                           
  1185                           ;ATM LCD.c: 136:     if ((RD6==1)&&(d==10))
  1186  07C6  1F08               	btfss	8,6	;volatile
  1187  07C7  2FC9               	goto	u411
  1188  07C8  2FCA               	goto	u410
  1189  07C9                     u411:
  1190  07C9  2FE7               	goto	l114
  1191  07CA                     u410:
  1192  07CA                     l892:
  1193  07CA  300A               	movlw	10
  1194  07CB  067C               	xorwf	keypad@d,w
  1195  07CC  047D               	iorwf	keypad@d+1,w
  1196  07CD  1D03               	btfss	3,2
  1197  07CE  2FD0               	goto	u421
  1198  07CF  2FD1               	goto	u420
  1199  07D0                     u421:
  1200  07D0  2FE7               	goto	l114
  1201  07D1                     u420:
  1202  07D1                     l894:
  1203                           
  1204                           ;ATM LCD.c: 137:     {;ATM LCD.c: 138:         LCD(0x01,0);
  1205  07D1  01F2               	clrf	LCD@h
  1206  07D2  3001               	movlw	1
  1207  07D3  120A  118A  2564  120A  118A  	fcall	_LCD
  1208  07D8                     l896:
  1209                           
  1210                           ;ATM LCD.c: 139:         g=0;
  1211  07D8  1283               	bcf	3,5	;RP0=0, select bank0
  1212  07D9  1303               	bcf	3,6	;RP1=0, select bank0
  1213  07DA  01B8               	clrf	_g
  1214  07DB  01B9               	clrf	_g+1
  1215  07DC                     l109:	
  1216                           ;ATM LCD.c: 140:         while((RD6==1)&&(d==10));
  1217                           
  1218  07DC  1F08               	btfss	8,6	;volatile
  1219  07DD  2FDF               	goto	u431
  1220  07DE  2FE0               	goto	u430
  1221  07DF                     u431:
  1222  07DF  2FE7               	goto	l114
  1223  07E0                     u430:
  1224  07E0                     l898:
  1225  07E0  300A               	movlw	10
  1226  07E1  067C               	xorwf	keypad@d,w
  1227  07E2  047D               	iorwf	keypad@d+1,w
  1228  07E3  1903               	btfsc	3,2
  1229  07E4  2FE6               	goto	u441
  1230  07E5  2FE7               	goto	u440
  1231  07E6                     u441:
  1232  07E6  2FDC               	goto	l109
  1233  07E7                     u440:
  1234  07E7                     l114:
  1235  07E7  0008               	return
  1236  07E8                     __end_of_keypad:
  1237                           
  1238                           	psect	text3
  1239  05A9                     __ptext3:	
  1240 ;; *************** function ___wmul *****************
  1241 ;; Defined at:
  1242 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\Umul16.c"
  1243 ;; Parameters:    Size  Location     Type
  1244 ;;  multiplier      2    0[COMMON] unsigned int 
  1245 ;;  multiplicand    2    2[COMMON] unsigned int 
  1246 ;; Auto vars:     Size  Location     Type
  1247 ;;  product         2    4[COMMON] unsigned int 
  1248 ;; Return value:  Size  Location     Type
  1249 ;;                  2    0[COMMON] unsigned int 
  1250 ;; Registers used:
  1251 ;;		wreg, status,2, status,0
  1252 ;; Tracked objects:
  1253 ;;		On entry : 0/0
  1254 ;;		On exit  : 0/0
  1255 ;;		Unchanged: 0/0
  1256 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1257 ;;      Params:         4       0       0       0       0
  1258 ;;      Locals:         2       0       0       0       0
  1259 ;;      Temps:          0       0       0       0       0
  1260 ;;      Totals:         6       0       0       0       0
  1261 ;;Total ram usage:        6 bytes
  1262 ;; Hardware stack levels used: 1
  1263 ;; This function calls:
  1264 ;;		Nothing
  1265 ;; This function is called by:
  1266 ;;		_keypad
  1267 ;; This function uses a non-reentrant model
  1268 ;;
  1269                           
  1270                           
  1271                           ;psect for function ___wmul
  1272  05A9                     ___wmul:
  1273  05A9                     l856:	
  1274                           ;incstack = 0
  1275                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  1276                           
  1277  05A9  01F4               	clrf	___wmul@product
  1278  05AA  01F5               	clrf	___wmul@product+1
  1279  05AB                     l858:
  1280  05AB  1C70               	btfss	___wmul@multiplier,0
  1281  05AC  2DAE               	goto	u271
  1282  05AD  2DAF               	goto	u270
  1283  05AE                     u271:
  1284  05AE  2DB5               	goto	l200
  1285  05AF                     u270:
  1286  05AF                     l860:
  1287  05AF  0872               	movf	___wmul@multiplicand,w
  1288  05B0  07F4               	addwf	___wmul@product,f
  1289  05B1  1803               	skipnc
  1290  05B2  0AF5               	incf	___wmul@product+1,f
  1291  05B3  0873               	movf	___wmul@multiplicand+1,w
  1292  05B4  07F5               	addwf	___wmul@product+1,f
  1293  05B5                     l200:
  1294  05B5  3001               	movlw	1
  1295  05B6                     u285:
  1296  05B6  1003               	clrc
  1297  05B7  0DF2               	rlf	___wmul@multiplicand,f
  1298  05B8  0DF3               	rlf	___wmul@multiplicand+1,f
  1299  05B9  3EFF               	addlw	-1
  1300  05BA  1D03               	skipz
  1301  05BB  2DB6               	goto	u285
  1302  05BC                     l862:
  1303  05BC  3001               	movlw	1
  1304  05BD                     u295:
  1305  05BD  1003               	clrc
  1306  05BE  0CF1               	rrf	___wmul@multiplier+1,f
  1307  05BF  0CF0               	rrf	___wmul@multiplier,f
  1308  05C0  3EFF               	addlw	-1
  1309  05C1  1D03               	skipz
  1310  05C2  2DBD               	goto	u295
  1311  05C3                     l864:
  1312  05C3  0870               	movf	___wmul@multiplier,w
  1313  05C4  0471               	iorwf	___wmul@multiplier+1,w
  1314  05C5  1D03               	btfss	3,2
  1315  05C6  2DC8               	goto	u301
  1316  05C7  2DC9               	goto	u300
  1317  05C8                     u301:
  1318  05C8  2DAB               	goto	l858
  1319  05C9                     u300:
  1320  05C9                     l866:
  1321  05C9  0875               	movf	___wmul@product+1,w
  1322  05CA  00F1               	movwf	?___wmul+1
  1323  05CB  0874               	movf	___wmul@product,w
  1324  05CC  00F0               	movwf	?___wmul
  1325  05CD                     l202:
  1326  05CD  0008               	return
  1327  05CE                     __end_of___wmul:
  1328                           
  1329                           	psect	text4
  1330  0564                     __ptext4:	
  1331 ;; *************** function _LCD *****************
  1332 ;; Defined at:
  1333 ;;		line 78 in file "ATM LCD.c"
  1334 ;; Parameters:    Size  Location     Type
  1335 ;;  g               1    wreg     unsigned char 
  1336 ;;  h               1    2[COMMON] unsigned char 
  1337 ;; Auto vars:     Size  Location     Type
  1338 ;;  g               1    3[COMMON] unsigned char 
  1339 ;; Return value:  Size  Location     Type
  1340 ;;                  1    wreg      void 
  1341 ;; Registers used:
  1342 ;;		wreg, status,2, status,0, pclath, cstack
  1343 ;; Tracked objects:
  1344 ;;		On entry : 0/0
  1345 ;;		On exit  : 0/0
  1346 ;;		Unchanged: 0/0
  1347 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1348 ;;      Params:         1       0       0       0       0
  1349 ;;      Locals:         1       0       0       0       0
  1350 ;;      Temps:          0       0       0       0       0
  1351 ;;      Totals:         2       0       0       0       0
  1352 ;;Total ram usage:        2 bytes
  1353 ;; Hardware stack levels used: 1
  1354 ;; Hardware stack levels required when called: 1
  1355 ;; This function calls:
  1356 ;;		_pulse
  1357 ;; This function is called by:
  1358 ;;		_main
  1359 ;;		_key
  1360 ;;		_keypad
  1361 ;; This function uses a non-reentrant model
  1362 ;;
  1363                           
  1364                           
  1365                           ;psect for function _LCD
  1366  0564                     _LCD:
  1367                           
  1368                           ;incstack = 0
  1369                           ; Regs used in _LCD: [wreg+status,2+status,0+pclath+cstack]
  1370                           ;LCD@g stored from wreg
  1371  0564  00F3               	movwf	LCD@g
  1372  0565                     l850:
  1373                           
  1374                           ;ATM LCD.c: 78: void LCD(char g,char h);ATM LCD.c: 79: {;ATM LCD.c: 80:     RA2=h;
  1375  0565  1872               	btfsc	LCD@h,0
  1376  0566  2D68               	goto	u251
  1377  0567  2D6C               	goto	u250
  1378  0568                     u251:
  1379  0568  1283               	bcf	3,5	;RP0=0, select bank0
  1380  0569  1303               	bcf	3,6	;RP1=0, select bank0
  1381  056A  1505               	bsf	5,2	;volatile
  1382  056B  2D6F               	goto	u264
  1383  056C                     u250:
  1384  056C  1283               	bcf	3,5	;RP0=0, select bank0
  1385  056D  1303               	bcf	3,6	;RP1=0, select bank0
  1386  056E  1105               	bcf	5,2	;volatile
  1387  056F                     u264:
  1388                           
  1389                           ;ATM LCD.c: 81:     RA1=0;
  1390  056F  1085               	bcf	5,1	;volatile
  1391  0570                     l852:
  1392                           
  1393                           ;ATM LCD.c: 82:     PORTC=g;
  1394  0570  0873               	movf	LCD@g,w
  1395  0571  0087               	movwf	7	;volatile
  1396  0572                     l854:
  1397                           
  1398                           ;ATM LCD.c: 83:     pulse();
  1399  0572  120A  118A  2590  120A  118A  	fcall	_pulse
  1400  0577                     l75:
  1401  0577  0008               	return
  1402  0578                     __end_of_LCD:
  1403                           
  1404                           	psect	text5
  1405  05CE                     __ptext5:	
  1406 ;; *************** function _LCD_s *****************
  1407 ;; Defined at:
  1408 ;;		line 85 in file "ATM LCD.c"
  1409 ;; Parameters:    Size  Location     Type
  1410 ;;  g               1    wreg     PTR unsigned char 
  1411 ;;		 -> STR_6(11), STR_5(15), STR_4(8), STR_3(8), 
  1412 ;;		 -> STR_2(15), STR_1(10), 
  1413 ;; Auto vars:     Size  Location     Type
  1414 ;;  g               1    3[COMMON] PTR unsigned char 
  1415 ;;		 -> STR_6(11), STR_5(15), STR_4(8), STR_3(8), 
  1416 ;;		 -> STR_2(15), STR_1(10), 
  1417 ;; Return value:  Size  Location     Type
  1418 ;;                  1    wreg      void 
  1419 ;; Registers used:
  1420 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1421 ;; Tracked objects:
  1422 ;;		On entry : 0/0
  1423 ;;		On exit  : 0/0
  1424 ;;		Unchanged: 0/0
  1425 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1426 ;;      Params:         0       0       0       0       0
  1427 ;;      Locals:         1       0       0       0       0
  1428 ;;      Temps:          1       0       0       0       0
  1429 ;;      Totals:         2       0       0       0       0
  1430 ;;Total ram usage:        2 bytes
  1431 ;; Hardware stack levels used: 1
  1432 ;; Hardware stack levels required when called: 1
  1433 ;; This function calls:
  1434 ;;		_pulse
  1435 ;; This function is called by:
  1436 ;;		_main
  1437 ;; This function uses a non-reentrant model
  1438 ;;
  1439                           
  1440                           
  1441                           ;psect for function _LCD_s
  1442  05CE                     _LCD_s:
  1443                           
  1444                           ;incstack = 0
  1445                           ; Regs used in _LCD_s: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1446                           ;LCD_s@g stored from wreg
  1447  05CE  00F3               	movwf	LCD_s@g
  1448  05CF                     l900:
  1449                           
  1450                           ;ATM LCD.c: 85: void LCD_s(char *g);ATM LCD.c: 86: {;ATM LCD.c: 87:     RA2=1;
  1451  05CF  1283               	bcf	3,5	;RP0=0, select bank0
  1452  05D0  1303               	bcf	3,6	;RP1=0, select bank0
  1453  05D1  1505               	bsf	5,2	;volatile
  1454                           
  1455                           ;ATM LCD.c: 88:     RA1=0;
  1456  05D2  1085               	bcf	5,1	;volatile
  1457                           
  1458                           ;ATM LCD.c: 89:     while(*g)
  1459  05D3  2DE7               	goto	l908
  1460  05D4                     l902:
  1461                           
  1462                           ;ATM LCD.c: 90:     {;ATM LCD.c: 91:     PORTC=*g++;
  1463  05D4  0873               	movf	LCD_s@g,w
  1464  05D5  0084               	movwf	4
  1465  05D6  120A  118A  2003  120A  118A  	fcall	stringdir
  1466  05DB  1283               	bcf	3,5	;RP0=0, select bank0
  1467  05DC  1303               	bcf	3,6	;RP1=0, select bank0
  1468  05DD  0087               	movwf	7	;volatile
  1469  05DE                     l904:
  1470  05DE  3001               	movlw	1
  1471  05DF  00F2               	movwf	??_LCD_s
  1472  05E0  0872               	movf	??_LCD_s,w
  1473  05E1  07F3               	addwf	LCD_s@g,f
  1474  05E2                     l906:
  1475                           
  1476                           ;ATM LCD.c: 92:     pulse();
  1477  05E2  120A  118A  2590  120A  118A  	fcall	_pulse
  1478  05E7                     l908:
  1479                           
  1480                           ;ATM LCD.c: 89:     while(*g)
  1481  05E7  0873               	movf	LCD_s@g,w
  1482  05E8  0084               	movwf	4
  1483  05E9  120A  118A  2003  120A  118A  	fcall	stringdir
  1484  05EE  3A00               	xorlw	0
  1485  05EF  1D03               	skipz
  1486  05F0  2DF2               	goto	u451
  1487  05F1  2DF3               	goto	u450
  1488  05F2                     u451:
  1489  05F2  2DD4               	goto	l902
  1490  05F3                     u450:
  1491  05F3                     l81:
  1492  05F3  0008               	return
  1493  05F4                     __end_of_LCD_s:
  1494                           
  1495                           	psect	text6
  1496  0590                     __ptext6:	
  1497 ;; *************** function _pulse *****************
  1498 ;; Defined at:
  1499 ;;		line 71 in file "ATM LCD.c"
  1500 ;; Parameters:    Size  Location     Type
  1501 ;;		None
  1502 ;; Auto vars:     Size  Location     Type
  1503 ;;		None
  1504 ;; Return value:  Size  Location     Type
  1505 ;;                  1    wreg      void 
  1506 ;; Registers used:
  1507 ;;		wreg
  1508 ;; Tracked objects:
  1509 ;;		On entry : 0/0
  1510 ;;		On exit  : 0/0
  1511 ;;		Unchanged: 0/0
  1512 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1513 ;;      Params:         0       0       0       0       0
  1514 ;;      Locals:         0       0       0       0       0
  1515 ;;      Temps:          2       0       0       0       0
  1516 ;;      Totals:         2       0       0       0       0
  1517 ;;Total ram usage:        2 bytes
  1518 ;; Hardware stack levels used: 1
  1519 ;; This function calls:
  1520 ;;		Nothing
  1521 ;; This function is called by:
  1522 ;;		_LCD
  1523 ;;		_LCD_s
  1524 ;; This function uses a non-reentrant model
  1525 ;;
  1526                           
  1527                           
  1528                           ;psect for function _pulse
  1529  0590                     _pulse:
  1530  0590                     l844:	
  1531                           ;incstack = 0
  1532                           ; Regs used in _pulse: [wreg]
  1533                           
  1534                           
  1535                           ;ATM LCD.c: 73:     RA0=1;
  1536  0590  1283               	bcf	3,5	;RP0=0, select bank0
  1537  0591  1303               	bcf	3,6	;RP1=0, select bank0
  1538  0592  1405               	bsf	5,0	;volatile
  1539  0593                     l846:
  1540                           
  1541                           ;ATM LCD.c: 74:     _delay((unsigned long)((500)*(400000/4000.0)));
  1542  0593  3041               	movlw	65
  1543  0594  00F1               	movwf	??_pulse+1
  1544  0595  30EE               	movlw	238
  1545  0596  00F0               	movwf	??_pulse
  1546  0597                     u497:
  1547  0597  0BF0               	decfsz	??_pulse,f
  1548  0598  2D97               	goto	u497
  1549  0599  0BF1               	decfsz	??_pulse+1,f
  1550  059A  2D97               	goto	u497
  1551  059B  0000               	nop
  1552  059C                     l848:
  1553                           
  1554                           ;ATM LCD.c: 75:     RA0=0;
  1555  059C  1283               	bcf	3,5	;RP0=0, select bank0
  1556  059D  1303               	bcf	3,6	;RP1=0, select bank0
  1557  059E  1005               	bcf	5,0	;volatile
  1558                           
  1559                           ;ATM LCD.c: 76:     _delay((unsigned long)((500)*(400000/4000.0)));
  1560  059F  3041               	movlw	65
  1561  05A0  00F1               	movwf	??_pulse+1
  1562  05A1  30EE               	movlw	238
  1563  05A2  00F0               	movwf	??_pulse
  1564  05A3                     u507:
  1565  05A3  0BF0               	decfsz	??_pulse,f
  1566  05A4  2DA3               	goto	u507
  1567  05A5  0BF1               	decfsz	??_pulse+1,f
  1568  05A6  2DA3               	goto	u507
  1569  05A7  0000               	nop
  1570  05A8                     l72:
  1571  05A8  0008               	return
  1572  05A9                     __end_of_pulse:
  1573  007E                     btemp	set	126	;btemp
  1574  007E                     wtemp0	set	126

Data Sizes:
    Strings     67
    Constant    0
    Data        24
    BSS         6
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80      1      31
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    LCD_s@g	PTR unsigned char  size(1) Largest target is 15
		 -> STR_6(CODE[11]), STR_5(CODE[15]), STR_4(CODE[8]), STR_3(CODE[8]), 
		 -> STR_2(CODE[15]), STR_1(CODE[10]), 


Critical Paths under _main in COMMON

    _key->_keypad
    _keypad->___wmul
    _LCD->_pulse
    _LCD_s->_pulse

Critical Paths under _main in BANK0

    _key->_keypad

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    5671
                                _LCD
                              _LCD_s
                                _key
 ---------------------------------------------------------------------------------
 (1) _key                                                  0     0      0    4244
                                _LCD
                             _keypad
 ---------------------------------------------------------------------------------
 (2) _keypad                                               9     1      8    3060
                                              6 COMMON     8     0      8
                                              0 BANK0      1     1      0
                                _LCD
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     700
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) _LCD                                                  2     1      1    1184
                                              2 COMMON     2     1      1
                              _pulse
 ---------------------------------------------------------------------------------
 (1) _LCD_s                                                2     2      0     243
                                              2 COMMON     2     2      0
                              _pulse
 ---------------------------------------------------------------------------------
 (4) _pulse                                                2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD
     _pulse
   _LCD_s
     _pulse
   _key
     _LCD
     _keypad
       _LCD
       ___wmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      1      1F       5       38.8%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      2D      12        0.0%
ABS                  0      0      2D       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Fri Mar 24 12:37:08 2023

                      _T 003A                        _g 0038                        pc 0002  
                     l72 05A8                       l81 05F3                       l90 072D  
                     l75 0577                       l91 0729                       l85 0602  
                     l94 075C                       l95 0758                       l87 0655  
                     l98 078B                       l99 0787                       fsr 0004  
    ___wmul@multiplicand 0072                      l102 07C6                      l103 07BC  
                    l200 05B5                      l202 05CD                      l114 07E7  
                    l109 07DC                      l900 05CF                      l902 05D4  
                    l910 05F4                      l904 05DE                      l920 061E  
                    l912 05FA                      l906 05E2                      l850 0565  
                    l922 0633                      l914 0605                      l930 0656  
                    l844 0590                      l908 05E7                      l852 0570  
                    l860 05AF                      l924 0636                      l916 061A  
                    l940 066D                      l932 0662                      l846 0593  
                    l854 0572                      l862 05BC                      l870 06FC  
                    l926 0637                      l918 061D                      l950 068F  
                    l942 0674                      l934 0666                      l848 059C  
                    l864 05C3                      l856 05A9                      l880 0760  
                    l872 0702                      l928 064D                      l960 06B0  
                    l952 0694                      l944 067B                      l936 0669  
                    l866 05C9                      l858 05AB                      l890 07C0  
                    l882 076E                      l874 0710                      l970 06D9  
                    l962 06B5                      l954 069F                      l946 0682  
                    l938 066C                      l892 07CA                      l884 078F  
                    l876 0731                      l972 06E0                      l964 06BE  
                    l956 06A6                      l948 0689                      l894 07D1  
                    l886 0795                      l878 073F                      l974 06E6  
                    l966 06C5                      l958 06AC                      l896 07D8  
                    l888 07A3                      l968 06CB                      l976 06EB  
                    l898 07E0                      l978 06F2                      _RA0 0028  
                    _LCD 0564                      _RA1 0029                      _RA2 002A  
                    _RD0 0040                      _RD1 0041                      _RD2 0042  
                    _RD3 0043                      _RD4 0044                      _RD5 0045  
                    _RD6 0046                      u300 05C9                      u301 05C8  
                    u310 0702                      u311 0701                      u400 07C6  
                    u320 072D                      u401 07C5                      u321 072C  
                    u250 056C                      u410 07CA                      u330 0731  
                    u251 0568                      u411 07C9                      u331 0730  
                    u420 07D1                      u340 075C                      u421 07D0  
                    u341 075B                      u270 05AF                      u430 07E0  
                    u350 0760                      u271 05AE                      u431 07DF  
                    u351 075F                      u264 056F                      u440 07E7  
                    u360 078B                      u441 07E6                      u361 078A  
                    u450 05F3                      u370 078F                      u507 05A3  
                    u451 05F2                      u371 078E                      u380 0795  
                    u460 0655                      u285 05B6                      u381 0794  
                    u461 0654                      u390 07C0                      u470 069F  
                    u295 05BD                      u391 07BF                      u471 069E  
                    u480 06BE                      u481 06BD                      u497 0597  
                    _key 05F4                      _num 0020                      fsr0 0004  
                    indf 0000                     LCD@g 0073                     LCD@h 0072  
                   ?_LCD 0072                     ?_key 0070                     STR_1 0032  
                   STR_2 0018                     STR_3 003C                     STR_4 0044  
                   STR_5 0009                     STR_6 0027                     _flag 003C  
                   _main 0656                     btemp 007E                     start 0000  
                  ??_LCD 0073                    ??_key 007E                    ?_main 0070  
                  _ANSEL 0188                    _LCD_s 05CE                    _PORTA 0005  
                  _PORTC 0007                    _PORTD 0008                    _TRISA 0085  
                  _TRISC 0087                    _TRISD 0088                    _pulse 0590  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 07E8             __end_of_main 06FC                   ??_main 007E  
                 ?_LCD_s 0070                   LCD_s@g 0073                   ?_pulse 0070  
                 _ANSELH 0189                   ___wmul 05A9                   _keypad 06FC  
__end_of__initialization 07FC            __end_of_LCD_s 05F4           __pcstackCOMMON 0070  
           __pidataBANK0 0578            __end_of_pulse 05A9                  ??_LCD_s 0072  
                ??_pulse 0070               __pbssBANK0 0038               __pmaintext 0656  
                ?___wmul 0070                  ?_keypad 0076               __stringtab 0003  
        __size_of___wmul 0025          __size_of_keypad 00EC                  __ptext1 05F4  
                __ptext2 06FC                  __ptext3 05A9                  __ptext4 0564  
                __ptext5 05CE                  __ptext6 0590             __size_of_LCD 0014  
           __size_of_key 0062     end_of_initialization 07FC                  keypad@a 0076  
                keypad@b 0078                  keypad@c 007A                  keypad@d 007C  
         __end_of___wmul 05CE           __end_of_keypad 07E8      start_initialization 07E8  
            __end_of_LCD 0578              __end_of_key 0656                 ??___wmul 0074  
             init_fetch0 0551              __pdataBANK0 0020                 ??_keypad 003E  
              ___latbits 0002            __pcstackBANK0 003E                __pstrings 0003  
         __size_of_LCD_s 0026           __size_of_pulse 0019           ___wmul@product 0074  
            __stringbase 0008        ___wmul@multiplier 0070       __end_of__stringtab 0009  
          __size_of_main 00A6                 init_ram0 0555                stringcode 0003  
               stringdir 0003                 stringtab 0003  
