

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Thu Mar 23 14:31:27 2023

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	inittext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	dabs	1,0x7E,2
    20  0000                     
    21                           ; Version 2.20
    22                           ; Generated 12/02/2020 GMT
    23                           ; 
    24                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    25                           ; All rights reserved.
    26                           ; 
    27                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    28                           ; 
    29                           ; Redistribution and use in source and binary forms, with or without modification, are
    30                           ; permitted provided that the following conditions are met:
    31                           ; 
    32                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    33                           ;        conditions and the following disclaimer.
    34                           ; 
    35                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    36                           ;        of conditions and the following disclaimer in the documentation and/or other
    37                           ;        materials provided with the distribution.
    38                           ; 
    39                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    40                           ;        software without specific prior written permission.
    41                           ; 
    42                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    43                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    44                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    45                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    46                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    47                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    48                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    49                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    50                           ; 
    51                           ; 
    52                           ; Code-generator required, PIC16F887 Definitions
    53                           ; 
    54                           ; SFR Addresses
    55  0000                     	;# 
    56  0001                     	;# 
    57  0002                     	;# 
    58  0003                     	;# 
    59  0004                     	;# 
    60  0005                     	;# 
    61  0006                     	;# 
    62  0007                     	;# 
    63  0008                     	;# 
    64  0009                     	;# 
    65  000A                     	;# 
    66  000B                     	;# 
    67  000C                     	;# 
    68  000D                     	;# 
    69  000E                     	;# 
    70  000E                     	;# 
    71  000F                     	;# 
    72  0010                     	;# 
    73  0011                     	;# 
    74  0012                     	;# 
    75  0013                     	;# 
    76  0014                     	;# 
    77  0015                     	;# 
    78  0015                     	;# 
    79  0016                     	;# 
    80  0017                     	;# 
    81  0018                     	;# 
    82  0019                     	;# 
    83  001A                     	;# 
    84  001B                     	;# 
    85  001B                     	;# 
    86  001C                     	;# 
    87  001D                     	;# 
    88  001E                     	;# 
    89  001F                     	;# 
    90  0081                     	;# 
    91  0085                     	;# 
    92  0086                     	;# 
    93  0087                     	;# 
    94  0088                     	;# 
    95  0089                     	;# 
    96  008C                     	;# 
    97  008D                     	;# 
    98  008E                     	;# 
    99  008F                     	;# 
   100  0090                     	;# 
   101  0091                     	;# 
   102  0092                     	;# 
   103  0093                     	;# 
   104  0093                     	;# 
   105  0093                     	;# 
   106  0094                     	;# 
   107  0095                     	;# 
   108  0096                     	;# 
   109  0097                     	;# 
   110  0098                     	;# 
   111  0099                     	;# 
   112  009A                     	;# 
   113  009B                     	;# 
   114  009C                     	;# 
   115  009D                     	;# 
   116  009E                     	;# 
   117  009F                     	;# 
   118  0105                     	;# 
   119  0107                     	;# 
   120  0108                     	;# 
   121  0109                     	;# 
   122  010C                     	;# 
   123  010C                     	;# 
   124  010D                     	;# 
   125  010E                     	;# 
   126  010F                     	;# 
   127  0185                     	;# 
   128  0187                     	;# 
   129  0188                     	;# 
   130  0189                     	;# 
   131  018C                     	;# 
   132  018D                     	;# 
   133  0000                     	;# 
   134  0001                     	;# 
   135  0002                     	;# 
   136  0003                     	;# 
   137  0004                     	;# 
   138  0005                     	;# 
   139  0006                     	;# 
   140  0007                     	;# 
   141  0008                     	;# 
   142  0009                     	;# 
   143  000A                     	;# 
   144  000B                     	;# 
   145  000C                     	;# 
   146  000D                     	;# 
   147  000E                     	;# 
   148  000E                     	;# 
   149  000F                     	;# 
   150  0010                     	;# 
   151  0011                     	;# 
   152  0012                     	;# 
   153  0013                     	;# 
   154  0014                     	;# 
   155  0015                     	;# 
   156  0015                     	;# 
   157  0016                     	;# 
   158  0017                     	;# 
   159  0018                     	;# 
   160  0019                     	;# 
   161  001A                     	;# 
   162  001B                     	;# 
   163  001B                     	;# 
   164  001C                     	;# 
   165  001D                     	;# 
   166  001E                     	;# 
   167  001F                     	;# 
   168  0081                     	;# 
   169  0085                     	;# 
   170  0086                     	;# 
   171  0087                     	;# 
   172  0088                     	;# 
   173  0089                     	;# 
   174  008C                     	;# 
   175  008D                     	;# 
   176  008E                     	;# 
   177  008F                     	;# 
   178  0090                     	;# 
   179  0091                     	;# 
   180  0092                     	;# 
   181  0093                     	;# 
   182  0093                     	;# 
   183  0093                     	;# 
   184  0094                     	;# 
   185  0095                     	;# 
   186  0096                     	;# 
   187  0097                     	;# 
   188  0098                     	;# 
   189  0099                     	;# 
   190  009A                     	;# 
   191  009B                     	;# 
   192  009C                     	;# 
   193  009D                     	;# 
   194  009E                     	;# 
   195  009F                     	;# 
   196  0105                     	;# 
   197  0107                     	;# 
   198  0108                     	;# 
   199  0109                     	;# 
   200  010C                     	;# 
   201  010C                     	;# 
   202  010D                     	;# 
   203  010E                     	;# 
   204  010F                     	;# 
   205  0185                     	;# 
   206  0187                     	;# 
   207  0188                     	;# 
   208  0189                     	;# 
   209  018C                     	;# 
   210  018D                     	;# 
   211                           
   212                           	psect	idataBANK0
   213  0633                     __pidataBANK0:
   214                           
   215                           ;initializer for _num
   216  0633  3430               	retlw	48
   217  0634  3400               	retlw	0
   218  0635  3431               	retlw	49
   219  0636  3400               	retlw	0
   220  0637  3432               	retlw	50
   221  0638  3400               	retlw	0
   222  0639  3433               	retlw	51
   223  063A  3400               	retlw	0
   224  063B  3434               	retlw	52
   225  063C  3400               	retlw	0
   226  063D  3435               	retlw	53
   227  063E  3400               	retlw	0
   228  063F  3436               	retlw	54
   229  0640  3400               	retlw	0
   230  0641  3437               	retlw	55
   231  0642  3400               	retlw	0
   232  0643  3438               	retlw	56
   233  0644  3400               	retlw	0
   234  0645  3439               	retlw	57
   235  0646  3400               	retlw	0
   236  0647  342A               	retlw	42
   237  0648  3400               	retlw	0
   238  0649  3423               	retlw	35
   239  064A  3400               	retlw	0
   240  0008                     _PORTD	set	8
   241  0007                     _PORTC	set	7
   242  0005                     _PORTA	set	5
   243  0046                     _RD6	set	70
   244  0045                     _RD5	set	69
   245  0044                     _RD4	set	68
   246  0043                     _RD3	set	67
   247  0042                     _RD2	set	66
   248  0041                     _RD1	set	65
   249  0040                     _RD0	set	64
   250  0029                     _RA1	set	41
   251  002A                     _RA2	set	42
   252  0028                     _RA0	set	40
   253  0088                     _TRISD	set	136
   254  0087                     _TRISC	set	135
   255  0085                     _TRISA	set	133
   256  0189                     _ANSELH	set	393
   257  0188                     _ANSEL	set	392
   258                           
   259                           	psect	strings
   260  0003                     __pstrings:
   261  0003                     stringtab:
   262  0003                     __stringtab:
   263  0003                     stringcode:	
   264                           ;	String table - string pointers are 1 byte each
   265                           
   266  0003                     stringdir:
   267  0003  3000               	movlw	high stringdir
   268  0004  008A               	movwf	10
   269  0005  0804               	movf	4,w
   270  0006  0A84               	incf	4,f
   271  0007  0782               	addwf	2,f
   272  0008                     __stringbase:
   273  0008  3400               	retlw	0
   274  0009                     __end_of__stringtab:
   275  0009                     STR_2:
   276  0009  3457               	retlw	87	;'W'
   277  000A  3472               	retlw	114	;'r'
   278  000B  346F               	retlw	111	;'o'
   279  000C  346E               	retlw	110	;'n'
   280  000D  3467               	retlw	103	;'g'
   281  000E  3420               	retlw	32	;' '
   282  000F  344E               	retlw	78	;'N'
   283  0010  3475               	retlw	117	;'u'
   284  0011  346D               	retlw	109	;'m'
   285  0012  3462               	retlw	98	;'b'
   286  0013  3465               	retlw	101	;'e'
   287  0014  3472               	retlw	114	;'r'
   288  0015  3400               	retlw	0
   289  0016                     STR_1:
   290  0016  3463               	retlw	99	;'c'
   291  0017  3461               	retlw	97	;'a'
   292  0018  346C               	retlw	108	;'l'
   293  0019  346C               	retlw	108	;'l'
   294  001A  3469               	retlw	105	;'i'
   295  001B  346E               	retlw	110	;'n'
   296  001C  3467               	retlw	103	;'g'
   297  001D  342E               	retlw	46	;'.'
   298  001E  342E               	retlw	46	;'.'
   299  001F  3400               	retlw	0
   300                           
   301                           	psect	cinit
   302  07EC                     start_initialization:	
   303                           ; #config settings
   304                           
   305  07EC                     __initialization:
   306                           
   307                           ; Initialize objects allocated to BANK0
   308  07EC  1383               	bcf	3,7	;select IRP bank0
   309  07ED  3038               	movlw	low (__pdataBANK0+24)
   310  07EE  00FD               	movwf	btemp+-1
   311  07EF  3006               	movlw	high __pidataBANK0
   312  07F0  00FE               	movwf	btemp
   313  07F1  3033               	movlw	low __pidataBANK0
   314  07F2  00FF               	movwf	btemp+1
   315  07F3  3020               	movlw	low __pdataBANK0
   316  07F4  0084               	movwf	4
   317  07F5  120A  118A  2610  120A  118A  	fcall	init_ram0
   318                           
   319                           ; Clear objects allocated to BANK0
   320  07FA  01B8               	clrf	__pbssBANK0& (0+127)
   321  07FB  01B9               	clrf	(__pbssBANK0+1)& (0+127)
   322  07FC                     end_of_initialization:	
   323                           ;End of C runtime variable initialization code
   324                           
   325  07FC                     __end_of__initialization:
   326  07FC  0183               	clrf	3
   327  07FD  120A  118A  2EDA   	ljmp	_main	;jump to C main() function
   328                           
   329                           	psect	bssBANK0
   330  0038                     __pbssBANK0:
   331  0038                     _T:
   332  0038                     	ds	2
   333                           
   334                           	psect	dataBANK0
   335  0020                     __pdataBANK0:
   336  0020                     _num:
   337  0020                     	ds	24
   338                           
   339                           	psect	inittext
   340  060C                     init_fetch0:	
   341                           ;	Called with low address in FSR and high address in W
   342                           
   343  060C  087E               	movf	btemp,w
   344  060D  008A               	movwf	10
   345  060E  087F               	movf	btemp+1,w
   346  060F  0082               	movwf	2
   347  0610                     init_ram0:	
   348                           ;Called with:
   349                           ;	high address of idata address in btemp 
   350                           ;	low address of idata address in btemp+1 
   351                           ;	low address of data in FSR
   352                           ;	high address + 1 of data in btemp-1
   353                           
   354  0610  120A  118A  260C  120A  118A  	fcall	init_fetch0
   355  0615  0080               	movwf	0
   356  0616  0A84               	incf	4,f
   357  0617  0804               	movf	4,w
   358  0618  067D               	xorwf	btemp+-1,w
   359  0619  1903               	btfsc	3,2
   360  061A  3400               	retlw	0
   361  061B  0AFF               	incf	btemp+1,f
   362  061C  1903               	btfsc	3,2
   363  061D  0AFE               	incf	btemp,f
   364  061E  2E10               	goto	init_ram0
   365                           
   366                           	psect	cstackCOMMON
   367  0070                     __pcstackCOMMON:
   368  0070                     ?_first_seg:
   369  0070                     ?_second_seg:	
   370                           ; 1 bytes @ 0x0
   371                           
   372  0070                     ?_third_seg:	
   373                           ; 1 bytes @ 0x0
   374                           
   375  0070                     ?_main:	
   376                           ; 1 bytes @ 0x0
   377                           
   378  0070                     ?_pulse:	
   379                           ; 1 bytes @ 0x0
   380                           
   381  0070                     ??_pulse:	
   382                           ; 1 bytes @ 0x0
   383                           
   384  0070                     ?_LCD_s:	
   385                           ; 1 bytes @ 0x0
   386                           
   387                           
   388                           ; 1 bytes @ 0x0
   389  0070                     	ds	2
   390  0072                     ?_LCD:
   391  0072                     ??_LCD_s:	
   392                           ; 1 bytes @ 0x2
   393                           
   394  0072                     LCD@h:	
   395                           ; 1 bytes @ 0x2
   396                           
   397                           
   398                           ; 1 bytes @ 0x2
   399  0072                     	ds	1
   400  0073                     ??_LCD:
   401  0073                     LCD@g:	
   402                           ; 1 bytes @ 0x3
   403                           
   404  0073                     LCD_s@g:	
   405                           ; 1 bytes @ 0x3
   406                           
   407                           
   408                           ; 1 bytes @ 0x3
   409  0073                     	ds	1
   410  0074                     ?_keypad:
   411  0074                     keypad@a:	
   412                           ; 1 bytes @ 0x4
   413                           
   414                           
   415                           ; 2 bytes @ 0x4
   416  0074                     	ds	2
   417  0076                     keypad@b:
   418                           
   419                           ; 2 bytes @ 0x6
   420  0076                     	ds	2
   421  0078                     keypad@c:
   422                           
   423                           ; 2 bytes @ 0x8
   424  0078                     	ds	2
   425  007A                     keypad@d:
   426                           
   427                           ; 2 bytes @ 0xA
   428  007A                     	ds	2
   429  007C                     ??_keypad:
   430                           
   431                           ; 1 bytes @ 0xC
   432  007C                     	ds	1
   433  007D                     ??_first_seg:
   434  007D                     ??_second_seg:	
   435                           ; 1 bytes @ 0xD
   436                           
   437  007D                     ??_third_seg:	
   438                           ; 1 bytes @ 0xD
   439                           
   440  007D                     ??_main:	
   441                           ; 1 bytes @ 0xD
   442                           
   443                           
   444                           	psect	maintext
   445  06DA                     __pmaintext:	
   446                           ; 1 bytes @ 0xD
   447 ;;
   448 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   449 ;;
   450 ;; *************** function _main *****************
   451 ;; Defined at:
   452 ;;		line 23 in file "keypad calling function.c"
   453 ;; Parameters:    Size  Location     Type
   454 ;;		None
   455 ;; Auto vars:     Size  Location     Type
   456 ;;		None
   457 ;; Return value:  Size  Location     Type
   458 ;;                  1    wreg      void 
   459 ;; Registers used:
   460 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   461 ;; Tracked objects:
   462 ;;		On entry : B00/0
   463 ;;		On exit  : 0/0
   464 ;;		Unchanged: 0/0
   465 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   466 ;;      Params:         0       0       0       0       0
   467 ;;      Locals:         0       0       0       0       0
   468 ;;      Temps:          0       0       0       0       0
   469 ;;      Totals:         0       0       0       0       0
   470 ;;Total ram usage:        0 bytes
   471 ;; Hardware stack levels required when called: 4
   472 ;; This function calls:
   473 ;;		_LCD
   474 ;;		_first_seg
   475 ;;		_second_seg
   476 ;;		_third_seg
   477 ;; This function is called by:
   478 ;;		Startup code after reset
   479 ;; This function uses a non-reentrant model
   480 ;;
   481                           
   482                           
   483                           ;psect for function _main
   484  06DA                     _main:
   485  06DA                     l879:	
   486                           ;incstack = 0
   487                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   488                           
   489                           
   490                           ;keypad calling function.c: 25:     TRISA=0X00;
   491  06DA  1683               	bsf	3,5	;RP0=1, select bank1
   492  06DB  1303               	bcf	3,6	;RP1=0, select bank1
   493  06DC  0185               	clrf	5	;volatile
   494                           
   495                           ;keypad calling function.c: 26:     PORTA=0X00;
   496  06DD  1283               	bcf	3,5	;RP0=0, select bank0
   497  06DE  1303               	bcf	3,6	;RP1=0, select bank0
   498  06DF  0185               	clrf	5	;volatile
   499                           
   500                           ;keypad calling function.c: 27:     TRISC=0X00;
   501  06E0  1683               	bsf	3,5	;RP0=1, select bank1
   502  06E1  1303               	bcf	3,6	;RP1=0, select bank1
   503  06E2  0187               	clrf	7	;volatile
   504                           
   505                           ;keypad calling function.c: 28:     PORTC=0X00;
   506  06E3  1283               	bcf	3,5	;RP0=0, select bank0
   507  06E4  1303               	bcf	3,6	;RP1=0, select bank0
   508  06E5  0187               	clrf	7	;volatile
   509  06E6                     l881:
   510                           
   511                           ;keypad calling function.c: 29:     TRISD=0X78;
   512  06E6  3078               	movlw	120
   513  06E7  1683               	bsf	3,5	;RP0=1, select bank1
   514  06E8  1303               	bcf	3,6	;RP1=0, select bank1
   515  06E9  0088               	movwf	8	;volatile
   516  06EA                     l883:
   517                           
   518                           ;keypad calling function.c: 30:     PORTD=0X00;
   519  06EA  1283               	bcf	3,5	;RP0=0, select bank0
   520  06EB  1303               	bcf	3,6	;RP1=0, select bank0
   521  06EC  0188               	clrf	8	;volatile
   522  06ED                     l885:
   523                           
   524                           ;keypad calling function.c: 31:     ANSEL=0X00;
   525  06ED  1683               	bsf	3,5	;RP0=1, select bank3
   526  06EE  1703               	bsf	3,6	;RP1=1, select bank3
   527  06EF  0188               	clrf	8	;volatile
   528  06F0                     l887:
   529                           
   530                           ;keypad calling function.c: 32:     ANSELH=0X00;
   531  06F0  0189               	clrf	9	;volatile
   532  06F1                     l889:
   533                           
   534                           ;keypad calling function.c: 33:     LCD(0x38,0);
   535  06F1  01F2               	clrf	LCD@h
   536  06F2  3038               	movlw	56
   537  06F3  120A  118A  261F  120A  118A  	fcall	_LCD
   538  06F8                     l891:
   539                           
   540                           ;keypad calling function.c: 34:     LCD(0x0e,0);
   541  06F8  01F2               	clrf	LCD@h
   542  06F9  300E               	movlw	14
   543  06FA  120A  118A  261F  120A  118A  	fcall	_LCD
   544  06FF                     l893:
   545                           
   546                           ;keypad calling function.c: 36:     {;keypad calling function.c: 37:         first_seg()
      +                          ;
   547  06FF  120A  118A  267E  120A  118A  	fcall	_first_seg
   548  0704                     l895:
   549                           
   550                           ;keypad calling function.c: 38:         second_seg();
   551  0704  120A  118A  2664  120A  118A  	fcall	_second_seg
   552  0709                     l897:
   553                           
   554                           ;keypad calling function.c: 39:         third_seg();
   555  0709  120A  118A  2699  120A  118A  	fcall	_third_seg
   556  070E  2EFF               	goto	l893
   557  070F  120A  118A  2800   	ljmp	start
   558  0712                     __end_of_main:
   559                           
   560                           	psect	text1
   561  0699                     __ptext1:	
   562 ;; *************** function _third_seg *****************
   563 ;; Defined at:
   564 ;;		line 80 in file "keypad calling function.c"
   565 ;; Parameters:    Size  Location     Type
   566 ;;		None
   567 ;; Auto vars:     Size  Location     Type
   568 ;;		None
   569 ;; Return value:  Size  Location     Type
   570 ;;                  1    wreg      void 
   571 ;; Registers used:
   572 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   573 ;; Tracked objects:
   574 ;;		On entry : 0/0
   575 ;;		On exit  : 0/0
   576 ;;		Unchanged: 0/0
   577 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   578 ;;      Params:         0       0       0       0       0
   579 ;;      Locals:         0       0       0       0       0
   580 ;;      Temps:          0       0       0       0       0
   581 ;;      Totals:         0       0       0       0       0
   582 ;;Total ram usage:        0 bytes
   583 ;; Hardware stack levels used: 1
   584 ;; Hardware stack levels required when called: 3
   585 ;; This function calls:
   586 ;;		_keypad
   587 ;; This function is called by:
   588 ;;		_main
   589 ;; This function uses a non-reentrant model
   590 ;;
   591                           
   592                           
   593                           ;psect for function _third_seg
   594  0699                     _third_seg:
   595  0699                     l875:	
   596                           ;incstack = 0
   597                           ; Regs used in _third_seg: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   598                           
   599                           
   600                           ;keypad calling function.c: 82:     RD2=0;
   601  0699  1283               	bcf	3,5	;RP0=0, select bank0
   602  069A  1303               	bcf	3,6	;RP1=0, select bank0
   603  069B  1108               	bcf	8,2	;volatile
   604                           
   605                           ;keypad calling function.c: 83:     RD1=0;
   606  069C  1088               	bcf	8,1	;volatile
   607                           
   608                           ;keypad calling function.c: 84:     RD0=1;
   609  069D  1408               	bsf	8,0	;volatile
   610  069E                     l877:
   611                           
   612                           ;keypad calling function.c: 85:     keypad(3,6,9,11);
   613  069E  3003               	movlw	3
   614  069F  00F4               	movwf	keypad@a
   615  06A0  3000               	movlw	0
   616  06A1  00F5               	movwf	keypad@a+1
   617  06A2  3006               	movlw	6
   618  06A3  00F6               	movwf	keypad@b
   619  06A4  3000               	movlw	0
   620  06A5  00F7               	movwf	keypad@b+1
   621  06A6  3009               	movlw	9
   622  06A7  00F8               	movwf	keypad@c
   623  06A8  3000               	movlw	0
   624  06A9  00F9               	movwf	keypad@c+1
   625  06AA  300B               	movlw	11
   626  06AB  00FA               	movwf	keypad@d
   627  06AC  3000               	movlw	0
   628  06AD  00FB               	movwf	keypad@d+1
   629  06AE  120A  118A  2712  120A  118A  	fcall	_keypad
   630  06B3                     l81:
   631  06B3  0008               	return
   632  06B4                     __end_of_third_seg:
   633                           
   634                           	psect	text2
   635  0664                     __ptext2:	
   636 ;; *************** function _second_seg *****************
   637 ;; Defined at:
   638 ;;		line 73 in file "keypad calling function.c"
   639 ;; Parameters:    Size  Location     Type
   640 ;;		None
   641 ;; Auto vars:     Size  Location     Type
   642 ;;		None
   643 ;; Return value:  Size  Location     Type
   644 ;;                  1    wreg      void 
   645 ;; Registers used:
   646 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   647 ;; Tracked objects:
   648 ;;		On entry : 0/0
   649 ;;		On exit  : 0/0
   650 ;;		Unchanged: 0/0
   651 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   652 ;;      Params:         0       0       0       0       0
   653 ;;      Locals:         0       0       0       0       0
   654 ;;      Temps:          0       0       0       0       0
   655 ;;      Totals:         0       0       0       0       0
   656 ;;Total ram usage:        0 bytes
   657 ;; Hardware stack levels used: 1
   658 ;; Hardware stack levels required when called: 3
   659 ;; This function calls:
   660 ;;		_keypad
   661 ;; This function is called by:
   662 ;;		_main
   663 ;; This function uses a non-reentrant model
   664 ;;
   665                           
   666                           
   667                           ;psect for function _second_seg
   668  0664                     _second_seg:
   669  0664                     l871:	
   670                           ;incstack = 0
   671                           ; Regs used in _second_seg: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   672                           
   673                           
   674                           ;keypad calling function.c: 75:     RD0=0;
   675  0664  1283               	bcf	3,5	;RP0=0, select bank0
   676  0665  1303               	bcf	3,6	;RP1=0, select bank0
   677  0666  1008               	bcf	8,0	;volatile
   678                           
   679                           ;keypad calling function.c: 76:     RD2=0;
   680  0667  1108               	bcf	8,2	;volatile
   681                           
   682                           ;keypad calling function.c: 77:     RD1=1;
   683  0668  1488               	bsf	8,1	;volatile
   684  0669                     l873:
   685                           
   686                           ;keypad calling function.c: 78:     keypad(2,5,8,0);
   687  0669  3002               	movlw	2
   688  066A  00F4               	movwf	keypad@a
   689  066B  3000               	movlw	0
   690  066C  00F5               	movwf	keypad@a+1
   691  066D  3005               	movlw	5
   692  066E  00F6               	movwf	keypad@b
   693  066F  3000               	movlw	0
   694  0670  00F7               	movwf	keypad@b+1
   695  0671  3008               	movlw	8
   696  0672  00F8               	movwf	keypad@c
   697  0673  3000               	movlw	0
   698  0674  00F9               	movwf	keypad@c+1
   699  0675  3000               	movlw	0
   700  0676  00FA               	movwf	keypad@d
   701  0677  00FB               	movwf	keypad@d+1
   702  0678  120A  118A  2712  120A  118A  	fcall	_keypad
   703  067D                     l78:
   704  067D  0008               	return
   705  067E                     __end_of_second_seg:
   706                           
   707                           	psect	text3
   708  067E                     __ptext3:	
   709 ;; *************** function _first_seg *****************
   710 ;; Defined at:
   711 ;;		line 66 in file "keypad calling function.c"
   712 ;; Parameters:    Size  Location     Type
   713 ;;		None
   714 ;; Auto vars:     Size  Location     Type
   715 ;;		None
   716 ;; Return value:  Size  Location     Type
   717 ;;                  1    wreg      void 
   718 ;; Registers used:
   719 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   720 ;; Tracked objects:
   721 ;;		On entry : 0/0
   722 ;;		On exit  : 0/0
   723 ;;		Unchanged: 0/0
   724 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   725 ;;      Params:         0       0       0       0       0
   726 ;;      Locals:         0       0       0       0       0
   727 ;;      Temps:          0       0       0       0       0
   728 ;;      Totals:         0       0       0       0       0
   729 ;;Total ram usage:        0 bytes
   730 ;; Hardware stack levels used: 1
   731 ;; Hardware stack levels required when called: 3
   732 ;; This function calls:
   733 ;;		_keypad
   734 ;; This function is called by:
   735 ;;		_main
   736 ;; This function uses a non-reentrant model
   737 ;;
   738                           
   739                           
   740                           ;psect for function _first_seg
   741  067E                     _first_seg:
   742  067E                     l867:	
   743                           ;incstack = 0
   744                           ; Regs used in _first_seg: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   745                           
   746                           
   747                           ;keypad calling function.c: 68:     RD0=0;
   748  067E  1283               	bcf	3,5	;RP0=0, select bank0
   749  067F  1303               	bcf	3,6	;RP1=0, select bank0
   750  0680  1008               	bcf	8,0	;volatile
   751                           
   752                           ;keypad calling function.c: 69:     RD1=0;
   753  0681  1088               	bcf	8,1	;volatile
   754                           
   755                           ;keypad calling function.c: 70:     RD2=1;
   756  0682  1508               	bsf	8,2	;volatile
   757  0683                     l869:
   758                           
   759                           ;keypad calling function.c: 71:     keypad(1,4,7,10);
   760  0683  3001               	movlw	1
   761  0684  00F4               	movwf	keypad@a
   762  0685  3000               	movlw	0
   763  0686  00F5               	movwf	keypad@a+1
   764  0687  3004               	movlw	4
   765  0688  00F6               	movwf	keypad@b
   766  0689  3000               	movlw	0
   767  068A  00F7               	movwf	keypad@b+1
   768  068B  3007               	movlw	7
   769  068C  00F8               	movwf	keypad@c
   770  068D  3000               	movlw	0
   771  068E  00F9               	movwf	keypad@c+1
   772  068F  300A               	movlw	10
   773  0690  00FA               	movwf	keypad@d
   774  0691  3000               	movlw	0
   775  0692  00FB               	movwf	keypad@d+1
   776  0693  120A  118A  2712  120A  118A  	fcall	_keypad
   777  0698                     l75:
   778  0698  0008               	return
   779  0699                     __end_of_first_seg:
   780                           
   781                           	psect	text4
   782  0712                     __ptext4:	
   783 ;; *************** function _keypad *****************
   784 ;; Defined at:
   785 ;;		line 87 in file "keypad calling function.c"
   786 ;; Parameters:    Size  Location     Type
   787 ;;  a               2    4[COMMON] int 
   788 ;;  b               2    6[COMMON] int 
   789 ;;  c               2    8[COMMON] int 
   790 ;;  d               2   10[COMMON] int 
   791 ;; Auto vars:     Size  Location     Type
   792 ;;		None
   793 ;; Return value:  Size  Location     Type
   794 ;;                  1    wreg      void 
   795 ;; Registers used:
   796 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   797 ;; Tracked objects:
   798 ;;		On entry : 0/0
   799 ;;		On exit  : 0/0
   800 ;;		Unchanged: 0/0
   801 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   802 ;;      Params:         8       0       0       0       0
   803 ;;      Locals:         0       0       0       0       0
   804 ;;      Temps:          1       0       0       0       0
   805 ;;      Totals:         9       0       0       0       0
   806 ;;Total ram usage:        9 bytes
   807 ;; Hardware stack levels used: 1
   808 ;; Hardware stack levels required when called: 2
   809 ;; This function calls:
   810 ;;		_LCD
   811 ;;		_LCD_s
   812 ;; This function is called by:
   813 ;;		_first_seg
   814 ;;		_second_seg
   815 ;;		_third_seg
   816 ;; This function uses a non-reentrant model
   817 ;;
   818                           
   819                           
   820                           ;psect for function _keypad
   821  0712                     _keypad:
   822  0712                     l823:	
   823                           ;incstack = 0
   824                           ; Regs used in _keypad: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   825                           
   826                           
   827                           ;keypad calling function.c: 87: void keypad(int a,int b,int c,int d);keypad calling func
      +                          tion.c: 88: {;keypad calling function.c: 89:     if(RD3==1)
   828  0712  1283               	bcf	3,5	;RP0=0, select bank0
   829  0713  1303               	bcf	3,6	;RP1=0, select bank0
   830  0714  1D88               	btfss	8,3	;volatile
   831  0715  2F17               	goto	u241
   832  0716  2F18               	goto	u240
   833  0717                     u241:
   834  0717  2F32               	goto	l84
   835  0718                     u240:
   836  0718                     l825:
   837                           
   838                           ;keypad calling function.c: 90:     {;keypad calling function.c: 91:         LCD(num[a],
      +                          1);
   839  0718  01F2               	clrf	LCD@h
   840  0719  0AF2               	incf	LCD@h,f
   841  071A  0874               	movf	keypad@a,w
   842  071B  00FC               	movwf	??_keypad
   843  071C  077C               	addwf	??_keypad,w
   844  071D  3E20               	addlw	(low (_num| 0))& (0+255)
   845  071E  0084               	movwf	4
   846  071F  1383               	bcf	3,7	;select IRP bank0
   847  0720  0800               	movf	0,w
   848  0721  120A  118A  261F  120A  118A  	fcall	_LCD
   849  0726                     l827:
   850                           
   851                           ;keypad calling function.c: 92:         T++;
   852  0726  3001               	movlw	1
   853  0727  1283               	bcf	3,5	;RP0=0, select bank0
   854  0728  1303               	bcf	3,6	;RP1=0, select bank0
   855  0729  07B8               	addwf	_T,f
   856  072A  1803               	skipnc
   857  072B  0AB9               	incf	_T+1,f
   858  072C  3000               	movlw	0
   859  072D  07B9               	addwf	_T+1,f
   860  072E                     l85:	
   861                           ;keypad calling function.c: 93:         while(RD3==1);
   862                           
   863  072E  1988               	btfsc	8,3	;volatile
   864  072F  2F31               	goto	u251
   865  0730  2F32               	goto	u250
   866  0731                     u251:
   867  0731  2F2E               	goto	l85
   868  0732                     u250:
   869  0732                     l84:	
   870                           ;keypad calling function.c: 94:     }
   871                           
   872                           
   873                           ;keypad calling function.c: 95:     if(RD4==1)
   874  0732  1E08               	btfss	8,4	;volatile
   875  0733  2F35               	goto	u261
   876  0734  2F36               	goto	u260
   877  0735                     u261:
   878  0735  2F50               	goto	l88
   879  0736                     u260:
   880  0736                     l829:
   881                           
   882                           ;keypad calling function.c: 96:     {;keypad calling function.c: 97:         LCD(num[b],
      +                          1);
   883  0736  01F2               	clrf	LCD@h
   884  0737  0AF2               	incf	LCD@h,f
   885  0738  0876               	movf	keypad@b,w
   886  0739  00FC               	movwf	??_keypad
   887  073A  077C               	addwf	??_keypad,w
   888  073B  3E20               	addlw	(low (_num| 0))& (0+255)
   889  073C  0084               	movwf	4
   890  073D  1383               	bcf	3,7	;select IRP bank0
   891  073E  0800               	movf	0,w
   892  073F  120A  118A  261F  120A  118A  	fcall	_LCD
   893  0744                     l831:
   894                           
   895                           ;keypad calling function.c: 98:         T++;
   896  0744  3001               	movlw	1
   897  0745  1283               	bcf	3,5	;RP0=0, select bank0
   898  0746  1303               	bcf	3,6	;RP1=0, select bank0
   899  0747  07B8               	addwf	_T,f
   900  0748  1803               	skipnc
   901  0749  0AB9               	incf	_T+1,f
   902  074A  3000               	movlw	0
   903  074B  07B9               	addwf	_T+1,f
   904  074C                     l89:	
   905                           ;keypad calling function.c: 99:         while(RD4==1);
   906                           
   907  074C  1A08               	btfsc	8,4	;volatile
   908  074D  2F4F               	goto	u271
   909  074E  2F50               	goto	u270
   910  074F                     u271:
   911  074F  2F4C               	goto	l89
   912  0750                     u270:
   913  0750                     l88:	
   914                           ;keypad calling function.c: 100:     }
   915                           
   916                           
   917                           ;keypad calling function.c: 101:     if(RD5==1)
   918  0750  1E88               	btfss	8,5	;volatile
   919  0751  2F53               	goto	u281
   920  0752  2F54               	goto	u280
   921  0753                     u281:
   922  0753  2F6E               	goto	l92
   923  0754                     u280:
   924  0754                     l833:
   925                           
   926                           ;keypad calling function.c: 102:     {;keypad calling function.c: 103:         LCD(num[c
      +                          ],1);
   927  0754  01F2               	clrf	LCD@h
   928  0755  0AF2               	incf	LCD@h,f
   929  0756  0878               	movf	keypad@c,w
   930  0757  00FC               	movwf	??_keypad
   931  0758  077C               	addwf	??_keypad,w
   932  0759  3E20               	addlw	(low (_num| 0))& (0+255)
   933  075A  0084               	movwf	4
   934  075B  1383               	bcf	3,7	;select IRP bank0
   935  075C  0800               	movf	0,w
   936  075D  120A  118A  261F  120A  118A  	fcall	_LCD
   937  0762                     l835:
   938                           
   939                           ;keypad calling function.c: 104:         T++;
   940  0762  3001               	movlw	1
   941  0763  1283               	bcf	3,5	;RP0=0, select bank0
   942  0764  1303               	bcf	3,6	;RP1=0, select bank0
   943  0765  07B8               	addwf	_T,f
   944  0766  1803               	skipnc
   945  0767  0AB9               	incf	_T+1,f
   946  0768  3000               	movlw	0
   947  0769  07B9               	addwf	_T+1,f
   948  076A                     l93:	
   949                           ;keypad calling function.c: 105:         while(RD5==1);
   950                           
   951  076A  1A88               	btfsc	8,5	;volatile
   952  076B  2F6D               	goto	u291
   953  076C  2F6E               	goto	u290
   954  076D                     u291:
   955  076D  2F6A               	goto	l93
   956  076E                     u290:
   957  076E                     l92:	
   958                           ;keypad calling function.c: 106:     }
   959                           
   960                           
   961                           ;keypad calling function.c: 107:     if((RD6==1)&&(d==0))
   962  076E  1F08               	btfss	8,6	;volatile
   963  076F  2F71               	goto	u301
   964  0770  2F72               	goto	u300
   965  0771                     u301:
   966  0771  2F98               	goto	l96
   967  0772                     u300:
   968  0772                     l837:
   969  0772  087A               	movf	keypad@d,w
   970  0773  047B               	iorwf	keypad@d+1,w
   971  0774  1D03               	btfss	3,2
   972  0775  2F77               	goto	u311
   973  0776  2F78               	goto	u310
   974  0777                     u311:
   975  0777  2F98               	goto	l96
   976  0778                     u310:
   977  0778                     l839:
   978                           
   979                           ;keypad calling function.c: 108:     {;keypad calling function.c: 109:         LCD(num[d
      +                          ],1);
   980  0778  01F2               	clrf	LCD@h
   981  0779  0AF2               	incf	LCD@h,f
   982  077A  087A               	movf	keypad@d,w
   983  077B  00FC               	movwf	??_keypad
   984  077C  077C               	addwf	??_keypad,w
   985  077D  3E20               	addlw	(low (_num| 0))& (0+255)
   986  077E  0084               	movwf	4
   987  077F  1383               	bcf	3,7	;select IRP bank0
   988  0780  0800               	movf	0,w
   989  0781  120A  118A  261F  120A  118A  	fcall	_LCD
   990  0786                     l841:
   991                           
   992                           ;keypad calling function.c: 110:         T++;
   993  0786  3001               	movlw	1
   994  0787  1283               	bcf	3,5	;RP0=0, select bank0
   995  0788  1303               	bcf	3,6	;RP1=0, select bank0
   996  0789  07B8               	addwf	_T,f
   997  078A  1803               	skipnc
   998  078B  0AB9               	incf	_T+1,f
   999  078C  3000               	movlw	0
  1000  078D  07B9               	addwf	_T+1,f
  1001  078E                     l97:	
  1002                           ;keypad calling function.c: 111:         while((RD6==1)&&(d==0));
  1003                           
  1004  078E  1F08               	btfss	8,6	;volatile
  1005  078F  2F91               	goto	u321
  1006  0790  2F92               	goto	u320
  1007  0791                     u321:
  1008  0791  2F98               	goto	l96
  1009  0792                     u320:
  1010  0792                     l843:
  1011  0792  087A               	movf	keypad@d,w
  1012  0793  047B               	iorwf	keypad@d+1,w
  1013  0794  1903               	btfsc	3,2
  1014  0795  2F97               	goto	u331
  1015  0796  2F98               	goto	u330
  1016  0797                     u331:
  1017  0797  2F8E               	goto	l97
  1018  0798                     u330:
  1019  0798                     l96:	
  1020                           ;keypad calling function.c: 112:     }
  1021                           
  1022                           
  1023                           ;keypad calling function.c: 113:     if ((RD6==1)&&(d==10))
  1024  0798  1F08               	btfss	8,6	;volatile
  1025  0799  2F9B               	goto	u341
  1026  079A  2F9C               	goto	u340
  1027  079B                     u341:
  1028  079B  2FD3               	goto	l859
  1029  079C                     u340:
  1030  079C                     l845:
  1031  079C  300A               	movlw	10
  1032  079D  067A               	xorwf	keypad@d,w
  1033  079E  047B               	iorwf	keypad@d+1,w
  1034  079F  1D03               	btfss	3,2
  1035  07A0  2FA2               	goto	u351
  1036  07A1  2FA3               	goto	u350
  1037  07A2                     u351:
  1038  07A2  2FD3               	goto	l859
  1039  07A3                     u350:
  1040  07A3                     l847:
  1041                           
  1042                           ;keypad calling function.c: 114:     {;keypad calling function.c: 115:         if (T==10
      +                          )
  1043  07A3  300A               	movlw	10
  1044  07A4  0638               	xorwf	_T,w
  1045  07A5  0439               	iorwf	_T+1,w
  1046  07A6  1D03               	btfss	3,2
  1047  07A7  2FA9               	goto	u361
  1048  07A8  2FAA               	goto	u360
  1049  07A9                     u361:
  1050  07A9  2FC5               	goto	l855
  1051  07AA                     u360:
  1052  07AA                     l849:
  1053                           
  1054                           ;keypad calling function.c: 116:         {;keypad calling function.c: 117:             L
      +                          CD(0xc7,0);
  1055  07AA  01F2               	clrf	LCD@h
  1056  07AB  30C7               	movlw	199
  1057  07AC  120A  118A  261F  120A  118A  	fcall	_LCD
  1058  07B1                     l851:
  1059                           
  1060                           ;keypad calling function.c: 118:             LCD_s("calling..");
  1061  07B1  300E               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1062  07B2  120A  118A  26B4  120A  118A  	fcall	_LCD_s
  1063  07B7                     l104:	
  1064                           ;keypad calling function.c: 119:             while((RD6==1)&&(d==10));
  1065                           
  1066  07B7  1283               	bcf	3,5	;RP0=0, select bank0
  1067  07B8  1303               	bcf	3,6	;RP1=0, select bank0
  1068  07B9  1F08               	btfss	8,6	;volatile
  1069  07BA  2FBC               	goto	u371
  1070  07BB  2FBD               	goto	u370
  1071  07BC                     u371:
  1072  07BC  2FD3               	goto	l109
  1073  07BD                     u370:
  1074  07BD                     l853:
  1075  07BD  300A               	movlw	10
  1076  07BE  067A               	xorwf	keypad@d,w
  1077  07BF  047B               	iorwf	keypad@d+1,w
  1078  07C0  1903               	btfsc	3,2
  1079  07C1  2FC3               	goto	u381
  1080  07C2  2FC4               	goto	u380
  1081  07C3                     u381:
  1082  07C3  2FB7               	goto	l104
  1083  07C4                     u380:
  1084  07C4  2FD3               	goto	l859
  1085  07C5                     l855:
  1086                           
  1087                           ;keypad calling function.c: 122:         {;keypad calling function.c: 123:             L
      +                          CD(0xc0,0);
  1088  07C5  01F2               	clrf	LCD@h
  1089  07C6  30C0               	movlw	192
  1090  07C7  120A  118A  261F  120A  118A  	fcall	_LCD
  1091  07CC                     l857:
  1092                           
  1093                           ;keypad calling function.c: 124:             LCD_s("Wrong Number");
  1094  07CC  3001               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1095  07CD  120A  118A  26B4  120A  118A  	fcall	_LCD_s
  1096  07D2  2FD3               	goto	l859
  1097  07D3                     l109:	
  1098                           ;keypad calling function.c: 125:         }
  1099                           
  1100  07D3                     l859:
  1101                           
  1102                           ;keypad calling function.c: 127:     if ((RD6==1)&&(d==11))
  1103  07D3  1283               	bcf	3,5	;RP0=0, select bank0
  1104  07D4  1303               	bcf	3,6	;RP1=0, select bank0
  1105  07D5  1F08               	btfss	8,6	;volatile
  1106  07D6  2FD8               	goto	u391
  1107  07D7  2FD9               	goto	u390
  1108  07D8                     u391:
  1109  07D8  2FEB               	goto	l111
  1110  07D9                     u390:
  1111  07D9                     l861:
  1112  07D9  300B               	movlw	11
  1113  07DA  067A               	xorwf	keypad@d,w
  1114  07DB  047B               	iorwf	keypad@d+1,w
  1115  07DC  1D03               	btfss	3,2
  1116  07DD  2FDF               	goto	u401
  1117  07DE  2FE0               	goto	u400
  1118  07DF                     u401:
  1119  07DF  2FEB               	goto	l111
  1120  07E0                     u400:
  1121  07E0                     l863:
  1122                           
  1123                           ;keypad calling function.c: 128:     {;keypad calling function.c: 129:         LCD(0x01,
      +                          0);
  1124  07E0  01F2               	clrf	LCD@h
  1125  07E1  3001               	movlw	1
  1126  07E2  120A  118A  261F  120A  118A  	fcall	_LCD
  1127  07E7                     l865:
  1128                           
  1129                           ;keypad calling function.c: 130:         T=0;
  1130  07E7  1283               	bcf	3,5	;RP0=0, select bank0
  1131  07E8  1303               	bcf	3,6	;RP1=0, select bank0
  1132  07E9  01B8               	clrf	_T
  1133  07EA  01B9               	clrf	_T+1
  1134  07EB                     l111:
  1135  07EB  0008               	return
  1136  07EC                     __end_of_keypad:
  1137                           
  1138                           	psect	text5
  1139  06B4                     __ptext5:	
  1140 ;; *************** function _LCD_s *****************
  1141 ;; Defined at:
  1142 ;;		line 56 in file "keypad calling function.c"
  1143 ;; Parameters:    Size  Location     Type
  1144 ;;  g               1    wreg     PTR unsigned char 
  1145 ;;		 -> STR_2(13), STR_1(10), 
  1146 ;; Auto vars:     Size  Location     Type
  1147 ;;  g               1    3[COMMON] PTR unsigned char 
  1148 ;;		 -> STR_2(13), STR_1(10), 
  1149 ;; Return value:  Size  Location     Type
  1150 ;;                  1    wreg      void 
  1151 ;; Registers used:
  1152 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1153 ;; Tracked objects:
  1154 ;;		On entry : 0/0
  1155 ;;		On exit  : 0/0
  1156 ;;		Unchanged: 0/0
  1157 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1158 ;;      Params:         0       0       0       0       0
  1159 ;;      Locals:         1       0       0       0       0
  1160 ;;      Temps:          1       0       0       0       0
  1161 ;;      Totals:         2       0       0       0       0
  1162 ;;Total ram usage:        2 bytes
  1163 ;; Hardware stack levels used: 1
  1164 ;; Hardware stack levels required when called: 1
  1165 ;; This function calls:
  1166 ;;		_pulse
  1167 ;; This function is called by:
  1168 ;;		_keypad
  1169 ;; This function uses a non-reentrant model
  1170 ;;
  1171                           
  1172                           
  1173                           ;psect for function _LCD_s
  1174  06B4                     _LCD_s:
  1175                           
  1176                           ;incstack = 0
  1177                           ; Regs used in _LCD_s: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1178                           ;LCD_s@g stored from wreg
  1179  06B4  00F3               	movwf	LCD_s@g
  1180  06B5                     l813:
  1181                           
  1182                           ;keypad calling function.c: 56: void LCD_s(char *g);keypad calling function.c: 57: {;key
      +                          pad calling function.c: 58:     RA2=1;
  1183  06B5  1283               	bcf	3,5	;RP0=0, select bank0
  1184  06B6  1303               	bcf	3,6	;RP1=0, select bank0
  1185  06B7  1505               	bsf	5,2	;volatile
  1186                           
  1187                           ;keypad calling function.c: 59:     RA1=0;
  1188  06B8  1085               	bcf	5,1	;volatile
  1189                           
  1190                           ;keypad calling function.c: 60:     while(*g)
  1191  06B9  2ECD               	goto	l821
  1192  06BA                     l815:
  1193                           
  1194                           ;keypad calling function.c: 61:     {;keypad calling function.c: 62:     PORTC=*g++;
  1195  06BA  0873               	movf	LCD_s@g,w
  1196  06BB  0084               	movwf	4
  1197  06BC  120A  118A  2003  120A  118A  	fcall	stringdir
  1198  06C1  1283               	bcf	3,5	;RP0=0, select bank0
  1199  06C2  1303               	bcf	3,6	;RP1=0, select bank0
  1200  06C3  0087               	movwf	7	;volatile
  1201  06C4                     l817:
  1202  06C4  3001               	movlw	1
  1203  06C5  00F2               	movwf	??_LCD_s
  1204  06C6  0872               	movf	??_LCD_s,w
  1205  06C7  07F3               	addwf	LCD_s@g,f
  1206  06C8                     l819:
  1207                           
  1208                           ;keypad calling function.c: 63:     pulse();
  1209  06C8  120A  118A  264B  120A  118A  	fcall	_pulse
  1210  06CD                     l821:
  1211                           
  1212                           ;keypad calling function.c: 60:     while(*g)
  1213  06CD  0873               	movf	LCD_s@g,w
  1214  06CE  0084               	movwf	4
  1215  06CF  120A  118A  2003  120A  118A  	fcall	stringdir
  1216  06D4  3A00               	xorlw	0
  1217  06D5  1D03               	skipz
  1218  06D6  2ED8               	goto	u231
  1219  06D7  2ED9               	goto	u230
  1220  06D8                     u231:
  1221  06D8  2EBA               	goto	l815
  1222  06D9                     u230:
  1223  06D9                     l72:
  1224  06D9  0008               	return
  1225  06DA                     __end_of_LCD_s:
  1226                           
  1227                           	psect	text6
  1228  061F                     __ptext6:	
  1229 ;; *************** function _LCD *****************
  1230 ;; Defined at:
  1231 ;;		line 49 in file "keypad calling function.c"
  1232 ;; Parameters:    Size  Location     Type
  1233 ;;  g               1    wreg     unsigned char 
  1234 ;;  h               1    2[COMMON] unsigned char 
  1235 ;; Auto vars:     Size  Location     Type
  1236 ;;  g               1    3[COMMON] unsigned char 
  1237 ;; Return value:  Size  Location     Type
  1238 ;;                  1    wreg      void 
  1239 ;; Registers used:
  1240 ;;		wreg, status,2, status,0, pclath, cstack
  1241 ;; Tracked objects:
  1242 ;;		On entry : 0/0
  1243 ;;		On exit  : 0/0
  1244 ;;		Unchanged: 0/0
  1245 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1246 ;;      Params:         1       0       0       0       0
  1247 ;;      Locals:         1       0       0       0       0
  1248 ;;      Temps:          0       0       0       0       0
  1249 ;;      Totals:         2       0       0       0       0
  1250 ;;Total ram usage:        2 bytes
  1251 ;; Hardware stack levels used: 1
  1252 ;; Hardware stack levels required when called: 1
  1253 ;; This function calls:
  1254 ;;		_pulse
  1255 ;; This function is called by:
  1256 ;;		_main
  1257 ;;		_keypad
  1258 ;; This function uses a non-reentrant model
  1259 ;;
  1260                           
  1261                           
  1262                           ;psect for function _LCD
  1263  061F                     _LCD:
  1264                           
  1265                           ;incstack = 0
  1266                           ; Regs used in _LCD: [wreg+status,2+status,0+pclath+cstack]
  1267                           ;LCD@g stored from wreg
  1268  061F  00F3               	movwf	LCD@g
  1269  0620                     l807:
  1270                           
  1271                           ;keypad calling function.c: 49: void LCD(char g,char h);keypad calling function.c: 50: {
      +                          ;keypad calling function.c: 51:     RA2=h;
  1272  0620  1872               	btfsc	LCD@h,0
  1273  0621  2E23               	goto	u211
  1274  0622  2E27               	goto	u210
  1275  0623                     u211:
  1276  0623  1283               	bcf	3,5	;RP0=0, select bank0
  1277  0624  1303               	bcf	3,6	;RP1=0, select bank0
  1278  0625  1505               	bsf	5,2	;volatile
  1279  0626  2E2A               	goto	u224
  1280  0627                     u210:
  1281  0627  1283               	bcf	3,5	;RP0=0, select bank0
  1282  0628  1303               	bcf	3,6	;RP1=0, select bank0
  1283  0629  1105               	bcf	5,2	;volatile
  1284  062A                     u224:
  1285                           
  1286                           ;keypad calling function.c: 52:     RA1=0;
  1287  062A  1085               	bcf	5,1	;volatile
  1288  062B                     l809:
  1289                           
  1290                           ;keypad calling function.c: 53:     PORTC=g;
  1291  062B  0873               	movf	LCD@g,w
  1292  062C  0087               	movwf	7	;volatile
  1293  062D                     l811:
  1294                           
  1295                           ;keypad calling function.c: 54:     pulse();
  1296  062D  120A  118A  264B  120A  118A  	fcall	_pulse
  1297  0632                     l66:
  1298  0632  0008               	return
  1299  0633                     __end_of_LCD:
  1300                           
  1301                           	psect	text7
  1302  064B                     __ptext7:	
  1303 ;; *************** function _pulse *****************
  1304 ;; Defined at:
  1305 ;;		line 42 in file "keypad calling function.c"
  1306 ;; Parameters:    Size  Location     Type
  1307 ;;		None
  1308 ;; Auto vars:     Size  Location     Type
  1309 ;;		None
  1310 ;; Return value:  Size  Location     Type
  1311 ;;                  1    wreg      void 
  1312 ;; Registers used:
  1313 ;;		wreg
  1314 ;; Tracked objects:
  1315 ;;		On entry : 0/0
  1316 ;;		On exit  : 0/0
  1317 ;;		Unchanged: 0/0
  1318 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1319 ;;      Params:         0       0       0       0       0
  1320 ;;      Locals:         0       0       0       0       0
  1321 ;;      Temps:          2       0       0       0       0
  1322 ;;      Totals:         2       0       0       0       0
  1323 ;;Total ram usage:        2 bytes
  1324 ;; Hardware stack levels used: 1
  1325 ;; This function calls:
  1326 ;;		Nothing
  1327 ;; This function is called by:
  1328 ;;		_LCD
  1329 ;;		_LCD_s
  1330 ;; This function uses a non-reentrant model
  1331 ;;
  1332                           
  1333                           
  1334                           ;psect for function _pulse
  1335  064B                     _pulse:
  1336  064B                     l801:	
  1337                           ;incstack = 0
  1338                           ; Regs used in _pulse: [wreg]
  1339                           
  1340                           
  1341                           ;keypad calling function.c: 44:     RA0=1;
  1342  064B  1283               	bcf	3,5	;RP0=0, select bank0
  1343  064C  1303               	bcf	3,6	;RP1=0, select bank0
  1344  064D  1405               	bsf	5,0	;volatile
  1345  064E                     l803:
  1346                           
  1347                           ;keypad calling function.c: 45:     _delay((unsigned long)((500)*(400000/4000.0)));
  1348  064E  3041               	movlw	65
  1349  064F  00F1               	movwf	??_pulse+1
  1350  0650  30EE               	movlw	238
  1351  0651  00F0               	movwf	??_pulse
  1352  0652                     u417:
  1353  0652  0BF0               	decfsz	??_pulse,f
  1354  0653  2E52               	goto	u417
  1355  0654  0BF1               	decfsz	??_pulse+1,f
  1356  0655  2E52               	goto	u417
  1357  0656  0000               	nop
  1358  0657                     l805:
  1359                           
  1360                           ;keypad calling function.c: 46:     RA0=0;
  1361  0657  1283               	bcf	3,5	;RP0=0, select bank0
  1362  0658  1303               	bcf	3,6	;RP1=0, select bank0
  1363  0659  1005               	bcf	5,0	;volatile
  1364                           
  1365                           ;keypad calling function.c: 47:     _delay((unsigned long)((500)*(400000/4000.0)));
  1366  065A  3041               	movlw	65
  1367  065B  00F1               	movwf	??_pulse+1
  1368  065C  30EE               	movlw	238
  1369  065D  00F0               	movwf	??_pulse
  1370  065E                     u427:
  1371  065E  0BF0               	decfsz	??_pulse,f
  1372  065F  2E5E               	goto	u427
  1373  0660  0BF1               	decfsz	??_pulse+1,f
  1374  0661  2E5E               	goto	u427
  1375  0662  0000               	nop
  1376  0663                     l63:
  1377  0663  0008               	return
  1378  0664                     __end_of_pulse:
  1379  007E                     btemp	set	126	;btemp
  1380  007E                     wtemp0	set	126

Data Sizes:
    Strings     23
    Constant    0
    Data        24
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      13
    BANK0            80      0      26
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    LCD_s@g	PTR unsigned char  size(1) Largest target is 13
		 -> STR_2(CODE[13]), STR_1(CODE[10]), 


Critical Paths under _main in COMMON

    _third_seg->_keypad
    _second_seg->_keypad
    _first_seg->_keypad
    _keypad->_LCD
    _keypad->_LCD_s
    _LCD_s->_pulse
    _LCD->_pulse

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    6575
                                _LCD
                          _first_seg
                         _second_seg
                          _third_seg
 ---------------------------------------------------------------------------------
 (1) _third_seg                                            0     0      0    1949
                             _keypad
 ---------------------------------------------------------------------------------
 (1) _second_seg                                           0     0      0    1949
                             _keypad
 ---------------------------------------------------------------------------------
 (1) _first_seg                                            0     0      0    1949
                             _keypad
 ---------------------------------------------------------------------------------
 (2) _keypad                                               9     1      8    1949
                                              4 COMMON     9     1      8
                                _LCD
                              _LCD_s
 ---------------------------------------------------------------------------------
 (3) _LCD_s                                                2     2      0     111
                                              2 COMMON     2     2      0
                              _pulse
 ---------------------------------------------------------------------------------
 (3) _LCD                                                  2     1      1     728
                                              2 COMMON     2     1      1
                              _pulse
 ---------------------------------------------------------------------------------
 (4) _pulse                                                2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD
     _pulse
   _first_seg
     _keypad
       _LCD
       _LCD_s
         _pulse
   _second_seg
     _keypad
   _third_seg
     _keypad

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      0      1A       5       32.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      D       D       1       92.9%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      27      12        0.0%
ABS                  0      0      27       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Thu Mar 23 14:31:27 2023

                      _T 0038                        pc 0002                       l63 0663  
                     l72 06D9                       l81 06B3                       l66 0632  
                     l75 0698                       l92 076E                       l84 0732  
                     l93 076A                       l85 072E                       l78 067D  
                     l96 0798                       l88 0750                       l97 078E  
                     l89 074C                       fsr 0004                      l111 07EB  
                    l104 07B7                      l109 07D3                      l801 064B  
                    l803 064E                      l811 062D                      l805 0657  
                    l821 06CD                      l813 06B5                      l807 0620  
                    l815 06BA                      l831 0744                      l823 0712  
                    l809 062B                      l817 06C4                      l841 0786  
                    l833 0754                      l825 0718                      l819 06C8  
                    l851 07B1                      l843 0792                      l835 0762  
                    l827 0726                      l861 07D9                      l853 07BD  
                    l845 079C                      l837 0772                      l829 0736  
                    l863 07E0                      l855 07C5                      l847 07A3  
                    l839 0778                      l871 0664                      l865 07E7  
                    l857 07CC                      l849 07AA                      l873 0669  
                    l881 06E6                      l859 07D3                      l867 067E  
                    l875 0699                      l891 06F8                      l883 06EA  
                    l869 0683                      l877 069E                      l893 06FF  
                    l885 06ED                      l895 0704                      l887 06F0  
                    l879 06DA                      l897 0709                      l889 06F1  
                    _RA0 0028                      _LCD 061F                      _RA1 0029  
                    _RA2 002A                      _RD0 0040                      _RD1 0041  
                    _RD2 0042                      _RD3 0043                      _RD4 0044  
                    _RD5 0045                      _RD6 0046                      u210 0627  
                    u211 0623                      u300 0772                      u301 0771  
                    u230 06D9                      u310 0778                      u231 06D8  
                    u311 0777                      u224 062A                      u400 07E0  
                    u320 0792                      u240 0718                      u401 07DF  
                    u321 0791                      u241 0717                      u330 0798  
                    u250 0732                      u331 0797                      u251 0731  
                    u340 079C                      u260 0736                      u341 079B  
                    u261 0735                      u350 07A3                      u270 0750  
                    u351 07A2                      u271 074F                      u360 07AA  
                    u280 0754                      u417 0652                      u361 07A9  
                    u281 0753                      u370 07BD                      u290 076E  
                    u427 065E                      u371 07BC                      u291 076D  
                    u380 07C4                      u381 07C3                      u390 07D9  
                    u391 07D8                      _num 0020                      fsr0 0004  
                    indf 0000                     LCD@g 0073                     LCD@h 0072  
                   ?_LCD 0072                     STR_1 0016                     STR_2 0009  
                   _main 06DA                     btemp 007E                     start 0000  
                  ??_LCD 0073                    ?_main 0070                    _ANSEL 0188  
                  _LCD_s 06B4                    _PORTA 0005                    _PORTC 0007  
                  _PORTD 0008                    _TRISA 0085                    _TRISC 0087  
                  _TRISD 0088                    _pulse 064B                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 07EC  
           __end_of_main 0712                   ??_main 007D                   ?_LCD_s 0070  
                 LCD_s@g 0073                   ?_pulse 0070                   _ANSELH 0189  
                 _keypad 0712  __end_of__initialization 07FC            __end_of_LCD_s 06DA  
         __pcstackCOMMON 0070             __pidataBANK0 0633            __end_of_pulse 0664  
                ??_LCD_s 0072                  ??_pulse 0070               __pbssBANK0 0038  
     __size_of_first_seg 001B               __pmaintext 06DA                  ?_keypad 0074  
     __size_of_third_seg 001B               __stringtab 0003          __size_of_keypad 00DA  
      __end_of_first_seg 0699                  __ptext1 0699                  __ptext2 0664  
                __ptext3 067E                  __ptext4 0712                  __ptext5 06B4  
                __ptext6 061F                  __ptext7 064B             __size_of_LCD 0014  
   end_of_initialization 07FC               _second_seg 0664                  keypad@a 0074  
                keypad@b 0076                  keypad@c 0078                  keypad@d 007A  
      __end_of_third_seg 06B4           __end_of_keypad 07EC      start_initialization 07EC  
            __end_of_LCD 0633              ?_second_seg 0070               init_fetch0 060C  
            __pdataBANK0 0020                 ??_keypad 007C                ___latbits 0002  
              __pstrings 0003      __size_of_second_seg 001A           __size_of_LCD_s 0026  
              _first_seg 067E           __size_of_pulse 0019                _third_seg 0699  
            __stringbase 0008               ?_first_seg 0070               ?_third_seg 0070  
     __end_of__stringtab 0009             ??_second_seg 007D            __size_of_main 0038  
     __end_of_second_seg 067E              ??_first_seg 007D                 init_ram0 0610  
              stringcode 0003              ??_third_seg 007D                 stringdir 0003  
               stringtab 0003  
